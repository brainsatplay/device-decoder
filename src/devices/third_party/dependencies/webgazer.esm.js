var bp;(()=>{var __webpack_modules__={483:(I,v,x)=>{I.exports=function w(S,N,R){function E(P,D){if(!N[P]){if(!S[P]){if(L)return L(P,!0);var O=new Error("Cannot find module '"+P+"'");throw O.code="MODULE_NOT_FOUND",O}var G=N[P]={exports:{}};S[P][0].call(G.exports,function(W){var X=S[P][1][W];return E(X||W)},G,G.exports,w,S,N,R)}return N[P].exports}for(var L=void 0,V=0;V<R.length;V++)E(R[V]);return E}({1:[function(w,S,N){(function(R){"use strict";var E,L,V=R.MutationObserver||R.WebKitMutationObserver;if(V){var P=0,D=new V(X),O=R.document.createTextNode("");D.observe(O,{characterData:!0}),E=function(){O.data=P=++P%2}}else if(R.setImmediate||R.MessageChannel===void 0)E="document"in R&&"onreadystatechange"in R.document.createElement("script")?function(){var j=R.document.createElement("script");j.onreadystatechange=function(){X(),j.onreadystatechange=null,j.parentNode.removeChild(j),j=null},R.document.documentElement.appendChild(j)}:function(){setTimeout(X,0)};else{var G=new R.MessageChannel;G.port1.onmessage=X,E=function(){G.port2.postMessage(0)}}var W=[];function X(){var j,K;L=!0;for(var st=W.length;st;){for(K=W,W=[],j=-1;++j<st;)K[j]();st=W.length}L=!1}function U(j){W.push(j)!==1||L||E()}S.exports=U}).call(this,x.g!==void 0?x.g:typeof self<"u"?self:typeof window<"u"?window:{})},{}],2:[function(w,S,N){"use strict";var R=w(1);function E(){}var L={},V=["REJECTED"],P=["FULFILLED"],D=["PENDING"];function O(nt){if(typeof nt!="function")throw new TypeError("resolver must be a function");this.state=D,this.queue=[],this.outcome=void 0,nt!==E&&U(this,nt)}function G(nt,pt,ot){this.promise=nt,typeof pt=="function"&&(this.onFulfilled=pt,this.callFulfilled=this.otherCallFulfilled),typeof ot=="function"&&(this.onRejected=ot,this.callRejected=this.otherCallRejected)}function W(nt,pt,ot){R(function(){var q;try{q=pt(ot)}catch(bt){return L.reject(nt,bt)}q===nt?L.reject(nt,new TypeError("Cannot resolve promise with itself")):L.resolve(nt,q)})}function X(nt){var pt=nt&&nt.then;if(nt&&(typeof nt=="object"||typeof nt=="function")&&typeof pt=="function")return function(){pt.apply(nt,arguments)}}function U(nt,pt){var ot=!1;function q(Xt){ot||(ot=!0,L.reject(nt,Xt))}function bt(Xt){ot||(ot=!0,L.resolve(nt,Xt))}function $t(){pt(bt,q)}var zt=j($t);zt.status==="error"&&q(zt.value)}function j(nt,pt){var ot={};try{ot.value=nt(pt),ot.status="success"}catch(q){ot.status="error",ot.value=q}return ot}function K(nt){return nt instanceof this?nt:L.resolve(new this(E),nt)}function st(nt){var pt=new this(E);return L.reject(pt,nt)}function H(nt){var pt=this;if(Object.prototype.toString.call(nt)!=="[object Array]")return this.reject(new TypeError("must be an array"));var ot=nt.length,q=!1;if(!ot)return this.resolve([]);for(var bt=new Array(ot),$t=0,zt=-1,Xt=new this(E);++zt<ot;)Zt(nt[zt],zt);return Xt;function Zt(ie,Ut){function z(Jt){bt[Ut]=Jt,++$t!==ot||q||(q=!0,L.resolve(Xt,bt))}pt.resolve(ie).then(z,function(Jt){q||(q=!0,L.reject(Xt,Jt))})}}function at(nt){var pt=this;if(Object.prototype.toString.call(nt)!=="[object Array]")return this.reject(new TypeError("must be an array"));var ot=nt.length,q=!1;if(!ot)return this.resolve([]);for(var bt=-1,$t=new this(E);++bt<ot;)zt(nt[bt]);return $t;function zt(Xt){pt.resolve(Xt).then(function(Zt){q||(q=!0,L.resolve($t,Zt))},function(Zt){q||(q=!0,L.reject($t,Zt))})}}S.exports=O,O.prototype.catch=function(nt){return this.then(null,nt)},O.prototype.then=function(nt,pt){if(typeof nt!="function"&&this.state===P||typeof pt!="function"&&this.state===V)return this;var ot=new this.constructor(E);return this.state!==D?W(ot,this.state===P?nt:pt,this.outcome):this.queue.push(new G(ot,nt,pt)),ot},G.prototype.callFulfilled=function(nt){L.resolve(this.promise,nt)},G.prototype.otherCallFulfilled=function(nt){W(this.promise,this.onFulfilled,nt)},G.prototype.callRejected=function(nt){L.reject(this.promise,nt)},G.prototype.otherCallRejected=function(nt){W(this.promise,this.onRejected,nt)},L.resolve=function(nt,pt){var ot=j(X,pt);if(ot.status==="error")return L.reject(nt,ot.value);var q=ot.value;if(q)U(nt,q);else{nt.state=P,nt.outcome=pt;for(var bt=-1,$t=nt.queue.length;++bt<$t;)nt.queue[bt].callFulfilled(pt)}return nt},L.reject=function(nt,pt){nt.state=V,nt.outcome=pt;for(var ot=-1,q=nt.queue.length;++ot<q;)nt.queue[ot].callRejected(pt);return nt},O.resolve=K,O.reject=st,O.all=H,O.race=at},{1:1}],3:[function(w,S,N){(function(R){"use strict";typeof R.Promise!="function"&&(R.Promise=w(2))}).call(this,x.g!==void 0?x.g:typeof self<"u"?self:typeof window<"u"?window:{})},{2:2}],4:[function(w,S,N){"use strict";var R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(J){return typeof J}:function(J){return J&&typeof Symbol=="function"&&J.constructor===Symbol&&J!==Symbol.prototype?"symbol":typeof J};function E(J,it){if(!(J instanceof it))throw new TypeError("Cannot call a class as a function")}function L(){try{if(typeof indexedDB<"u")return indexedDB;if(typeof webkitIndexedDB<"u")return webkitIndexedDB;if(typeof mozIndexedDB<"u")return mozIndexedDB;if(typeof OIndexedDB<"u")return OIndexedDB;if(typeof msIndexedDB<"u")return msIndexedDB}catch{return}}var V=L();function P(){try{if(!V)return!1;var J=typeof openDatabase<"u"&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform),it=typeof fetch=="function"&&fetch.toString().indexOf("[native code")!==-1;return(!J||it)&&typeof indexedDB<"u"&&typeof IDBKeyRange<"u"}catch{return!1}}function D(J,it){J=J||[],it=it||{};try{return new Blob(J,it)}catch(xt){if(xt.name!=="TypeError")throw xt;for(var ut=new(typeof BlobBuilder<"u"?BlobBuilder:typeof MSBlobBuilder<"u"?MSBlobBuilder:typeof MozBlobBuilder<"u"?MozBlobBuilder:WebKitBlobBuilder),vt=0;vt<J.length;vt+=1)ut.append(J[vt]);return ut.getBlob(it.type)}}typeof Promise>"u"&&w(3);var O=Promise;function G(J,it){it&&J.then(function(ut){it(null,ut)},function(ut){it(ut)})}function W(J,it,ut){typeof it=="function"&&J.then(it),typeof ut=="function"&&J.catch(ut)}function X(J){return typeof J!="string"&&(console.warn(J+" used as a key, but it is not a string."),J=String(J)),J}function U(){if(arguments.length&&typeof arguments[arguments.length-1]=="function")return arguments[arguments.length-1]}var j="local-forage-detect-blob-support",K=void 0,st={},H=Object.prototype.toString,at="readonly",nt="readwrite";function pt(J){for(var it=J.length,ut=new ArrayBuffer(it),vt=new Uint8Array(ut),xt=0;xt<it;xt++)vt[xt]=J.charCodeAt(xt);return ut}function ot(J){return new O(function(it){var ut=J.transaction(j,nt),vt=D([""]);ut.objectStore(j).put(vt,"key"),ut.onabort=function(xt){xt.preventDefault(),xt.stopPropagation(),it(!1)},ut.oncomplete=function(){var xt=navigator.userAgent.match(/Chrome\/(\d+)/),Nt=navigator.userAgent.match(/Edge\//);it(Nt||!xt||parseInt(xt[1],10)>=43)}}).catch(function(){return!1})}function q(J){return typeof K=="boolean"?O.resolve(K):ot(J).then(function(it){return K=it})}function bt(J){var it=st[J.name],ut={};ut.promise=new O(function(vt,xt){ut.resolve=vt,ut.reject=xt}),it.deferredOperations.push(ut),it.dbReady?it.dbReady=it.dbReady.then(function(){return ut.promise}):it.dbReady=ut.promise}function $t(J){var it=st[J.name].deferredOperations.pop();if(it)return it.resolve(),it.promise}function zt(J,it){var ut=st[J.name].deferredOperations.pop();if(ut)return ut.reject(it),ut.promise}function Xt(J,it){return new O(function(ut,vt){if(st[J.name]=st[J.name]||Ge(),J.db){if(!it)return ut(J.db);bt(J),J.db.close()}var xt=[J.name];it&&xt.push(J.version);var Nt=V.open.apply(V,xt);it&&(Nt.onupgradeneeded=function(Dt){var Vt=Nt.result;try{Vt.createObjectStore(J.storeName),Dt.oldVersion<=1&&Vt.createObjectStore(j)}catch(Gt){if(Gt.name!=="ConstraintError")throw Gt;console.warn('The database "'+J.name+'" has been upgraded from version '+Dt.oldVersion+" to version "+Dt.newVersion+', but the storage "'+J.storeName+'" already exists.')}}),Nt.onerror=function(Dt){Dt.preventDefault(),vt(Nt.error)},Nt.onsuccess=function(){ut(Nt.result),$t(J)}})}function Zt(J){return Xt(J,!1)}function ie(J){return Xt(J,!0)}function Ut(J,it){if(!J.db)return!0;var ut=!J.db.objectStoreNames.contains(J.storeName),vt=J.version<J.db.version,xt=J.version>J.db.version;if(vt&&(J.version!==it&&console.warn('The database "'+J.name+`" can't be downgraded from version `+J.db.version+" to version "+J.version+"."),J.version=J.db.version),xt||ut){if(ut){var Nt=J.db.version+1;Nt>J.version&&(J.version=Nt)}return!0}return!1}function z(J){return new O(function(it,ut){var vt=new FileReader;vt.onerror=ut,vt.onloadend=function(xt){var Nt=btoa(xt.target.result||"");it({__local_forage_encoded_blob:!0,data:Nt,type:J.type})},vt.readAsBinaryString(J)})}function Jt(J){return D([pt(atob(J.data))],{type:J.type})}function Ht(J){return J&&J.__local_forage_encoded_blob}function le(J){var it=this,ut=it._initReady().then(function(){var vt=st[it._dbInfo.name];if(vt&&vt.dbReady)return vt.dbReady});return W(ut,J,J),ut}function St(J){bt(J);for(var it=st[J.name],ut=it.forages,vt=0;vt<ut.length;vt++){var xt=ut[vt];xt._dbInfo.db&&(xt._dbInfo.db.close(),xt._dbInfo.db=null)}return J.db=null,Zt(J).then(function(Nt){return J.db=Nt,Ut(J)?ie(J):Nt}).then(function(Nt){J.db=it.db=Nt;for(var Dt=0;Dt<ut.length;Dt++)ut[Dt]._dbInfo.db=Nt}).catch(function(Nt){throw zt(J,Nt),Nt})}function se(J,it,ut,vt){vt===void 0&&(vt=1);try{var xt=J.db.transaction(J.storeName,it);ut(null,xt)}catch(Nt){if(vt>0&&(!J.db||Nt.name==="InvalidStateError"||Nt.name==="NotFoundError"))return O.resolve().then(function(){if(!J.db||Nt.name==="NotFoundError"&&!J.db.objectStoreNames.contains(J.storeName)&&J.version<=J.db.version)return J.db&&(J.version=J.db.version+1),ie(J)}).then(function(){return St(J).then(function(){se(J,it,ut,vt-1)})}).catch(ut);ut(Nt)}}function Ge(){return{forages:[],db:null,dbReady:null,deferredOperations:[]}}function Cr(J){var it=this,ut={db:null};if(J)for(var vt in J)ut[vt]=J[vt];var xt=st[ut.name];xt||(xt=Ge(),st[ut.name]=xt),xt.forages.push(it),it._initReady||(it._initReady=it.ready,it.ready=le);var Nt=[];function Dt(){return O.resolve()}for(var Vt=0;Vt<xt.forages.length;Vt++){var Gt=xt.forages[Vt];Gt!==it&&Nt.push(Gt._initReady().catch(Dt))}var qt=xt.forages.slice(0);return O.all(Nt).then(function(){return ut.db=xt.db,Zt(ut)}).then(function(ae){return ut.db=ae,Ut(ut,it._defaultConfig.version)?ie(ut):ae}).then(function(ae){ut.db=xt.db=ae,it._dbInfo=ut;for(var de=0;de<qt.length;de++){var Re=qt[de];Re!==it&&(Re._dbInfo.db=ut.db,Re._dbInfo.version=ut.version)}})}function Wn(J,it){var ut=this;J=X(J);var vt=new O(function(xt,Nt){ut.ready().then(function(){se(ut._dbInfo,at,function(Dt,Vt){if(Dt)return Nt(Dt);try{var Gt=Vt.objectStore(ut._dbInfo.storeName).get(J);Gt.onsuccess=function(){var qt=Gt.result;qt===void 0&&(qt=null),Ht(qt)&&(qt=Jt(qt)),xt(qt)},Gt.onerror=function(){Nt(Gt.error)}}catch(qt){Nt(qt)}})}).catch(Nt)});return G(vt,it),vt}function fr(J,it){var ut=this,vt=new O(function(xt,Nt){ut.ready().then(function(){se(ut._dbInfo,at,function(Dt,Vt){if(Dt)return Nt(Dt);try{var Gt=Vt.objectStore(ut._dbInfo.storeName).openCursor(),qt=1;Gt.onsuccess=function(){var ae=Gt.result;if(ae){var de=ae.value;Ht(de)&&(de=Jt(de));var Re=J(de,ae.key,qt++);Re!==void 0?xt(Re):ae.continue()}else xt()},Gt.onerror=function(){Nt(Gt.error)}}catch(ae){Nt(ae)}})}).catch(Nt)});return G(vt,it),vt}function er(J,it,ut){var vt=this;J=X(J);var xt=new O(function(Nt,Dt){var Vt;vt.ready().then(function(){return Vt=vt._dbInfo,H.call(it)==="[object Blob]"?q(Vt.db).then(function(Gt){return Gt?it:z(it)}):it}).then(function(Gt){se(vt._dbInfo,nt,function(qt,ae){if(qt)return Dt(qt);try{var de=ae.objectStore(vt._dbInfo.storeName);Gt===null&&(Gt=void 0);var Re=de.put(Gt,J);ae.oncomplete=function(){Gt===void 0&&(Gt=null),Nt(Gt)},ae.onabort=ae.onerror=function(){var Ue=Re.error?Re.error:Re.transaction.error;Dt(Ue)}}catch(Ue){Dt(Ue)}})}).catch(Dt)});return G(xt,ut),xt}function ge(J,it){var ut=this;J=X(J);var vt=new O(function(xt,Nt){ut.ready().then(function(){se(ut._dbInfo,nt,function(Dt,Vt){if(Dt)return Nt(Dt);try{var Gt=Vt.objectStore(ut._dbInfo.storeName).delete(J);Vt.oncomplete=function(){xt()},Vt.onerror=function(){Nt(Gt.error)},Vt.onabort=function(){var qt=Gt.error?Gt.error:Gt.transaction.error;Nt(qt)}}catch(qt){Nt(qt)}})}).catch(Nt)});return G(vt,it),vt}function Zn(J){var it=this,ut=new O(function(vt,xt){it.ready().then(function(){se(it._dbInfo,nt,function(Nt,Dt){if(Nt)return xt(Nt);try{var Vt=Dt.objectStore(it._dbInfo.storeName).clear();Dt.oncomplete=function(){vt()},Dt.onabort=Dt.onerror=function(){var Gt=Vt.error?Vt.error:Vt.transaction.error;xt(Gt)}}catch(Gt){xt(Gt)}})}).catch(xt)});return G(ut,J),ut}function Ae(J){var it=this,ut=new O(function(vt,xt){it.ready().then(function(){se(it._dbInfo,at,function(Nt,Dt){if(Nt)return xt(Nt);try{var Vt=Dt.objectStore(it._dbInfo.storeName).count();Vt.onsuccess=function(){vt(Vt.result)},Vt.onerror=function(){xt(Vt.error)}}catch(Gt){xt(Gt)}})}).catch(xt)});return G(ut,J),ut}function Xe(J,it){var ut=this,vt=new O(function(xt,Nt){J<0?xt(null):ut.ready().then(function(){se(ut._dbInfo,at,function(Dt,Vt){if(Dt)return Nt(Dt);try{var Gt=Vt.objectStore(ut._dbInfo.storeName),qt=!1,ae=Gt.openCursor();ae.onsuccess=function(){var de=ae.result;de?J===0||qt?xt(de.key):(qt=!0,de.advance(J)):xt(null)},ae.onerror=function(){Nt(ae.error)}}catch(de){Nt(de)}})}).catch(Nt)});return G(vt,it),vt}function mr(J){var it=this,ut=new O(function(vt,xt){it.ready().then(function(){se(it._dbInfo,at,function(Nt,Dt){if(Nt)return xt(Nt);try{var Vt=Dt.objectStore(it._dbInfo.storeName).openCursor(),Gt=[];Vt.onsuccess=function(){var qt=Vt.result;qt?(Gt.push(qt.key),qt.continue()):vt(Gt)},Vt.onerror=function(){xt(Vt.error)}}catch(qt){xt(qt)}})}).catch(xt)});return G(ut,J),ut}function Vn(J,it){it=U.apply(this,arguments);var ut=this.config();(J=typeof J!="function"&&J||{}).name||(J.name=J.name||ut.name,J.storeName=J.storeName||ut.storeName);var vt,xt=this;if(J.name){var Nt=J.name===ut.name&&xt._dbInfo.db?O.resolve(xt._dbInfo.db):Zt(J).then(function(Dt){var Vt=st[J.name],Gt=Vt.forages;Vt.db=Dt;for(var qt=0;qt<Gt.length;qt++)Gt[qt]._dbInfo.db=Dt;return Dt});vt=J.storeName?Nt.then(function(Dt){if(Dt.objectStoreNames.contains(J.storeName)){var Vt=Dt.version+1;bt(J);var Gt=st[J.name],qt=Gt.forages;Dt.close();for(var ae=0;ae<qt.length;ae++){var de=qt[ae];de._dbInfo.db=null,de._dbInfo.version=Vt}var Re=new O(function(Ue,je){var on=V.open(J.name,Vt);on.onerror=function(br){on.result.close(),je(br)},on.onupgradeneeded=function(){on.result.deleteObjectStore(J.storeName)},on.onsuccess=function(){var br=on.result;br.close(),Ue(br)}});return Re.then(function(Ue){Gt.db=Ue;for(var je=0;je<qt.length;je++){var on=qt[je];on._dbInfo.db=Ue,$t(on._dbInfo)}}).catch(function(Ue){throw(zt(J,Ue)||O.resolve()).catch(function(){}),Ue})}}):Nt.then(function(Dt){bt(J);var Vt=st[J.name],Gt=Vt.forages;Dt.close();for(var qt=0;qt<Gt.length;qt++)Gt[qt]._dbInfo.db=null;var ae=new O(function(de,Re){var Ue=V.deleteDatabase(J.name);Ue.onerror=Ue.onblocked=function(je){var on=Ue.result;on&&on.close(),Re(je)},Ue.onsuccess=function(){var je=Ue.result;je&&je.close(),de(je)}});return ae.then(function(de){Vt.db=de;for(var Re=0;Re<Gt.length;Re++)$t(Gt[Re]._dbInfo)}).catch(function(de){throw(zt(J,de)||O.resolve()).catch(function(){}),de})})}else vt=O.reject("Invalid arguments");return G(vt,it),vt}var Yr={_driver:"asyncStorage",_initStorage:Cr,_support:P(),iterate:fr,getItem:Wn,setItem:er,removeItem:ge,clear:Zn,length:Ae,key:Xe,keys:mr,dropInstance:Vn};function gr(){return typeof openDatabase=="function"}var Se="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Un="~~local_forage_type~",nr=/^~~local_forage_type~([^~]+)~/,He="__lfsc__:",Yt=He.length,ye="arbf",tn="blob",en="si08",nn="ui08",$r="uic8",qo="si16",Pr="si32",Ps="ur16",Bs="ui32",Ko="fl32",Vl="fl64",Ul=Yt+ye.length,Ct=Object.prototype.toString;function Oi(J){var it,ut,vt,xt,Nt,Dt=.75*J.length,Vt=J.length,Gt=0;J[J.length-1]==="="&&(Dt--,J[J.length-2]==="="&&Dt--);var qt=new ArrayBuffer(Dt),ae=new Uint8Array(qt);for(it=0;it<Vt;it+=4)ut=Se.indexOf(J[it]),vt=Se.indexOf(J[it+1]),xt=Se.indexOf(J[it+2]),Nt=Se.indexOf(J[it+3]),ae[Gt++]=ut<<2|vt>>4,ae[Gt++]=(15&vt)<<4|xt>>2,ae[Gt++]=(3&xt)<<6|63&Nt;return qt}function Mi(J){var it,ut=new Uint8Array(J),vt="";for(it=0;it<ut.length;it+=3)vt+=Se[ut[it]>>2],vt+=Se[(3&ut[it])<<4|ut[it+1]>>4],vt+=Se[(15&ut[it+1])<<2|ut[it+2]>>6],vt+=Se[63&ut[it+2]];return ut.length%3==2?vt=vt.substring(0,vt.length-1)+"=":ut.length%3==1&&(vt=vt.substring(0,vt.length-2)+"=="),vt}function Gl(J,it){var ut="";if(J&&(ut=Ct.call(J)),J&&(ut==="[object ArrayBuffer]"||J.buffer&&Ct.call(J.buffer)==="[object ArrayBuffer]")){var vt,xt=He;J instanceof ArrayBuffer?(vt=J,xt+=ye):(vt=J.buffer,ut==="[object Int8Array]"?xt+=en:ut==="[object Uint8Array]"?xt+=nn:ut==="[object Uint8ClampedArray]"?xt+=$r:ut==="[object Int16Array]"?xt+=qo:ut==="[object Uint16Array]"?xt+=Ps:ut==="[object Int32Array]"?xt+=Pr:ut==="[object Uint32Array]"?xt+=Bs:ut==="[object Float32Array]"?xt+=Ko:ut==="[object Float64Array]"?xt+=Vl:it(new Error("Failed to get type for BinaryArray"))),it(xt+Mi(vt))}else if(ut==="[object Blob]"){var Nt=new FileReader;Nt.onload=function(){var Dt=Un+J.type+"~"+Mi(this.result);it(He+tn+Dt)},Nt.readAsArrayBuffer(J)}else try{it(JSON.stringify(J))}catch(Dt){console.error("Couldn't convert value into a JSON string: ",J),it(null,Dt)}}function Xo(J){if(J.substring(0,Yt)!==He)return JSON.parse(J);var it,ut=J.substring(Ul),vt=J.substring(Yt,Ul);if(vt===tn&&nr.test(ut)){var xt=ut.match(nr);it=xt[1],ut=ut.substring(xt[0].length)}var Nt=Oi(ut);switch(vt){case ye:return Nt;case tn:return D([Nt],{type:it});case en:return new Int8Array(Nt);case nn:return new Uint8Array(Nt);case $r:return new Uint8ClampedArray(Nt);case qo:return new Int16Array(Nt);case Ps:return new Uint16Array(Nt);case Pr:return new Int32Array(Nt);case Bs:return new Uint32Array(Nt);case Ko:return new Float32Array(Nt);case Vl:return new Float64Array(Nt);default:throw new Error("Unkown type: "+vt)}}var aa={serialize:Gl,deserialize:Xo,stringToBuffer:Oi,bufferToString:Mi};function ia(J,it,ut,vt){J.executeSql("CREATE TABLE IF NOT EXISTS "+it.storeName+" (id INTEGER PRIMARY KEY, key unique, value)",[],ut,vt)}function Ga(J){var it=this,ut={db:null};if(J)for(var vt in J)ut[vt]=typeof J[vt]!="string"?J[vt].toString():J[vt];var xt=new O(function(Nt,Dt){try{ut.db=openDatabase(ut.name,String(ut.version),ut.description,ut.size)}catch(Vt){return Dt(Vt)}ut.db.transaction(function(Vt){ia(Vt,ut,function(){it._dbInfo=ut,Nt()},function(Gt,qt){Dt(qt)})},Dt)});return ut.serializer=aa,xt}function yr(J,it,ut,vt,xt,Nt){J.executeSql(ut,vt,xt,function(Dt,Vt){Vt.code===Vt.SYNTAX_ERR?Dt.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?",[it.storeName],function(Gt,qt){qt.rows.length?Nt(Gt,Vt):ia(Gt,it,function(){Gt.executeSql(ut,vt,xt,Nt)},Nt)},Nt):Nt(Dt,Vt)},Nt)}function Li(J,it){var ut=this;J=X(J);var vt=new O(function(xt,Nt){ut.ready().then(function(){var Dt=ut._dbInfo;Dt.db.transaction(function(Vt){yr(Vt,Dt,"SELECT * FROM "+Dt.storeName+" WHERE key = ? LIMIT 1",[J],function(Gt,qt){var ae=qt.rows.length?qt.rows.item(0).value:null;ae&&(ae=Dt.serializer.deserialize(ae)),xt(ae)},function(Gt,qt){Nt(qt)})})}).catch(Nt)});return G(vt,it),vt}function Yo(J,it){var ut=this,vt=new O(function(xt,Nt){ut.ready().then(function(){var Dt=ut._dbInfo;Dt.db.transaction(function(Vt){yr(Vt,Dt,"SELECT * FROM "+Dt.storeName,[],function(Gt,qt){for(var ae=qt.rows,de=ae.length,Re=0;Re<de;Re++){var Ue=ae.item(Re),je=Ue.value;if(je&&(je=Dt.serializer.deserialize(je)),(je=J(je,Ue.key,Re+1))!==void 0)return void xt(je)}xt()},function(Gt,qt){Nt(qt)})})}).catch(Nt)});return G(vt,it),vt}function zi(J,it,ut,vt){var xt=this;J=X(J);var Nt=new O(function(Dt,Vt){xt.ready().then(function(){it===void 0&&(it=null);var Gt=it,qt=xt._dbInfo;qt.serializer.serialize(it,function(ae,de){de?Vt(de):qt.db.transaction(function(Re){yr(Re,qt,"INSERT OR REPLACE INTO "+qt.storeName+" (key, value) VALUES (?, ?)",[J,ae],function(){Dt(Gt)},function(Ue,je){Vt(je)})},function(Re){if(Re.code===Re.QUOTA_ERR){if(vt>0)return void Dt(zi.apply(xt,[J,Gt,ut,vt-1]));Vt(Re)}})})}).catch(Vt)});return G(Nt,ut),Nt}function Pi(J,it,ut){return zi.apply(this,[J,it,ut,1])}function Bi(J,it){var ut=this;J=X(J);var vt=new O(function(xt,Nt){ut.ready().then(function(){var Dt=ut._dbInfo;Dt.db.transaction(function(Vt){yr(Vt,Dt,"DELETE FROM "+Dt.storeName+" WHERE key = ?",[J],function(){xt()},function(Gt,qt){Nt(qt)})})}).catch(Nt)});return G(vt,it),vt}function Ha(J){var it=this,ut=new O(function(vt,xt){it.ready().then(function(){var Nt=it._dbInfo;Nt.db.transaction(function(Dt){yr(Dt,Nt,"DELETE FROM "+Nt.storeName,[],function(){vt()},function(Vt,Gt){xt(Gt)})})}).catch(xt)});return G(ut,J),ut}function ja(J){var it=this,ut=new O(function(vt,xt){it.ready().then(function(){var Nt=it._dbInfo;Nt.db.transaction(function(Dt){yr(Dt,Nt,"SELECT COUNT(key) as c FROM "+Nt.storeName,[],function(Vt,Gt){var qt=Gt.rows.item(0).c;vt(qt)},function(Vt,Gt){xt(Gt)})})}).catch(xt)});return G(ut,J),ut}function qa(J,it){var ut=this,vt=new O(function(xt,Nt){ut.ready().then(function(){var Dt=ut._dbInfo;Dt.db.transaction(function(Vt){yr(Vt,Dt,"SELECT key FROM "+Dt.storeName+" WHERE id = ? LIMIT 1",[J+1],function(Gt,qt){var ae=qt.rows.length?qt.rows.item(0).key:null;xt(ae)},function(Gt,qt){Nt(qt)})})}).catch(Nt)});return G(vt,it),vt}function Ka(J){var it=this,ut=new O(function(vt,xt){it.ready().then(function(){var Nt=it._dbInfo;Nt.db.transaction(function(Dt){yr(Dt,Nt,"SELECT key FROM "+Nt.storeName,[],function(Vt,Gt){for(var qt=[],ae=0;ae<Gt.rows.length;ae++)qt.push(Gt.rows.item(ae).key);vt(qt)},function(Vt,Gt){xt(Gt)})})}).catch(xt)});return G(ut,J),ut}function Xa(J){return new O(function(it,ut){J.transaction(function(vt){vt.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'",[],function(xt,Nt){for(var Dt=[],Vt=0;Vt<Nt.rows.length;Vt++)Dt.push(Nt.rows.item(Vt).name);it({db:J,storeNames:Dt})},function(xt,Nt){ut(Nt)})},function(vt){ut(vt)})})}function Wi(J,it){it=U.apply(this,arguments);var ut=this.config();(J=typeof J!="function"&&J||{}).name||(J.name=J.name||ut.name,J.storeName=J.storeName||ut.storeName);var vt,xt=this;return G(vt=J.name?new O(function(Nt){var Dt;Dt=J.name===ut.name?xt._dbInfo.db:openDatabase(J.name,"","",0),J.storeName?Nt({db:Dt,storeNames:[J.storeName]}):Nt(Xa(Dt))}).then(function(Nt){return new O(function(Dt,Vt){Nt.db.transaction(function(Gt){function qt(Ue){return new O(function(je,on){Gt.executeSql("DROP TABLE IF EXISTS "+Ue,[],function(){je()},function(br,la){on(la)})})}for(var ae=[],de=0,Re=Nt.storeNames.length;de<Re;de++)ae.push(qt(Nt.storeNames[de]));O.all(ae).then(function(){Dt()}).catch(function(Ue){Vt(Ue)})},function(Gt){Vt(Gt)})})}):O.reject("Invalid arguments"),it),vt}var Zo={_driver:"webSQLStorage",_initStorage:Ga,_support:gr(),iterate:Yo,getItem:Li,setItem:Pi,removeItem:Bi,clear:Ha,length:ja,key:qa,keys:Ka,dropInstance:Wi};function Vi(){try{return typeof localStorage<"u"&&"setItem"in localStorage&&!!localStorage.setItem}catch{return!1}}function Ui(J,it){var ut=J.name+"/";return J.storeName!==it.storeName&&(ut+=J.storeName+"/"),ut}function Gi(){var J="_localforage_support_test";try{return localStorage.setItem(J,!0),localStorage.removeItem(J),!1}catch{return!0}}function Hi(){return!Gi()||localStorage.length>0}function Jo(J){var it=this,ut={};if(J)for(var vt in J)ut[vt]=J[vt];return ut.keyPrefix=Ui(J,it._defaultConfig),Hi()?(it._dbInfo=ut,ut.serializer=aa,O.resolve()):O.reject()}function Qo(J){var it=this,ut=it.ready().then(function(){for(var vt=it._dbInfo.keyPrefix,xt=localStorage.length-1;xt>=0;xt--){var Nt=localStorage.key(xt);Nt.indexOf(vt)===0&&localStorage.removeItem(Nt)}});return G(ut,J),ut}function Ya(J,it){var ut=this;J=X(J);var vt=ut.ready().then(function(){var xt=ut._dbInfo,Nt=localStorage.getItem(xt.keyPrefix+J);return Nt&&(Nt=xt.serializer.deserialize(Nt)),Nt});return G(vt,it),vt}function Za(J,it){var ut=this,vt=ut.ready().then(function(){for(var xt=ut._dbInfo,Nt=xt.keyPrefix,Dt=Nt.length,Vt=localStorage.length,Gt=1,qt=0;qt<Vt;qt++){var ae=localStorage.key(qt);if(ae.indexOf(Nt)===0){var de=localStorage.getItem(ae);if(de&&(de=xt.serializer.deserialize(de)),(de=J(de,ae.substring(Dt),Gt++))!==void 0)return de}}});return G(vt,it),vt}function Ja(J,it){var ut=this,vt=ut.ready().then(function(){var xt,Nt=ut._dbInfo;try{xt=localStorage.key(J)}catch{xt=null}return xt&&(xt=xt.substring(Nt.keyPrefix.length)),xt});return G(vt,it),vt}function tu(J){var it=this,ut=it.ready().then(function(){for(var vt=it._dbInfo,xt=localStorage.length,Nt=[],Dt=0;Dt<xt;Dt++){var Vt=localStorage.key(Dt);Vt.indexOf(vt.keyPrefix)===0&&Nt.push(Vt.substring(vt.keyPrefix.length))}return Nt});return G(ut,J),ut}function ji(J){var it=this.keys().then(function(ut){return ut.length});return G(it,J),it}function qi(J,it){var ut=this;J=X(J);var vt=ut.ready().then(function(){var xt=ut._dbInfo;localStorage.removeItem(xt.keyPrefix+J)});return G(vt,it),vt}function Ki(J,it,ut){var vt=this;J=X(J);var xt=vt.ready().then(function(){it===void 0&&(it=null);var Nt=it;return new O(function(Dt,Vt){var Gt=vt._dbInfo;Gt.serializer.serialize(it,function(qt,ae){if(ae)Vt(ae);else try{localStorage.setItem(Gt.keyPrefix+J,qt),Dt(Nt)}catch(de){de.name!=="QuotaExceededError"&&de.name!=="NS_ERROR_DOM_QUOTA_REACHED"||Vt(de),Vt(de)}})})});return G(xt,ut),xt}function eu(J,it){if(it=U.apply(this,arguments),!(J=typeof J!="function"&&J||{}).name){var ut=this.config();J.name=J.name||ut.name,J.storeName=J.storeName||ut.storeName}var vt,xt=this;return vt=J.name?new O(function(Nt){J.storeName?Nt(Ui(J,xt._defaultConfig)):Nt(J.name+"/")}).then(function(Nt){for(var Dt=localStorage.length-1;Dt>=0;Dt--){var Vt=localStorage.key(Dt);Vt.indexOf(Nt)===0&&localStorage.removeItem(Vt)}}):O.reject("Invalid arguments"),G(vt,it),vt}var Xi={_driver:"localStorageWrapper",_initStorage:Jo,_support:Vi(),iterate:Za,getItem:Ya,setItem:Ki,removeItem:qi,clear:Qo,length:ji,key:Ja,keys:tu,dropInstance:eu},Yi=function(J,it){return J===it||typeof J=="number"&&typeof it=="number"&&isNaN(J)&&isNaN(it)},nu=function(J,it){for(var ut=J.length,vt=0;vt<ut;){if(Yi(J[vt],it))return!0;vt++}return!1},Zi=Array.isArray||function(J){return Object.prototype.toString.call(J)==="[object Array]"},hs={},oa={},$s={INDEXEDDB:Yr,WEBSQL:Zo,LOCALSTORAGE:Xi},Ji=[$s.INDEXEDDB._driver,$s.WEBSQL._driver,$s.LOCALSTORAGE._driver],ua=["dropInstance"],Qa=["clear","getItem","iterate","key","keys","length","removeItem","setItem"].concat(ua),ru={description:"",driver:Ji.slice(),name:"localforage",size:4980736,storeName:"keyvaluepairs",version:1};function Qi(J,it){J[it]=function(){var ut=arguments;return J.ready().then(function(){return J[it].apply(J,ut)})}}function ti(){for(var J=1;J<arguments.length;J++){var it=arguments[J];if(it)for(var ut in it)it.hasOwnProperty(ut)&&(Zi(it[ut])?arguments[0][ut]=it[ut].slice():arguments[0][ut]=it[ut])}return arguments[0]}var su=function(){function J(it){for(var ut in E(this,J),$s)if($s.hasOwnProperty(ut)){var vt=$s[ut],xt=vt._driver;this[ut]=xt,hs[xt]||this.defineDriver(vt)}this._defaultConfig=ti({},ru),this._config=ti({},this._defaultConfig,it),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch(function(){})}return J.prototype.config=function(it){if((it===void 0?"undefined":R(it))==="object"){if(this._ready)return new Error("Can't call config() after localforage has been used.");for(var ut in it){if(ut==="storeName"&&(it[ut]=it[ut].replace(/\W/g,"_")),ut==="version"&&typeof it[ut]!="number")return new Error("Database version must be a number.");this._config[ut]=it[ut]}return!("driver"in it)||!it.driver||this.setDriver(this._config.driver)}return typeof it=="string"?this._config[it]:this._config},J.prototype.defineDriver=function(it,ut,vt){var xt=new O(function(Nt,Dt){try{var Vt=it._driver,Gt=new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");if(!it._driver)return void Dt(Gt);for(var qt=Qa.concat("_initStorage"),ae=0,de=qt.length;ae<de;ae++){var Re=qt[ae];if((!nu(ua,Re)||it[Re])&&typeof it[Re]!="function")return void Dt(Gt)}var Ue=function(){for(var on=function(iu){return function(){var to=new Error("Method "+iu+" is not implemented by the current driver"),ha=O.reject(to);return G(ha,arguments[arguments.length-1]),ha}},br=0,la=ua.length;br<la;br++){var ca=ua[br];it[ca]||(it[ca]=on(ca))}};Ue();var je=function(on){hs[Vt]&&console.info("Redefining LocalForage driver: "+Vt),hs[Vt]=it,oa[Vt]=on,Nt()};"_support"in it?it._support&&typeof it._support=="function"?it._support().then(je,Dt):je(!!it._support):je(!0)}catch(on){Dt(on)}});return W(xt,ut,vt),xt},J.prototype.driver=function(){return this._driver||null},J.prototype.getDriver=function(it,ut,vt){var xt=hs[it]?O.resolve(hs[it]):O.reject(new Error("Driver not found."));return W(xt,ut,vt),xt},J.prototype.getSerializer=function(it){var ut=O.resolve(aa);return W(ut,it),ut},J.prototype.ready=function(it){var ut=this,vt=ut._driverSet.then(function(){return ut._ready===null&&(ut._ready=ut._initDriver()),ut._ready});return W(vt,it,it),vt},J.prototype.setDriver=function(it,ut,vt){var xt=this;Zi(it)||(it=[it]);var Nt=this._getSupportedDrivers(it);function Dt(){xt._config.driver=xt.driver()}function Vt(ae){return xt._extend(ae),Dt(),xt._ready=xt._initStorage(xt._config),xt._ready}function Gt(ae){return function(){var de=0;function Re(){for(;de<ae.length;){var Ue=ae[de];return de++,xt._dbInfo=null,xt._ready=null,xt.getDriver(Ue).then(Vt).catch(Re)}Dt();var je=new Error("No available storage method found.");return xt._driverSet=O.reject(je),xt._driverSet}return Re()}}var qt=this._driverSet!==null?this._driverSet.catch(function(){return O.resolve()}):O.resolve();return this._driverSet=qt.then(function(){var ae=Nt[0];return xt._dbInfo=null,xt._ready=null,xt.getDriver(ae).then(function(de){xt._driver=de._driver,Dt(),xt._wrapLibraryMethodsWithReady(),xt._initDriver=Gt(Nt)})}).catch(function(){Dt();var ae=new Error("No available storage method found.");return xt._driverSet=O.reject(ae),xt._driverSet}),W(this._driverSet,ut,vt),this._driverSet},J.prototype.supports=function(it){return!!oa[it]},J.prototype._extend=function(it){ti(this,it)},J.prototype._getSupportedDrivers=function(it){for(var ut=[],vt=0,xt=it.length;vt<xt;vt++){var Nt=it[vt];this.supports(Nt)&&ut.push(Nt)}return ut},J.prototype._wrapLibraryMethodsWithReady=function(){for(var it=0,ut=Qa.length;it<ut;it++)Qi(this,Qa[it])},J.prototype.createInstance=function(it){return new J(it)},J}(),au=new su;S.exports=au},{3:3}]},{},[4])(4)},720:I=>{I.exports=x;var v=null;try{v=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function x(q,bt,$t){this.low=0|q,this.high=0|bt,this.unsigned=!!$t}function w(q){return(q&&q.__isLong__)===!0}x.prototype.__isLong__,Object.defineProperty(x.prototype,"__isLong__",{value:!0}),x.isLong=w;var S={},N={};function R(q,bt){var $t,zt,Xt;return bt?(Xt=0<=(q>>>=0)&&q<256)&&(zt=N[q])?zt:($t=L(q,(0|q)<0?-1:0,!0),Xt&&(N[q]=$t),$t):(Xt=-128<=(q|=0)&&q<128)&&(zt=S[q])?zt:($t=L(q,q<0?-1:0,!1),Xt&&(S[q]=$t),$t)}function E(q,bt){if(isNaN(q))return bt?j:U;if(bt){if(q<0)return j;if(q>=G)return nt}else{if(q<=-W)return pt;if(q+1>=W)return at}return q<0?E(-q,bt).neg():L(q%O|0,q/O|0,bt)}function L(q,bt,$t){return new x(q,bt,$t)}x.fromInt=R,x.fromNumber=E,x.fromBits=L;var V=Math.pow;function P(q,bt,$t){if(q.length===0)throw Error("empty string");if(q==="NaN"||q==="Infinity"||q==="+Infinity"||q==="-Infinity")return U;if(typeof bt=="number"?($t=bt,bt=!1):bt=!!bt,($t=$t||10)<2||36<$t)throw RangeError("radix");var zt;if((zt=q.indexOf("-"))>0)throw Error("interior hyphen");if(zt===0)return P(q.substring(1),bt,$t).neg();for(var Xt=E(V($t,8)),Zt=U,ie=0;ie<q.length;ie+=8){var Ut=Math.min(8,q.length-ie),z=parseInt(q.substring(ie,ie+Ut),$t);if(Ut<8){var Jt=E(V($t,Ut));Zt=Zt.mul(Jt).add(E(z))}else Zt=(Zt=Zt.mul(Xt)).add(E(z))}return Zt.unsigned=bt,Zt}function D(q,bt){return typeof q=="number"?E(q,bt):typeof q=="string"?P(q,bt):L(q.low,q.high,typeof bt=="boolean"?bt:q.unsigned)}x.fromString=P,x.fromValue=D;var O=4294967296,G=O*O,W=G/2,X=R(1<<24),U=R(0);x.ZERO=U;var j=R(0,!0);x.UZERO=j;var K=R(1);x.ONE=K;var st=R(1,!0);x.UONE=st;var H=R(-1);x.NEG_ONE=H;var at=L(-1,2147483647,!1);x.MAX_VALUE=at;var nt=L(-1,-1,!0);x.MAX_UNSIGNED_VALUE=nt;var pt=L(0,-2147483648,!1);x.MIN_VALUE=pt;var ot=x.prototype;ot.toInt=function(){return this.unsigned?this.low>>>0:this.low},ot.toNumber=function(){return this.unsigned?(this.high>>>0)*O+(this.low>>>0):this.high*O+(this.low>>>0)},ot.toString=function(q){if((q=q||10)<2||36<q)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(pt)){var bt=E(q),$t=this.div(bt),zt=$t.mul(bt).sub(this);return $t.toString(q)+zt.toInt().toString(q)}return"-"+this.neg().toString(q)}for(var Xt=E(V(q,6),this.unsigned),Zt=this,ie="";;){var Ut=Zt.div(Xt),z=(Zt.sub(Ut.mul(Xt)).toInt()>>>0).toString(q);if((Zt=Ut).isZero())return z+ie;for(;z.length<6;)z="0"+z;ie=""+z+ie}},ot.getHighBits=function(){return this.high},ot.getHighBitsUnsigned=function(){return this.high>>>0},ot.getLowBits=function(){return this.low},ot.getLowBitsUnsigned=function(){return this.low>>>0},ot.getNumBitsAbs=function(){if(this.isNegative())return this.eq(pt)?64:this.neg().getNumBitsAbs();for(var q=this.high!=0?this.high:this.low,bt=31;bt>0&&(q&1<<bt)==0;bt--);return this.high!=0?bt+33:bt+1},ot.isZero=function(){return this.high===0&&this.low===0},ot.eqz=ot.isZero,ot.isNegative=function(){return!this.unsigned&&this.high<0},ot.isPositive=function(){return this.unsigned||this.high>=0},ot.isOdd=function(){return(1&this.low)==1},ot.isEven=function(){return(1&this.low)==0},ot.equals=function(q){return w(q)||(q=D(q)),(this.unsigned===q.unsigned||this.high>>>31!=1||q.high>>>31!=1)&&this.high===q.high&&this.low===q.low},ot.eq=ot.equals,ot.notEquals=function(q){return!this.eq(q)},ot.neq=ot.notEquals,ot.ne=ot.notEquals,ot.lessThan=function(q){return this.comp(q)<0},ot.lt=ot.lessThan,ot.lessThanOrEqual=function(q){return this.comp(q)<=0},ot.lte=ot.lessThanOrEqual,ot.le=ot.lessThanOrEqual,ot.greaterThan=function(q){return this.comp(q)>0},ot.gt=ot.greaterThan,ot.greaterThanOrEqual=function(q){return this.comp(q)>=0},ot.gte=ot.greaterThanOrEqual,ot.ge=ot.greaterThanOrEqual,ot.compare=function(q){if(w(q)||(q=D(q)),this.eq(q))return 0;var bt=this.isNegative(),$t=q.isNegative();return bt&&!$t?-1:!bt&&$t?1:this.unsigned?q.high>>>0>this.high>>>0||q.high===this.high&&q.low>>>0>this.low>>>0?-1:1:this.sub(q).isNegative()?-1:1},ot.comp=ot.compare,ot.negate=function(){return!this.unsigned&&this.eq(pt)?pt:this.not().add(K)},ot.neg=ot.negate,ot.add=function(q){w(q)||(q=D(q));var bt=this.high>>>16,$t=65535&this.high,zt=this.low>>>16,Xt=65535&this.low,Zt=q.high>>>16,ie=65535&q.high,Ut=q.low>>>16,z=0,Jt=0,Ht=0,le=0;return Ht+=(le+=Xt+(65535&q.low))>>>16,Jt+=(Ht+=zt+Ut)>>>16,z+=(Jt+=$t+ie)>>>16,z+=bt+Zt,L((Ht&=65535)<<16|(le&=65535),(z&=65535)<<16|(Jt&=65535),this.unsigned)},ot.subtract=function(q){return w(q)||(q=D(q)),this.add(q.neg())},ot.sub=ot.subtract,ot.multiply=function(q){if(this.isZero())return U;if(w(q)||(q=D(q)),v)return L(v.mul(this.low,this.high,q.low,q.high),v.get_high(),this.unsigned);if(q.isZero())return U;if(this.eq(pt))return q.isOdd()?pt:U;if(q.eq(pt))return this.isOdd()?pt:U;if(this.isNegative())return q.isNegative()?this.neg().mul(q.neg()):this.neg().mul(q).neg();if(q.isNegative())return this.mul(q.neg()).neg();if(this.lt(X)&&q.lt(X))return E(this.toNumber()*q.toNumber(),this.unsigned);var bt=this.high>>>16,$t=65535&this.high,zt=this.low>>>16,Xt=65535&this.low,Zt=q.high>>>16,ie=65535&q.high,Ut=q.low>>>16,z=65535&q.low,Jt=0,Ht=0,le=0,St=0;return le+=(St+=Xt*z)>>>16,Ht+=(le+=zt*z)>>>16,le&=65535,Ht+=(le+=Xt*Ut)>>>16,Jt+=(Ht+=$t*z)>>>16,Ht&=65535,Jt+=(Ht+=zt*Ut)>>>16,Ht&=65535,Jt+=(Ht+=Xt*ie)>>>16,Jt+=bt*z+$t*Ut+zt*ie+Xt*Zt,L((le&=65535)<<16|(St&=65535),(Jt&=65535)<<16|(Ht&=65535),this.unsigned)},ot.mul=ot.multiply,ot.divide=function(q){if(w(q)||(q=D(q)),q.isZero())throw Error("division by zero");var bt,$t,zt;if(v)return this.unsigned||this.high!==-2147483648||q.low!==-1||q.high!==-1?L((this.unsigned?v.div_u:v.div_s)(this.low,this.high,q.low,q.high),v.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?j:U;if(this.unsigned){if(q.unsigned||(q=q.toUnsigned()),q.gt(this))return j;if(q.gt(this.shru(1)))return st;zt=j}else{if(this.eq(pt))return q.eq(K)||q.eq(H)?pt:q.eq(pt)?K:(bt=this.shr(1).div(q).shl(1)).eq(U)?q.isNegative()?K:H:($t=this.sub(q.mul(bt)),zt=bt.add($t.div(q)));if(q.eq(pt))return this.unsigned?j:U;if(this.isNegative())return q.isNegative()?this.neg().div(q.neg()):this.neg().div(q).neg();if(q.isNegative())return this.div(q.neg()).neg();zt=U}for($t=this;$t.gte(q);){bt=Math.max(1,Math.floor($t.toNumber()/q.toNumber()));for(var Xt=Math.ceil(Math.log(bt)/Math.LN2),Zt=Xt<=48?1:V(2,Xt-48),ie=E(bt),Ut=ie.mul(q);Ut.isNegative()||Ut.gt($t);)Ut=(ie=E(bt-=Zt,this.unsigned)).mul(q);ie.isZero()&&(ie=K),zt=zt.add(ie),$t=$t.sub(Ut)}return zt},ot.div=ot.divide,ot.modulo=function(q){return w(q)||(q=D(q)),v?L((this.unsigned?v.rem_u:v.rem_s)(this.low,this.high,q.low,q.high),v.get_high(),this.unsigned):this.sub(this.div(q).mul(q))},ot.mod=ot.modulo,ot.rem=ot.modulo,ot.not=function(){return L(~this.low,~this.high,this.unsigned)},ot.and=function(q){return w(q)||(q=D(q)),L(this.low&q.low,this.high&q.high,this.unsigned)},ot.or=function(q){return w(q)||(q=D(q)),L(this.low|q.low,this.high|q.high,this.unsigned)},ot.xor=function(q){return w(q)||(q=D(q)),L(this.low^q.low,this.high^q.high,this.unsigned)},ot.shiftLeft=function(q){return w(q)&&(q=q.toInt()),(q&=63)==0?this:q<32?L(this.low<<q,this.high<<q|this.low>>>32-q,this.unsigned):L(0,this.low<<q-32,this.unsigned)},ot.shl=ot.shiftLeft,ot.shiftRight=function(q){return w(q)&&(q=q.toInt()),(q&=63)==0?this:q<32?L(this.low>>>q|this.high<<32-q,this.high>>q,this.unsigned):L(this.high>>q-32,this.high>=0?0:-1,this.unsigned)},ot.shr=ot.shiftRight,ot.shiftRightUnsigned=function(q){if(w(q)&&(q=q.toInt()),(q&=63)===0)return this;var bt=this.high;return q<32?L(this.low>>>q|bt<<32-q,bt>>>q,this.unsigned):L(q===32?bt:bt>>>q-32,0,this.unsigned)},ot.shru=ot.shiftRightUnsigned,ot.shr_u=ot.shiftRightUnsigned,ot.toSigned=function(){return this.unsigned?L(this.low,this.high,!1):this},ot.toUnsigned=function(){return this.unsigned?this:L(this.low,this.high,!0)},ot.toBytes=function(q){return q?this.toBytesLE():this.toBytesBE()},ot.toBytesLE=function(){var q=this.high,bt=this.low;return[255&bt,bt>>>8&255,bt>>>16&255,bt>>>24,255&q,q>>>8&255,q>>>16&255,q>>>24]},ot.toBytesBE=function(){var q=this.high,bt=this.low;return[q>>>24,q>>>16&255,q>>>8&255,255&q,bt>>>24,bt>>>16&255,bt>>>8&255,255&bt]},x.fromBytes=function(q,bt,$t){return $t?x.fromBytesLE(q,bt):x.fromBytesBE(q,bt)},x.fromBytesLE=function(q,bt){return new x(q[0]|q[1]<<8|q[2]<<16|q[3]<<24,q[4]|q[5]<<8|q[6]<<16|q[7]<<24,bt)},x.fromBytesBE=function(q,bt){return new x(q[4]<<24|q[5]<<16|q[6]<<8|q[7],q[0]<<24|q[1]<<16|q[2]<<8|q[3],bt)}},32:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var numeric=exports;__webpack_require__.g!==void 0&&(__webpack_require__.g.numeric=numeric),numeric.version="1.2.6",numeric.bench=function(I,v){var x,w,S;for(v===void 0&&(v=15),w=.5,x=new Date;;){for(S=w*=2;S>3;S-=4)I(),I(),I(),I();for(;S>0;)I(),S--;if(new Date-x>v)break}for(S=w;S>3;S-=4)I(),I(),I(),I();for(;S>0;)I(),S--;return 1e3*(3*w-1)/(new Date-x)},numeric._myIndexOf=function(I){var v,x=this.length;for(v=0;v<x;++v)if(this[v]===I)return v;return-1},numeric.myIndexOf=Array.prototype.indexOf?Array.prototype.indexOf:numeric._myIndexOf,numeric.Function=Function,numeric.precision=4,numeric.largeArray=50,numeric.prettyPrint=function(I){function v(w){if(w===0)return"0";if(isNaN(w))return"NaN";if(w<0)return"-"+v(-w);if(isFinite(w)){var S=Math.floor(Math.log(w)/Math.log(10)),N=w/Math.pow(10,S),R=N.toPrecision(numeric.precision);return parseFloat(R)===10&&(S++,R=(N=1).toPrecision(numeric.precision)),parseFloat(R).toString()+"e"+S.toString()}return"Infinity"}var x=[];return function w(S){var N;if(S===void 0)return x.push(Array(numeric.precision+8).join(" ")),!1;if(typeof S=="string")return x.push('"'+S+'"'),!1;if(typeof S=="boolean")return x.push(S.toString()),!1;if(typeof S=="number"){var R=v(S),E=S.toPrecision(numeric.precision),L=parseFloat(S.toString()).toString(),V=[R,E,L,parseFloat(E).toString(),parseFloat(L).toString()];for(N=1;N<V.length;N++)V[N].length<R.length&&(R=V[N]);return x.push(Array(numeric.precision+8-R.length).join(" ")+R),!1}if(S===null)return x.push("null"),!1;if(typeof S=="function"){x.push(S.toString());var P=!1;for(N in S)S.hasOwnProperty(N)&&(P?x.push(`,
`):x.push(`
{`),P=!0,x.push(N),x.push(`: 
`),w(S[N]));return P&&x.push(`}
`),!0}if(S instanceof Array){if(S.length>numeric.largeArray)return x.push("...Large Array..."),!0;for(P=!1,x.push("["),N=0;N<S.length;N++)N>0&&(x.push(","),P&&x.push(`
 `)),P=w(S[N]);return x.push("]"),!0}for(N in x.push("{"),P=!1,S)S.hasOwnProperty(N)&&(P&&x.push(`,
`),P=!0,x.push(N),x.push(`: 
`),w(S[N]));return x.push("}"),!0}(I),x.join("")},numeric.parseDate=function(I){return function v(x){if(typeof x=="string")return Date.parse(x.replace(/-/g,"/"));if(!(x instanceof Array))throw new Error("parseDate: parameter must be arrays of strings");var w,S=[];for(w=0;w<x.length;w++)S[w]=v(x[w]);return S}(I)},numeric.parseFloat=function(I){return function v(x){if(typeof x=="string")return parseFloat(x);if(!(x instanceof Array))throw new Error("parseFloat: parameter must be arrays of strings");var w,S=[];for(w=0;w<x.length;w++)S[w]=v(x[w]);return S}(I)},numeric.parseCSV=function(I){var v,x,w,S=I.split(`
`),N=[],R=/(([^'",]*)|('[^']*')|("[^"]*")),/g,E=/^\s*(([+-]?[0-9]+(\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\.[0-9]+)?(e[+-]?[0-9]+)?))\s*$/,L=0;for(x=0;x<S.length;x++){var V,P=(S[x]+",").match(R);if(P.length>0){for(N[L]=[],v=0;v<P.length;v++)V=(w=P[v]).substr(0,w.length-1),E.test(V)?N[L][v]=parseFloat(V):N[L][v]=V;L++}}return N},numeric.toCSV=function(I){var v,x,w,S,N,R=numeric.dim(I);for(w=R[0],R[1],N=[],v=0;v<w;v++){for(S=[],x=0;x<w;x++)S[x]=I[v][x].toString();N[v]=S.join(", ")}return N.join(`
`)+`
`},numeric.getURL=function(I){var v=new XMLHttpRequest;return v.open("GET",I,!1),v.send(),v},numeric.imageURL=function(I){function v(X,U,j){U===void 0&&(U=0),j===void 0&&(j=X.length);var K,st=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],H=-1;for(X.length,K=U;K<j;K++)H=H>>>8^st[255&(H^X[K])];return-1^H}var x,w,S,N,R,E,L,V,P,D,O=I[0].length,G=I[0][0].length,W=[137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,G>>24&255,G>>16&255,G>>8&255,255&G,O>>24&255,O>>16&255,O>>8&255,255&O,8,2,0,0,0,-1,-2,-3,-4,-5,-6,-7,-8,73,68,65,84,8,29];for(D=v(W,12,29),W[29]=D>>24&255,W[30]=D>>16&255,W[31]=D>>8&255,W[32]=255&D,x=1,w=0,L=0;L<O;L++){for(L<O-1?W.push(0):W.push(1),R=3*G+1+(L===0)&255,E=3*G+1+(L===0)>>8&255,W.push(R),W.push(E),W.push(255&~R),W.push(255&~E),L===0&&W.push(0),V=0;V<G;V++)for(S=0;S<3;S++)w=(w+(x=(x+(R=(R=I[S][L][V])>255?255:R<0?0:Math.round(R)))%65521))%65521,W.push(R);W.push(0)}return P=(w<<16)+x,W.push(P>>24&255),W.push(P>>16&255),W.push(P>>8&255),W.push(255&P),N=W.length-41,W[33]=N>>24&255,W[34]=N>>16&255,W[35]=N>>8&255,W[36]=255&N,D=v(W,37),W.push(D>>24&255),W.push(D>>16&255),W.push(D>>8&255),W.push(255&D),W.push(0),W.push(0),W.push(0),W.push(0),W.push(73),W.push(69),W.push(78),W.push(68),W.push(174),W.push(66),W.push(96),W.push(130),"data:image/png;base64,"+function(X){var U,j,K,st,H,at,nt,pt=X.length,ot="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",q="";for(U=0;U<pt;U+=3)H=((3&(j=X[U]))<<4)+((K=X[U+1])>>4),at=((15&K)<<2)+((st=X[U+2])>>6),nt=63&st,U+1>=pt?at=nt=64:U+2>=pt&&(nt=64),q+=ot.charAt(j>>2)+ot.charAt(H)+ot.charAt(at)+ot.charAt(nt);return q}(W)},numeric._dim=function(I){for(var v=[];typeof I=="object";)v.push(I.length),I=I[0];return v},numeric.dim=function(I){var v;return typeof I=="object"?typeof(v=I[0])=="object"?typeof v[0]=="object"?numeric._dim(I):[I.length,v.length]:[I.length]:[]},numeric.mapreduce=function(I,v){return Function("x","accum","_s","_k",'if(typeof accum === "undefined") accum = '+v+`;
if(typeof x === "number") { var xi = x; `+I+`; return accum; }
if(typeof _s === "undefined") _s = numeric.dim(x);
if(typeof _k === "undefined") _k = 0;
var _n = _s[_k];
var i,xi;
if(_k < _s.length-1) {
    for(i=_n-1;i>=0;i--) {
        accum = arguments.callee(x[i],accum,_s,_k+1);
    }    return accum;
}
for(i=_n-1;i>=1;i-=2) { 
    xi = x[i];
    `+I+`;
    xi = x[i-1];
    `+I+`;
}
if(i === 0) {
    xi = x[i];
    `+I+`
}
return accum;`)},numeric.mapreduce2=function(I,v){return Function("x",`var n = x.length;
var i,xi;
`+v+`;
for(i=n-1;i!==-1;--i) { 
    xi = x[i];
    `+I+`;
}
return accum;`)},numeric.same=function I(v,x){var w,S;if(!(v instanceof Array&&x instanceof Array)||(S=v.length)!==x.length)return!1;for(w=0;w<S;w++)if(v[w]!==x[w]&&(typeof v[w]!="object"||!I(v[w],x[w])))return!1;return!0},numeric.rep=function(I,v,x){x===void 0&&(x=0);var w,S=I[x],N=Array(S);if(x===I.length-1){for(w=S-2;w>=0;w-=2)N[w+1]=v,N[w]=v;return w===-1&&(N[0]=v),N}for(w=S-1;w>=0;w--)N[w]=numeric.rep(I,v,x+1);return N},numeric.dotMMsmall=function(I,v){var x,w,S,N,R,E,L,V,P,D,O;for(N=I.length,R=v.length,E=v[0].length,L=Array(N),x=N-1;x>=0;x--){for(V=Array(E),P=I[x],S=E-1;S>=0;S--){for(D=P[R-1]*v[R-1][S],w=R-2;w>=1;w-=2)O=w-1,D+=P[w]*v[w][S]+P[O]*v[O][S];w===0&&(D+=P[0]*v[0][S]),V[S]=D}L[x]=V}return L},numeric._getCol=function(I,v,x){var w;for(w=I.length-1;w>0;--w)x[w]=I[w][v],x[--w]=I[w][v];w===0&&(x[0]=I[0][v])},numeric.dotMMbig=function(I,v){var x,w,S,N=numeric._getCol,R=v.length,E=Array(R),L=I.length,V=v[0].length,P=new Array(L),D=numeric.dotVV;for(--R,w=--L;w!==-1;--w)P[w]=Array(V);for(w=--V;w!==-1;--w)for(N(v,w,E),S=L;S!==-1;--S)x=I[S],P[S][w]=D(x,E);return P},numeric.dotMV=function(I,v){var x,w=I.length,S=(v.length,Array(w)),N=numeric.dotVV;for(x=w-1;x>=0;x--)S[x]=N(I[x],v);return S},numeric.dotVM=function(I,v){var x,w,S,N,R,E,L;for(S=I.length,N=v[0].length,R=Array(N),w=N-1;w>=0;w--){for(E=I[S-1]*v[S-1][w],x=S-2;x>=1;x-=2)L=x-1,E+=I[x]*v[x][w]+I[L]*v[L][w];x===0&&(E+=I[0]*v[0][w]),R[w]=E}return R},numeric.dotVV=function(I,v){var x,w,S=I.length,N=I[S-1]*v[S-1];for(x=S-2;x>=1;x-=2)w=x-1,N+=I[x]*v[x]+I[w]*v[w];return x===0&&(N+=I[0]*v[0]),N},numeric.dot=function(I,v){var x=numeric.dim;switch(1e3*x(I).length+x(v).length){case 2002:return v.length<10?numeric.dotMMsmall(I,v):numeric.dotMMbig(I,v);case 2001:return numeric.dotMV(I,v);case 1002:return numeric.dotVM(I,v);case 1001:return numeric.dotVV(I,v);case 1e3:return numeric.mulVS(I,v);case 1:return numeric.mulSV(I,v);case 0:return I*v;default:throw new Error("numeric.dot only works on vectors and matrices")}},numeric.diag=function(I){var v,x,w,S,N=I.length,R=Array(N);for(v=N-1;v>=0;v--){for(S=Array(N),x=v+2,w=N-1;w>=x;w-=2)S[w]=0,S[w-1]=0;for(w>v&&(S[w]=0),S[v]=I[v],w=v-1;w>=1;w-=2)S[w]=0,S[w-1]=0;w===0&&(S[0]=0),R[v]=S}return R},numeric.getDiag=function(I){var v,x=Math.min(I.length,I[0].length),w=Array(x);for(v=x-1;v>=1;--v)w[v]=I[v][v],w[--v]=I[v][v];return v===0&&(w[0]=I[0][0]),w},numeric.identity=function(I){return numeric.diag(numeric.rep([I],1))},numeric.pointwise=function(I,v,x){x===void 0&&(x="");var w,S,N=[],R=/\[i\]$/,E="",L=!1;for(w=0;w<I.length;w++)R.test(I[w])?E=S=I[w].substring(0,I[w].length-3):S=I[w],S==="ret"&&(L=!0),N.push(S);return N[I.length]="_s",N[I.length+1]="_k",N[I.length+2]='if(typeof _s === "undefined") _s = numeric.dim('+E+`);
if(typeof _k === "undefined") _k = 0;
var _n = _s[_k];
var i`+(L?"":", ret = Array(_n)")+`;
if(_k < _s.length-1) {
    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee(`+I.join(",")+`,_s,_k+1);
    return ret;
}
`+x+`
for(i=_n-1;i!==-1;--i) {
    `+v+`
}
return ret;`,Function.apply(null,N)},numeric.pointwise2=function(I,v,x){x===void 0&&(x="");var w,S,N=[],R=/\[i\]$/,E="",L=!1;for(w=0;w<I.length;w++)R.test(I[w])?E=S=I[w].substring(0,I[w].length-3):S=I[w],S==="ret"&&(L=!0),N.push(S);return N[I.length]="var _n = "+E+`.length;
var i`+(L?"":", ret = Array(_n)")+`;
`+x+`
for(i=_n-1;i!==-1;--i) {
`+v+`
}
return ret;`,Function.apply(null,N)},numeric._biforeach=function I(v,x,w,S,N){var R;if(S!==w.length-1)for(R=w[S]-1;R>=0;R--)I(typeof v=="object"?v[R]:v,typeof x=="object"?x[R]:x,w,S+1,N);else N(v,x)},numeric._biforeach2=function I(v,x,w,S,N){if(S===w.length-1)return N(v,x);var R,E=w[S],L=Array(E);for(R=E-1;R>=0;--R)L[R]=I(typeof v=="object"?v[R]:v,typeof x=="object"?x[R]:x,w,S+1,N);return L},numeric._foreach=function I(v,x,w,S){var N;if(w!==x.length-1)for(N=x[w]-1;N>=0;N--)I(v[N],x,w+1,S);else S(v)},numeric._foreach2=function I(v,x,w,S){if(w===x.length-1)return S(v);var N,R=x[w],E=Array(R);for(N=R-1;N>=0;N--)E[N]=I(v[N],x,w+1,S);return E},numeric.ops2={add:"+",sub:"-",mul:"*",div:"/",mod:"%",and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">=",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"},numeric.opseq={addeq:"+=",subeq:"-=",muleq:"*=",diveq:"/=",modeq:"%=",lshifteq:"<<=",rshifteq:">>=",rrshifteq:">>>=",bandeq:"&=",boreq:"|=",bxoreq:"^="},numeric.mathfuns=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan","isNaN","isFinite"],numeric.mathfuns2=["atan2","pow","max","min"],numeric.ops1={neg:"-",not:"!",bnot:"~",clone:""},numeric.mapreducers={any:["if(xi) return true;","var accum = false;"],all:["if(!xi) return false;","var accum = true;"],sum:["accum += xi;","var accum = 0;"],prod:["accum *= xi;","var accum = 1;"],norm2Squared:["accum += xi*xi;","var accum = 0;"],norminf:["accum = max(accum,abs(xi));","var accum = 0, max = Math.max, abs = Math.abs;"],norm1:["accum += abs(xi)","var accum = 0, abs = Math.abs;"],sup:["accum = max(accum,xi);","var accum = -Infinity, max = Math.max;"],inf:["accum = min(accum,xi);","var accum = Infinity, min = Math.min;"]},function(){var I,v;for(I=0;I<numeric.mathfuns2.length;++I)v=numeric.mathfuns2[I],numeric.ops2[v]=v;for(I in numeric.ops2)if(numeric.ops2.hasOwnProperty(I)){v=numeric.ops2[I];var x,w,S="";numeric.myIndexOf.call(numeric.mathfuns2,I)!==-1?(S="var "+v+" = Math."+v+`;
`,x=function(N,R,E){return N+" = "+v+"("+R+","+E+")"},w=function(N,R){return N+" = "+v+"("+N+","+R+")"}):(x=function(N,R,E){return N+" = "+R+" "+v+" "+E},w=numeric.opseq.hasOwnProperty(I+"eq")?function(N,R){return N+" "+v+"= "+R}:function(N,R){return N+" = "+N+" "+v+" "+R}),numeric[I+"VV"]=numeric.pointwise2(["x[i]","y[i]"],x("ret[i]","x[i]","y[i]"),S),numeric[I+"SV"]=numeric.pointwise2(["x","y[i]"],x("ret[i]","x","y[i]"),S),numeric[I+"VS"]=numeric.pointwise2(["x[i]","y"],x("ret[i]","x[i]","y"),S),numeric[I]=Function(`var n = arguments.length, i, x = arguments[0], y;
var VV = numeric.`+I+"VV, VS = numeric."+I+"VS, SV = numeric."+I+`SV;
var dim = numeric.dim;
for(i=1;i!==n;++i) { 
  y = arguments[i];
  if(typeof x === "object") {
      if(typeof y === "object") x = numeric._biforeach2(x,y,dim(x),0,VV);
      else x = numeric._biforeach2(x,y,dim(x),0,VS);
  } else if(typeof y === "object") x = numeric._biforeach2(x,y,dim(y),0,SV);
  else `+w("x","y")+`
}
return x;
`),numeric[v]=numeric[I],numeric[I+"eqV"]=numeric.pointwise2(["ret[i]","x[i]"],w("ret[i]","x[i]"),S),numeric[I+"eqS"]=numeric.pointwise2(["ret[i]","x"],w("ret[i]","x"),S),numeric[I+"eq"]=Function(`var n = arguments.length, i, x = arguments[0], y;
var V = numeric.`+I+"eqV, S = numeric."+I+`eqS
var s = numeric.dim(x);
for(i=1;i!==n;++i) { 
  y = arguments[i];
  if(typeof y === "object") numeric._biforeach(x,y,s,0,V);
  else numeric._biforeach(x,y,s,0,S);
}
return x;
`)}for(I=0;I<numeric.mathfuns2.length;++I)v=numeric.mathfuns2[I],delete numeric.ops2[v];for(I=0;I<numeric.mathfuns.length;++I)v=numeric.mathfuns[I],numeric.ops1[v]=v;for(I in numeric.ops1)numeric.ops1.hasOwnProperty(I)&&(S="",v=numeric.ops1[I],numeric.myIndexOf.call(numeric.mathfuns,I)!==-1&&Math.hasOwnProperty(v)&&(S="var "+v+" = Math."+v+`;
`),numeric[I+"eqV"]=numeric.pointwise2(["ret[i]"],"ret[i] = "+v+"(ret[i]);",S),numeric[I+"eq"]=Function("x",'if(typeof x !== "object") return '+v+`x
var i;
var V = numeric.`+I+`eqV;
var s = numeric.dim(x);
numeric._foreach(x,s,0,V);
return x;
`),numeric[I+"V"]=numeric.pointwise2(["x[i]"],"ret[i] = "+v+"(x[i]);",S),numeric[I]=Function("x",'if(typeof x !== "object") return '+v+`(x)
var i;
var V = numeric.`+I+`V;
var s = numeric.dim(x);
return numeric._foreach2(x,s,0,V);
`));for(I=0;I<numeric.mathfuns.length;++I)v=numeric.mathfuns[I],delete numeric.ops1[v];for(I in numeric.mapreducers)numeric.mapreducers.hasOwnProperty(I)&&(v=numeric.mapreducers[I],numeric[I+"V"]=numeric.mapreduce2(v[0],v[1]),numeric[I]=Function("x","s","k",v[1]+`if(typeof x !== "object") {    xi = x;
`+v[0]+`;
    return accum;
}if(typeof s === "undefined") s = numeric.dim(x);
if(typeof k === "undefined") k = 0;
if(k === s.length-1) return numeric.`+I+`V(x);
var xi;
var n = x.length, i;
for(i=n-1;i!==-1;--i) {
   xi = arguments.callee(x[i]);
`+v[0]+`;
}
return accum;
`))}(),numeric.truncVV=numeric.pointwise(["x[i]","y[i]"],"ret[i] = round(x[i]/y[i])*y[i];","var round = Math.round;"),numeric.truncVS=numeric.pointwise(["x[i]","y"],"ret[i] = round(x[i]/y)*y;","var round = Math.round;"),numeric.truncSV=numeric.pointwise(["x","y[i]"],"ret[i] = round(x/y[i])*y[i];","var round = Math.round;"),numeric.trunc=function(I,v){return typeof I=="object"?typeof v=="object"?numeric.truncVV(I,v):numeric.truncVS(I,v):typeof v=="object"?numeric.truncSV(I,v):Math.round(I/v)*v},numeric.inv=function(I){var v,x,w,S,N,R,E,L=numeric.dim(I),V=Math.abs,P=L[0],D=L[1],O=numeric.clone(I),G=numeric.identity(P);for(R=0;R<D;++R){var W=-1,X=-1;for(N=R;N!==P;++N)(E=V(O[N][R]))>X&&(W=N,X=E);for(x=O[W],O[W]=O[R],O[R]=x,S=G[W],G[W]=G[R],G[R]=S,I=x[R],E=R;E!==D;++E)x[E]/=I;for(E=D-1;E!==-1;--E)S[E]/=I;for(N=P-1;N!==-1;--N)if(N!==R){for(v=O[N],w=G[N],I=v[R],E=R+1;E!==D;++E)v[E]-=x[E]*I;for(E=D-1;E>0;--E)w[E]-=S[E]*I,w[--E]-=S[E]*I;E===0&&(w[0]-=S[0]*I)}}return G},numeric.det=function(I){var v=numeric.dim(I);if(v.length!==2||v[0]!==v[1])throw new Error("numeric: det() only works on square matrices");var x,w,S,N,R,E,L,V,P=v[0],D=1,O=numeric.clone(I);for(w=0;w<P-1;w++){for(S=w,x=w+1;x<P;x++)Math.abs(O[x][w])>Math.abs(O[S][w])&&(S=x);for(S!==w&&(L=O[S],O[S]=O[w],O[w]=L,D*=-1),N=O[w],x=w+1;x<P;x++){for(E=(R=O[x])[w]/N[w],S=w+1;S<P-1;S+=2)V=S+1,R[S]-=N[S]*E,R[V]-=N[V]*E;S!==P&&(R[S]-=N[S]*E)}if(N[w]===0)return 0;D*=N[w]}return D*O[w][w]},numeric.transpose=function(I){var v,x,w,S,N,R=I.length,E=I[0].length,L=Array(E);for(x=0;x<E;x++)L[x]=Array(R);for(v=R-1;v>=1;v-=2){for(S=I[v],w=I[v-1],x=E-1;x>=1;--x)(N=L[x])[v]=S[x],N[v-1]=w[x],(N=L[--x])[v]=S[x],N[v-1]=w[x];x===0&&((N=L[0])[v]=S[0],N[v-1]=w[0])}if(v===0){for(w=I[0],x=E-1;x>=1;--x)L[x][0]=w[x],L[--x][0]=w[x];x===0&&(L[0][0]=w[0])}return L},numeric.negtranspose=function(I){var v,x,w,S,N,R=I.length,E=I[0].length,L=Array(E);for(x=0;x<E;x++)L[x]=Array(R);for(v=R-1;v>=1;v-=2){for(S=I[v],w=I[v-1],x=E-1;x>=1;--x)(N=L[x])[v]=-S[x],N[v-1]=-w[x],(N=L[--x])[v]=-S[x],N[v-1]=-w[x];x===0&&((N=L[0])[v]=-S[0],N[v-1]=-w[0])}if(v===0){for(w=I[0],x=E-1;x>=1;--x)L[x][0]=-w[x],L[--x][0]=-w[x];x===0&&(L[0][0]=-w[0])}return L},numeric._random=function I(v,x){var w,S,N=v[x],R=Array(N);if(x===v.length-1){for(S=Math.random,w=N-1;w>=1;w-=2)R[w]=S(),R[w-1]=S();return w===0&&(R[0]=S()),R}for(w=N-1;w>=0;w--)R[w]=I(v,x+1);return R},numeric.random=function(I){return numeric._random(I,0)},numeric.norm2=function(I){return Math.sqrt(numeric.norm2Squared(I))},numeric.linspace=function(I,v,x){if(x===void 0&&(x=Math.max(Math.round(v-I)+1,1)),x<2)return x===1?[I]:[];var w,S=Array(x);for(w=--x;w>=0;w--)S[w]=(w*v+(x-w)*I)/x;return S},numeric.getBlock=function(I,v,x){var w=numeric.dim(I);return function S(N,R){var E,L=v[R],V=x[R]-L,P=Array(V);if(R===w.length-1){for(E=V;E>=0;E--)P[E]=N[E+L];return P}for(E=V;E>=0;E--)P[E]=S(N[E+L],R+1);return P}(I,0)},numeric.setBlock=function(I,v,x,w){var S=numeric.dim(I);return function N(R,E,L){var V,P=v[L],D=x[L]-P;if(L===S.length-1)for(V=D;V>=0;V--)R[V+P]=E[V];for(V=D;V>=0;V--)N(R[V+P],E[V],L+1)}(I,w,0),I},numeric.getRange=function(I,v,x){var w,S,N,R,E=v.length,L=x.length,V=Array(E);for(w=E-1;w!==-1;--w)for(V[w]=Array(L),N=V[w],R=I[v[w]],S=L-1;S!==-1;--S)N[S]=R[x[S]];return V},numeric.blockMatrix=function(I){var v=numeric.dim(I);if(v.length<4)return numeric.blockMatrix([I]);var x,w,S,N,R,E=v[0],L=v[1];for(x=0,w=0,S=0;S<E;++S)x+=I[S][0].length;for(N=0;N<L;++N)w+=I[0][N][0].length;var V=Array(x);for(S=0;S<x;++S)V[S]=Array(w);var P,D,O,G,W,X=0;for(S=0;S<E;++S){for(P=w,N=L-1;N!==-1;--N)for(P-=(R=I[S][N])[0].length,O=R.length-1;O!==-1;--O)for(W=R[O],D=V[X+O],G=W.length-1;G!==-1;--G)D[P+G]=W[G];X+=I[S][0].length}return V},numeric.tensor=function(I,v){if(typeof I=="number"||typeof v=="number")return numeric.mul(I,v);var x=numeric.dim(I),w=numeric.dim(v);if(x.length!==1||w.length!==1)throw new Error("numeric: tensor product is only defined for vectors");var S,N,R,E,L=x[0],V=w[0],P=Array(L);for(N=L-1;N>=0;N--){for(S=Array(V),E=I[N],R=V-1;R>=3;--R)S[R]=E*v[R],S[--R]=E*v[R],S[--R]=E*v[R],S[--R]=E*v[R];for(;R>=0;)S[R]=E*v[R],--R;P[N]=S}return P},numeric.T=function(I,v){this.x=I,this.y=v},numeric.t=function(I,v){return new numeric.T(I,v)},numeric.Tbinop=function(I,v,x,w,S){var N;if(numeric.indexOf,typeof S!="string")for(N in S="",numeric)numeric.hasOwnProperty(N)&&(I.indexOf(N)>=0||v.indexOf(N)>=0||x.indexOf(N)>=0||w.indexOf(N)>=0)&&N.length>1&&(S+="var "+N+" = numeric."+N+`;
`);return Function(["y"],`var x = this;
if(!(y instanceof numeric.T)) { y = new numeric.T(y); }
`+S+`
if(x.y) {  if(y.y) {    return new numeric.T(`+w+`);
  }
  return new numeric.T(`+x+`);
}
if(y.y) {
  return new numeric.T(`+v+`);
}
return new numeric.T(`+I+`);
`)},numeric.T.prototype.add=numeric.Tbinop("add(x.x,y.x)","add(x.x,y.x),y.y","add(x.x,y.x),x.y","add(x.x,y.x),add(x.y,y.y)"),numeric.T.prototype.sub=numeric.Tbinop("sub(x.x,y.x)","sub(x.x,y.x),neg(y.y)","sub(x.x,y.x),x.y","sub(x.x,y.x),sub(x.y,y.y)"),numeric.T.prototype.mul=numeric.Tbinop("mul(x.x,y.x)","mul(x.x,y.x),mul(x.x,y.y)","mul(x.x,y.x),mul(x.y,y.x)","sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))"),numeric.T.prototype.reciprocal=function(){var I=numeric.mul,v=numeric.div;if(this.y){var x=numeric.add(I(this.x,this.x),I(this.y,this.y));return new numeric.T(v(this.x,x),v(numeric.neg(this.y),x))}return new T(v(1,this.x))},numeric.T.prototype.div=function(I){if(I instanceof numeric.T||(I=new numeric.T(I)),I.y)return this.mul(I.reciprocal());var v=numeric.div;return this.y?new numeric.T(v(this.x,I.x),v(this.y,I.x)):new numeric.T(v(this.x,I.x))},numeric.T.prototype.dot=numeric.Tbinop("dot(x.x,y.x)","dot(x.x,y.x),dot(x.x,y.y)","dot(x.x,y.x),dot(x.y,y.x)","sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))"),numeric.T.prototype.transpose=function(){var I=numeric.transpose,v=this.x,x=this.y;return x?new numeric.T(I(v),I(x)):new numeric.T(I(v))},numeric.T.prototype.transjugate=function(){var I=numeric.transpose,v=this.x,x=this.y;return x?new numeric.T(I(v),numeric.negtranspose(x)):new numeric.T(I(v))},numeric.Tunop=function(I,v,x){return typeof x!="string"&&(x=""),Function(`var x = this;
`+x+`
if(x.y) {  `+v+`;
}
`+I+`;
`)},numeric.T.prototype.exp=numeric.Tunop("return new numeric.T(ex)","return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))","var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;"),numeric.T.prototype.conj=numeric.Tunop("return new numeric.T(x.x);","return new numeric.T(x.x,numeric.neg(x.y));"),numeric.T.prototype.neg=numeric.Tunop("return new numeric.T(neg(x.x));","return new numeric.T(neg(x.x),neg(x.y));","var neg = numeric.neg;"),numeric.T.prototype.sin=numeric.Tunop("return new numeric.T(numeric.sin(x.x))","return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));"),numeric.T.prototype.cos=numeric.Tunop("return new numeric.T(numeric.cos(x.x))","return x.exp().add(x.neg().exp()).div(2);"),numeric.T.prototype.abs=numeric.Tunop("return new numeric.T(numeric.abs(x.x));","return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));","var mul = numeric.mul;"),numeric.T.prototype.log=numeric.Tunop("return new numeric.T(numeric.log(x.x));",`var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();
return new numeric.T(numeric.log(r.x),theta.x);`),numeric.T.prototype.norm2=numeric.Tunop("return numeric.norm2(x.x);",`var f = numeric.norm2Squared;
return Math.sqrt(f(x.x)+f(x.y));`),numeric.T.prototype.inv=function(){var I=this;if(I.y===void 0)return new numeric.T(numeric.inv(I.x));var v,x,w,S,N,R,E,L,V,P,D,O,G,W,X,U,j,K,st=I.x.length,H=numeric.identity(st),at=numeric.rep([st,st],0),nt=numeric.clone(I.x),pt=numeric.clone(I.y);for(V=0;V<st;V++){for(O=(W=nt[V][V])*W+(X=pt[V][V])*X,D=V,P=V+1;P<st;P++)(G=(W=nt[P][V])*W+(X=pt[P][V])*X)>O&&(D=P,O=G);for(D!==V&&(K=nt[V],nt[V]=nt[D],nt[D]=K,K=pt[V],pt[V]=pt[D],pt[D]=K,K=H[V],H[V]=H[D],H[D]=K,K=at[V],at[V]=at[D],at[D]=K),v=nt[V],x=pt[V],N=H[V],R=at[V],W=v[V],X=x[V],P=V+1;P<st;P++)U=v[P],j=x[P],v[P]=(U*W+j*X)/O,x[P]=(j*W-U*X)/O;for(P=0;P<st;P++)U=N[P],j=R[P],N[P]=(U*W+j*X)/O,R[P]=(j*W-U*X)/O;for(P=V+1;P<st;P++){for(w=nt[P],S=pt[P],E=H[P],L=at[P],W=w[V],X=S[V],D=V+1;D<st;D++)U=v[D],j=x[D],w[D]-=U*W-j*X,S[D]-=j*W+U*X;for(D=0;D<st;D++)U=N[D],j=R[D],E[D]-=U*W-j*X,L[D]-=j*W+U*X}}for(V=st-1;V>0;V--)for(N=H[V],R=at[V],P=V-1;P>=0;P--)for(E=H[P],L=at[P],W=nt[P][V],X=pt[P][V],D=st-1;D>=0;D--)U=N[D],j=R[D],E[D]-=W*U-X*j,L[D]-=W*j+X*U;return new numeric.T(H,at)},numeric.T.prototype.get=function(I){var v,x=this.x,w=this.y,S=0,N=I.length;if(w){for(;S<N;)x=x[v=I[S]],w=w[v],S++;return new numeric.T(x,w)}for(;S<N;)x=x[v=I[S]],S++;return new numeric.T(x)},numeric.T.prototype.set=function(I,v){var x,w=this.x,S=this.y,N=0,R=I.length,E=v.x,L=v.y;if(R===0)return L?this.y=L:S&&(this.y=void 0),this.x=w,this;if(L){for(S||(S=numeric.rep(numeric.dim(w),0),this.y=S);N<R-1;)w=w[x=I[N]],S=S[x],N++;return w[x=I[N]]=E,S[x]=L,this}if(S){for(;N<R-1;)w=w[x=I[N]],S=S[x],N++;return w[x=I[N]]=E,S[x]=E instanceof Array?numeric.rep(numeric.dim(E),0):0,this}for(;N<R-1;)w=w[x=I[N]],N++;return w[x=I[N]]=E,this},numeric.T.prototype.getRows=function(I,v){var x,w,S=v-I+1,N=Array(S),R=this.x,E=this.y;for(x=I;x<=v;x++)N[x-I]=R[x];if(E){for(w=Array(S),x=I;x<=v;x++)w[x-I]=E[x];return new numeric.T(N,w)}return new numeric.T(N)},numeric.T.prototype.setRows=function(I,v,x){var w,S=this.x,N=this.y,R=x.x,E=x.y;for(w=I;w<=v;w++)S[w]=R[w-I];if(E)for(N||(N=numeric.rep(numeric.dim(S),0),this.y=N),w=I;w<=v;w++)N[w]=E[w-I];else if(N)for(w=I;w<=v;w++)N[w]=numeric.rep([R[w-I].length],0);return this},numeric.T.prototype.getRow=function(I){var v=this.x,x=this.y;return x?new numeric.T(v[I],x[I]):new numeric.T(v[I])},numeric.T.prototype.setRow=function(I,v){var x=this.x,w=this.y,S=v.x,N=v.y;return x[I]=S,N?(w||(w=numeric.rep(numeric.dim(x),0),this.y=w),w[I]=N):w&&(w=numeric.rep([S.length],0)),this},numeric.T.prototype.getBlock=function(I,v){var x=this.x,w=this.y,S=numeric.getBlock;return w?new numeric.T(S(x,I,v),S(w,I,v)):new numeric.T(S(x,I,v))},numeric.T.prototype.setBlock=function(I,v,x){x instanceof numeric.T||(x=new numeric.T(x));var w=this.x,S=this.y,N=numeric.setBlock,R=x.x,E=x.y;if(E)return S||(this.y=numeric.rep(numeric.dim(this),0),S=this.y),N(w,I,v,R),N(S,I,v,E),this;N(w,I,v,R),S&&N(S,I,v,numeric.rep(numeric.dim(R),0))},numeric.T.rep=function(I,v){var x=numeric.T;v instanceof x||(v=new x(v));var w=v.x,S=v.y,N=numeric.rep;return S?new x(N(I,w),N(I,S)):new x(N(I,w))},numeric.T.diag=function(I){I instanceof numeric.T||(I=new numeric.T(I));var v=I.x,x=I.y,w=numeric.diag;return x?new numeric.T(w(v),w(x)):new numeric.T(w(v))},numeric.T.eig=function(){if(this.y)throw new Error("eig: not implemented for complex matrices.");return numeric.eig(this.x)},numeric.T.identity=function(I){return new numeric.T(numeric.identity(I))},numeric.T.prototype.getDiag=function(){var I=numeric,v=this.x,x=this.y;return x?new I.T(I.getDiag(v),I.getDiag(x)):new I.T(I.getDiag(v))},numeric.house=function(I){var v=numeric.clone(I),x=(I[0]>=0?1:-1)*numeric.norm2(I);v[0]+=x;var w=numeric.norm2(v);if(w===0)throw new Error("eig: internal error");return numeric.div(v,w)},numeric.toUpperHessenberg=function(I){var v=numeric.dim(I);if(v.length!==2||v[0]!==v[1])throw new Error("numeric: toUpperHessenberg() only works on square matrices");var x,w,S,N,R,E,L,V,P,D,O=v[0],G=numeric.clone(I),W=numeric.identity(O);for(w=0;w<O-2;w++){for(N=Array(O-w-1),x=w+1;x<O;x++)N[x-w-1]=G[x][w];if(numeric.norm2(N)>0){for(R=numeric.house(N),E=numeric.getBlock(G,[w+1,w],[O-1,O-1]),L=numeric.tensor(R,numeric.dot(R,E)),x=w+1;x<O;x++)for(V=G[x],P=L[x-w-1],S=w;S<O;S++)V[S]-=2*P[S-w];for(E=numeric.getBlock(G,[0,w+1],[O-1,O-1]),L=numeric.tensor(numeric.dot(E,R),R),x=0;x<O;x++)for(V=G[x],P=L[x],S=w+1;S<O;S++)V[S]-=2*P[S-w-1];for(E=Array(O-w-1),x=w+1;x<O;x++)E[x-w-1]=W[x];for(L=numeric.tensor(R,numeric.dot(R,E)),x=w+1;x<O;x++)for(D=W[x],P=L[x-w-1],S=0;S<O;S++)D[S]-=2*P[S]}}return{H:G,Q:W}},numeric.epsilon=2220446049250313e-31,numeric.QRFrancis=function(I,v){v===void 0&&(v=1e4),I=numeric.clone(I),numeric.clone(I);var x,w,S,N,R,E,L,V,P,D,O,G,W,X,U,j,K,st,H=numeric.dim(I)[0],at=numeric.identity(H);if(H<3)return{Q:at,B:[[0,H-1]]};var nt=numeric.epsilon;for(st=0;st<v;st++){for(j=0;j<H-1;j++)if(Math.abs(I[j+1][j])<nt*(Math.abs(I[j][j])+Math.abs(I[j+1][j+1]))){var pt=numeric.QRFrancis(numeric.getBlock(I,[0,0],[j,j]),v),ot=numeric.QRFrancis(numeric.getBlock(I,[j+1,j+1],[H-1,H-1]),v);for(G=Array(j+1),U=0;U<=j;U++)G[U]=at[U];for(W=numeric.dot(pt.Q,G),U=0;U<=j;U++)at[U]=W[U];for(G=Array(H-j-1),U=j+1;U<H;U++)G[U-j-1]=at[U];for(W=numeric.dot(ot.Q,G),U=j+1;U<H;U++)at[U]=W[U-j-1];return{Q:at,B:pt.B.concat(numeric.add(ot.B,j+1))}}var q,bt,$t;for(S=I[H-2][H-2],N=I[H-2][H-1],R=I[H-1][H-2],V=S+(E=I[H-1][H-1]),L=S*E-N*R,P=numeric.getBlock(I,[0,0],[2,2]),V*V>=4*L?(q=.5*(V+Math.sqrt(V*V-4*L)),bt=.5*(V-Math.sqrt(V*V-4*L)),P=numeric.add(numeric.sub(numeric.dot(P,P),numeric.mul(P,q+bt)),numeric.diag(numeric.rep([3],q*bt)))):P=numeric.add(numeric.sub(numeric.dot(P,P),numeric.mul(P,V)),numeric.diag(numeric.rep([3],L))),x=[P[0][0],P[1][0],P[2][0]],w=numeric.house(x),G=[I[0],I[1],I[2]],W=numeric.tensor(w,numeric.dot(w,G)),U=0;U<3;U++)for(O=I[U],X=W[U],K=0;K<H;K++)O[K]-=2*X[K];for(G=numeric.getBlock(I,[0,0],[H-1,2]),W=numeric.tensor(numeric.dot(G,w),w),U=0;U<H;U++)for(O=I[U],X=W[U],K=0;K<3;K++)O[K]-=2*X[K];for(G=[at[0],at[1],at[2]],W=numeric.tensor(w,numeric.dot(w,G)),U=0;U<3;U++)for(D=at[U],X=W[U],K=0;K<H;K++)D[K]-=2*X[K];for(j=0;j<H-2;j++){for(K=j;K<=j+1;K++)if(Math.abs(I[K+1][K])<nt*(Math.abs(I[K][K])+Math.abs(I[K+1][K+1]))){for(pt=numeric.QRFrancis(numeric.getBlock(I,[0,0],[K,K]),v),ot=numeric.QRFrancis(numeric.getBlock(I,[K+1,K+1],[H-1,H-1]),v),G=Array(K+1),U=0;U<=K;U++)G[U]=at[U];for(W=numeric.dot(pt.Q,G),U=0;U<=K;U++)at[U]=W[U];for(G=Array(H-K-1),U=K+1;U<H;U++)G[U-K-1]=at[U];for(W=numeric.dot(ot.Q,G),U=K+1;U<H;U++)at[U]=W[U-K-1];return{Q:at,B:pt.B.concat(numeric.add(ot.B,K+1))}}for($t=Math.min(H-1,j+3),x=Array($t-j),U=j+1;U<=$t;U++)x[U-j-1]=I[U][j];for(w=numeric.house(x),G=numeric.getBlock(I,[j+1,j],[$t,H-1]),W=numeric.tensor(w,numeric.dot(w,G)),U=j+1;U<=$t;U++)for(O=I[U],X=W[U-j-1],K=j;K<H;K++)O[K]-=2*X[K-j];for(G=numeric.getBlock(I,[0,j+1],[H-1,$t]),W=numeric.tensor(numeric.dot(G,w),w),U=0;U<H;U++)for(O=I[U],X=W[U],K=j+1;K<=$t;K++)O[K]-=2*X[K-j-1];for(G=Array($t-j),U=j+1;U<=$t;U++)G[U-j-1]=at[U];for(W=numeric.tensor(w,numeric.dot(w,G)),U=j+1;U<=$t;U++)for(D=at[U],X=W[U-j-1],K=0;K<H;K++)D[K]-=2*X[K]}}throw new Error("numeric: eigenvalue iteration does not converge -- increase maxiter?")},numeric.eig=function(I,v){var x,w,S,N,R,E,L,V,P,D,O,G,W,X,U,j,K=numeric.toUpperHessenberg(I),st=numeric.QRFrancis(K.H,v),H=numeric.T,at=I.length,nt=st.B,pt=numeric.dot(st.Q,numeric.dot(K.H,numeric.transpose(st.Q))),ot=new H(numeric.dot(st.Q,K.Q)),q=nt.length,bt=Math.sqrt;for(w=0;w<q;w++)if((x=nt[w][0])!==nt[w][1]){if(N=x+1,R=pt[x][x],E=pt[x][N],L=pt[N][x],V=pt[N][N],E===0&&L===0)continue;(D=(P=-R-V)*P-4*(R*V-E*L))>=0?((U=(R-(O=P<0?-.5*(P-bt(D)):-.5*(P+bt(D))))*(R-O)+E*E)>(j=L*L+(V-O)*(V-O))?(W=(R-O)/(U=bt(U)),X=E/U):(W=L/(j=bt(j)),X=(V-O)/j),S=new H([[X,-W],[W,X]]),ot.setRows(x,N,S.dot(ot.getRows(x,N)))):(O=-.5*P,G=.5*bt(-D),(U=(R-O)*(R-O)+E*E)>(j=L*L+(V-O)*(V-O))?(W=(R-O)/(U=bt(U+G*G)),X=E/U,O=0,G/=U):(W=L/(j=bt(j+G*G)),X=(V-O)/j,O=G/j,G=0),S=new H([[X,-W],[W,X]],[[O,G],[G,-O]]),ot.setRows(x,N,S.dot(ot.getRows(x,N))))}var $t=ot.dot(I).dot(ot.transjugate()),zt=(at=I.length,numeric.T.identity(at));for(N=0;N<at;N++)if(N>0)for(w=N-1;w>=0;w--){var Xt=$t.get([w,w]),Zt=$t.get([N,N]);numeric.neq(Xt.x,Zt.x)||numeric.neq(Xt.y,Zt.y)?(O=$t.getRow(w).getBlock([w],[N-1]),G=zt.getRow(N).getBlock([w],[N-1]),zt.set([N,w],$t.get([w,N]).neg().sub(O.dot(G)).div(Xt.sub(Zt)))):zt.setRow(N,zt.getRow(w))}for(N=0;N<at;N++)O=zt.getRow(N),zt.setRow(N,O.div(O.norm2()));return zt=zt.transpose(),zt=ot.transjugate().dot(zt),{lambda:$t.getDiag(),E:zt}},numeric.ccsSparse=function(I){var v,x,w,S=I.length,N=[];for(x=S-1;x!==-1;--x)for(w in v=I[x]){for(w=parseInt(w);w>=N.length;)N[N.length]=0;v[w]!==0&&N[w]++}var R=N.length,E=Array(R+1);for(E[0]=0,x=0;x<R;++x)E[x+1]=E[x]+N[x];var L=Array(E[R]),V=Array(E[R]);for(x=S-1;x!==-1;--x)for(w in v=I[x])v[w]!==0&&(N[w]--,L[E[w]+N[w]]=x,V[E[w]+N[w]]=v[w]);return[E,L,V]},numeric.ccsFull=function(I){var v,x,w,S,N=I[0],R=I[1],E=I[2],L=numeric.ccsDim(I),V=L[0],P=L[1],D=numeric.rep([V,P],0);for(v=0;v<P;v++)for(w=N[v],S=N[v+1],x=w;x<S;++x)D[R[x]][v]=E[x];return D},numeric.ccsTSolve=function(I,v,x,w,S){var N,R,E,L,V,P,D,O=I[0],G=I[1],W=I[2],X=O.length-1,U=Math.max,j=0;function K(st){var H;if(x[st]===0){for(x[st]=1,H=O[st];H<O[st+1];++H)K(G[H]);S[j]=st,++j}}for(w===void 0&&(x=numeric.rep([X],0)),w===void 0&&(w=numeric.linspace(0,x.length-1)),S===void 0&&(S=[]),N=w.length-1;N!==-1;--N)K(w[N]);for(S.length=j,N=S.length-1;N!==-1;--N)x[S[N]]=0;for(N=w.length-1;N!==-1;--N)R=w[N],x[R]=v[R];for(N=S.length-1;N!==-1;--N){for(R=S[N],E=O[R],L=U(O[R+1],E),V=E;V!==L;++V)if(G[V]===R){x[R]/=W[V];break}for(D=x[R],V=E;V!==L;++V)(P=G[V])!==R&&(x[P]-=D*W[V])}return x},numeric.ccsDFS=function(I){this.k=Array(I),this.k1=Array(I),this.j=Array(I)},numeric.ccsDFS.prototype.dfs=function(I,v,x,w,S,N){var R,E,L,V=0,P=S.length,D=this.k,O=this.k1,G=this.j;if(w[I]===0)for(w[I]=1,G[0]=I,D[0]=E=v[I],O[0]=L=v[I+1];;)if(E>=L){if(S[P]=G[V],V===0)return;++P,E=D[--V],L=O[V]}else w[R=N[x[E]]]===0?(w[R]=1,D[V]=E,G[++V]=R,E=v[R],O[V]=L=v[R+1]):++E},numeric.ccsLPSolve=function(I,v,x,w,S,N,R){var E,L,V,P,D,O,G,W,X,U=I[0],j=I[1],K=I[2],st=(U.length,v[0]),H=v[1],at=v[2];for(L=st[S],V=st[S+1],w.length=0,E=L;E<V;++E)R.dfs(N[H[E]],U,j,x,w,N);for(E=w.length-1;E!==-1;--E)x[w[E]]=0;for(E=L;E!==V;++E)x[P=N[H[E]]]=at[E];for(E=w.length-1;E!==-1;--E){for(D=U[P=w[E]],O=U[P+1],G=D;G<O;++G)if(N[j[G]]===P){x[P]/=K[G];break}for(X=x[P],G=D;G<O;++G)(W=N[j[G]])!==P&&(x[W]-=X*K[G])}return x},numeric.ccsLUP1=function(I,v){var x,w,S,N,R,E,L,V=I[0].length-1,P=[numeric.rep([V+1],0),[],[]],D=[numeric.rep([V+1],0),[],[]],O=P[0],G=P[1],W=P[2],X=D[0],U=D[1],j=D[2],K=numeric.rep([V],0),st=numeric.rep([V],0),H=numeric.ccsLPSolve,at=Math.abs,nt=numeric.linspace(0,V-1),pt=numeric.linspace(0,V-1),ot=new numeric.ccsDFS(V);for(v===void 0&&(v=1),x=0;x<V;++x){for(H(P,I,K,st,x,pt,ot),N=-1,R=-1,w=st.length-1;w!==-1;--w)(S=st[w])<=x||(E=at(K[S]))>N&&(R=S,N=E);for(at(K[x])<v*N&&(w=nt[x],N=nt[R],nt[x]=N,pt[N]=x,nt[R]=w,pt[w]=R,N=K[x],K[x]=K[R],K[R]=N),N=O[x],R=X[x],L=K[x],G[N]=nt[x],W[N]=1,++N,w=st.length-1;w!==-1;--w)E=K[S=st[w]],st[w]=0,K[S]=0,S<=x?(U[R]=S,j[R]=E,++R):(G[N]=nt[S],W[N]=E/L,++N);O[x+1]=N,X[x+1]=R}for(w=G.length-1;w!==-1;--w)G[w]=pt[G[w]];return{L:P,U:D,P:nt,Pinv:pt}},numeric.ccsDFS0=function(I){this.k=Array(I),this.k1=Array(I),this.j=Array(I)},numeric.ccsDFS0.prototype.dfs=function(I,v,x,w,S,N,R){var E,L,V,P=0,D=S.length,O=this.k,G=this.k1,W=this.j;if(w[I]===0)for(w[I]=1,W[0]=I,O[0]=L=v[N[I]],G[0]=V=v[N[I]+1];;){if(isNaN(L))throw new Error("Ow!");if(L>=V){if(S[D]=N[W[P]],P===0)return;++D,L=O[--P],V=G[P]}else w[E=x[L]]===0?(w[E]=1,O[P]=L,W[++P]=E,L=v[E=N[E]],G[P]=V=v[E+1]):++L}},numeric.ccsLPSolve0=function(I,v,x,w,S,N,R,E){var L,V,P,D,O,G,W,X,U,j=I[0],K=I[1],st=I[2],H=(j.length,v[0]),at=v[1],nt=v[2];for(V=H[S],P=H[S+1],w.length=0,L=V;L<P;++L)E.dfs(at[L],j,K,x,w,N,R);for(L=w.length-1;L!==-1;--L)x[R[D=w[L]]]=0;for(L=V;L!==P;++L)x[D=at[L]]=nt[L];for(L=w.length-1;L!==-1;--L){for(X=R[D=w[L]],O=j[D],G=j[D+1],W=O;W<G;++W)if(K[W]===X){x[X]/=st[W];break}for(U=x[X],W=O;W<G;++W)x[K[W]]-=U*st[W];x[X]=U}},numeric.ccsLUP0=function(I,v){var x,w,S,N,R,E,L,V=I[0].length-1,P=[numeric.rep([V+1],0),[],[]],D=[numeric.rep([V+1],0),[],[]],O=P[0],G=P[1],W=P[2],X=D[0],U=D[1],j=D[2],K=numeric.rep([V],0),st=numeric.rep([V],0),H=numeric.ccsLPSolve0,at=Math.abs,nt=numeric.linspace(0,V-1),pt=numeric.linspace(0,V-1),ot=new numeric.ccsDFS0(V);for(v===void 0&&(v=1),x=0;x<V;++x){for(H(P,I,K,st,x,pt,nt,ot),N=-1,R=-1,w=st.length-1;w!==-1;--w)(S=st[w])<=x||(E=at(K[nt[S]]))>N&&(R=S,N=E);for(at(K[nt[x]])<v*N&&(w=nt[x],N=nt[R],nt[x]=N,pt[N]=x,nt[R]=w,pt[w]=R),N=O[x],R=X[x],L=K[nt[x]],G[N]=nt[x],W[N]=1,++N,w=st.length-1;w!==-1;--w)E=K[nt[S=st[w]]],st[w]=0,K[nt[S]]=0,S<=x?(U[R]=S,j[R]=E,++R):(G[N]=nt[S],W[N]=E/L,++N);O[x+1]=N,X[x+1]=R}for(w=G.length-1;w!==-1;--w)G[w]=pt[G[w]];return{L:P,U:D,P:nt,Pinv:pt}},numeric.ccsLUP=numeric.ccsLUP0,numeric.ccsDim=function(I){return[numeric.sup(I[1])+1,I[0].length-1]},numeric.ccsGetBlock=function(I,v,x){var w=numeric.ccsDim(I),S=w[0],N=w[1];v===void 0?v=numeric.linspace(0,S-1):typeof v=="number"&&(v=[v]),x===void 0?x=numeric.linspace(0,N-1):typeof x=="number"&&(x=[x]);var R,E,L,V,P=v.length,D=x.length,O=numeric.rep([N],0),G=[],W=[],X=[O,G,W],U=I[0],j=I[1],K=I[2],st=numeric.rep([S],0),H=0,at=numeric.rep([S],0);for(E=0;E<D;++E){var nt=U[V=x[E]],pt=U[V+1];for(R=nt;R<pt;++R)at[L=j[R]]=1,st[L]=K[R];for(R=0;R<P;++R)at[v[R]]&&(G[H]=R,W[H]=st[v[R]],++H);for(R=nt;R<pt;++R)at[L=j[R]]=0;O[E+1]=H}return X},numeric.ccsDot=function(I,v){var x,w,S,N,R,E,L,V,P,D,O,G=I[0],W=I[1],X=I[2],U=v[0],j=v[1],K=v[2],st=numeric.ccsDim(I),H=numeric.ccsDim(v),at=st[0],nt=(st[1],H[1]),pt=numeric.rep([at],0),ot=numeric.rep([at],0),q=Array(at),bt=numeric.rep([nt],0),$t=[],zt=[],Xt=[bt,$t,zt];for(S=0;S!==nt;++S){for(N=U[S],R=U[S+1],P=0,w=N;w<R;++w)for(D=j[w],O=K[w],E=G[D],L=G[D+1],x=E;x<L;++x)ot[V=W[x]]===0&&(q[P]=V,ot[V]=1,P+=1),pt[V]=pt[V]+X[x]*O;for(R=(N=bt[S])+P,bt[S+1]=R,w=P-1;w!==-1;--w)O=N+w,x=q[w],$t[O]=x,zt[O]=pt[x],ot[x]=0,pt[x]=0;bt[S+1]=bt[S]+P}return Xt},numeric.ccsLUPSolve=function(I,v){var x=I.L,w=I.U,S=(I.P,v[0]),N=!1;typeof S!="object"&&(S=(v=[[0,v.length],numeric.linspace(0,v.length-1),v])[0],N=!0);var R,E,L,V,P,D,O=v[1],G=v[2],W=x[0].length-1,X=S.length-1,U=numeric.rep([W],0),j=Array(W),K=numeric.rep([W],0),st=Array(W),H=numeric.rep([X+1],0),at=[],nt=[],pt=numeric.ccsTSolve,ot=0;for(R=0;R<X;++R){for(P=0,L=S[R],V=S[R+1],E=L;E<V;++E)D=I.Pinv[O[E]],st[P]=D,K[D]=G[E],++P;for(st.length=P,pt(x,K,U,st,j),E=st.length-1;E!==-1;--E)K[st[E]]=0;if(pt(w,U,K,j,st),N)return K;for(E=j.length-1;E!==-1;--E)U[j[E]]=0;for(E=st.length-1;E!==-1;--E)D=st[E],at[ot]=D,nt[ot]=K[D],K[D]=0,++ot;H[R+1]=ot}return[H,at,nt]},numeric.ccsbinop=function(I,v){return v===void 0&&(v=""),Function("X","Y",`var Xi = X[0], Xj = X[1], Xv = X[2];
var Yi = Y[0], Yj = Y[1], Yv = Y[2];
var n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;
var Zi = numeric.rep([n+1],0), Zj = [], Zv = [];
var x = numeric.rep([m],0),y = numeric.rep([m],0);
var xk,yk,zk;
var i,j,j0,j1,k,p=0;
`+v+`for(i=0;i<n;++i) {
  j0 = Xi[i]; j1 = Xi[i+1];
  for(j=j0;j!==j1;++j) {
    k = Xj[j];
    x[k] = 1;
    Zj[p] = k;
    ++p;
  }
  j0 = Yi[i]; j1 = Yi[i+1];
  for(j=j0;j!==j1;++j) {
    k = Yj[j];
    y[k] = Yv[j];
    if(x[k] === 0) {
      Zj[p] = k;
      ++p;
    }
  }
  Zi[i+1] = p;
  j0 = Xi[i]; j1 = Xi[i+1];
  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];
  j0 = Zi[i]; j1 = Zi[i+1];
  for(j=j0;j!==j1;++j) {
    k = Zj[j];
    xk = x[k];
    yk = y[k];
`+I+`
    Zv[j] = zk;
  }
  j0 = Xi[i]; j1 = Xi[i+1];
  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;
  j0 = Yi[i]; j1 = Yi[i+1];
  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;
}
return [Zi,Zj,Zv];`)},function(){var k,A,B,C;for(k in numeric.ops2)A=isFinite(eval("1"+numeric.ops2[k]+"0"))?"[Y[0],Y[1],numeric."+k+"(X,Y[2])]":"NaN",B=isFinite(eval("0"+numeric.ops2[k]+"1"))?"[X[0],X[1],numeric."+k+"(X[2],Y)]":"NaN",C=isFinite(eval("1"+numeric.ops2[k]+"0"))&&isFinite(eval("0"+numeric.ops2[k]+"1"))?"numeric.ccs"+k+"MM(X,Y)":"NaN",numeric["ccs"+k+"MM"]=numeric.ccsbinop("zk = xk "+numeric.ops2[k]+"yk;"),numeric["ccs"+k]=Function("X","Y",'if(typeof X === "number") return '+A+`;
if(typeof Y === "number") return `+B+`;
return `+C+`;
`)}(),numeric.ccsScatter=function(I){var v,x=I[0],w=I[1],S=I[2],N=numeric.sup(w)+1,R=x.length,E=numeric.rep([N],0),L=Array(R),V=Array(R),P=numeric.rep([N],0);for(v=0;v<R;++v)P[w[v]]++;for(v=0;v<N;++v)E[v+1]=E[v]+P[v];var D,O,G=E.slice(0);for(v=0;v<R;++v)L[D=G[O=w[v]]]=x[v],V[D]=S[v],G[O]=G[O]+1;return[E,L,V]},numeric.ccsGather=function(I){var v,x,w,S,N,R=I[0],E=I[1],L=I[2],V=R.length-1,P=E.length,D=Array(P),O=Array(P),G=Array(P);for(N=0,v=0;v<V;++v)for(w=R[v],S=R[v+1],x=w;x!==S;++x)O[N]=v,D[N]=E[x],G[N]=L[x],++N;return[D,O,G]},numeric.sdim=function I(v,x,w){if(x===void 0&&(x=[]),typeof v!="object")return x;var S;for(S in w===void 0&&(w=0),w in x||(x[w]=0),v.length>x[w]&&(x[w]=v.length),v)v.hasOwnProperty(S)&&I(v[S],x,w+1);return x},numeric.sclone=function I(v,x,w){x===void 0&&(x=0),w===void 0&&(w=numeric.sdim(v).length);var S,N=Array(v.length);if(x===w-1){for(S in v)v.hasOwnProperty(S)&&(N[S]=v[S]);return N}for(S in v)v.hasOwnProperty(S)&&(N[S]=I(v[S],x+1,w));return N},numeric.sdiag=function(I){var v,x,w=I.length,S=Array(w);for(v=w-1;v>=1;v-=2)x=v-1,S[v]=[],S[v][v]=I[v],S[x]=[],S[x][x]=I[x];return v===0&&(S[0]=[],S[0][0]=I[v]),S},numeric.sidentity=function(I){return numeric.sdiag(numeric.rep([I],1))},numeric.stranspose=function(I){var v,x,w,S=[];I.length;for(v in I)if(I.hasOwnProperty(v))for(x in w=I[v])w.hasOwnProperty(x)&&(typeof S[x]!="object"&&(S[x]=[]),S[x][v]=w[x]);return S},numeric.sLUP=function(I,v){throw new Error("The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.")},numeric.sdotMM=function(I,v){var x,w,S,N,R,E,L,V=I.length,P=(v.length,numeric.stranspose(v)),D=P.length,O=Array(V);for(S=V-1;S>=0;S--){for(L=[],x=I[S],R=D-1;R>=0;R--){for(N in E=0,w=P[R],x)x.hasOwnProperty(N)&&N in w&&(E+=x[N]*w[N]);E&&(L[R]=E)}O[S]=L}return O},numeric.sdotMV=function(I,v){var x,w,S,N,R=I.length,E=Array(R);for(w=R-1;w>=0;w--){for(S in N=0,x=I[w])x.hasOwnProperty(S)&&v[S]&&(N+=x[S]*v[S]);N&&(E[w]=N)}return E},numeric.sdotVM=function(I,v){var x,w,S,N,R=[];for(x in I)if(I.hasOwnProperty(x))for(w in S=v[x],N=I[x],S)S.hasOwnProperty(w)&&(R[w]||(R[w]=0),R[w]+=N*S[w]);return R},numeric.sdotVV=function(I,v){var x,w=0;for(x in I)I[x]&&v[x]&&(w+=I[x]*v[x]);return w},numeric.sdot=function(I,v){var x=numeric.sdim(I).length,w=numeric.sdim(v).length;switch(1e3*x+w){case 0:return I*v;case 1001:return numeric.sdotVV(I,v);case 2001:return numeric.sdotMV(I,v);case 1002:return numeric.sdotVM(I,v);case 2002:return numeric.sdotMM(I,v);default:throw new Error("numeric.sdot not implemented for tensors of order "+x+" and "+w)}},numeric.sscatter=function(I){var v,x,w,S,N=I[0].length,R=I.length,E=[];for(x=N-1;x>=0;--x)if(I[R-1][x]){for(S=E,w=0;w<R-2;w++)S[v=I[w][x]]||(S[v]=[]),S=S[v];S[I[w][x]]=I[w+1][x]}return E},numeric.sgather=function I(v,x,w){var S,N,R;for(N in x===void 0&&(x=[]),w===void 0&&(w=[]),S=w.length,v)if(v.hasOwnProperty(N))if(w[S]=parseInt(N),typeof(R=v[N])=="number"){if(R){if(x.length===0)for(N=S+1;N>=0;--N)x[N]=[];for(N=S;N>=0;--N)x[N].push(w[N]);x[S+1].push(R)}}else I(R,x,w);return w.length>S&&w.pop(),x},numeric.cLU=function(I){var v,x,w,S,N,R,E=I[0],L=I[1],V=I[2],P=E.length,D=0;for(v=0;v<P;v++)E[v]>D&&(D=E[v]);D++;var O,G=Array(D),W=Array(D),X=numeric.rep([D],1/0),U=numeric.rep([D],-1/0);for(w=0;w<P;w++)v=E[w],(x=L[w])<X[v]&&(X[v]=x),x>U[v]&&(U[v]=x);for(v=0;v<D-1;v++)U[v]>U[v+1]&&(U[v+1]=U[v]);for(v=D-1;v>=1;v--)X[v]<X[v-1]&&(X[v-1]=X[v]);for(v=0;v<D;v++)W[v]=numeric.rep([U[v]-X[v]+1],0),G[v]=numeric.rep([v-X[v]],0),v-X[v]+1,U[v]-v+1;for(w=0;w<P;w++)W[v=E[w]][L[w]-X[v]]=V[w];for(v=0;v<D-1;v++)for(S=v-X[v],st=W[v],x=v+1;X[x]<=v&&x<D;x++)if(N=v-X[x],R=U[v]-v,O=(H=W[x])[N]/st[S]){for(w=1;w<=R;w++)H[w+N]-=O*st[w+S];G[x][v-X[x]]=O}var j,K,st=[],H=[],at=[],nt=[],pt=[],ot=[];for(P=0,j=0,v=0;v<D;v++){for(S=X[v],N=U[v],K=W[v],x=v;x<=N;x++)K[x-S]&&(st[P]=v,H[P]=x,at[P]=K[x-S],P++);for(K=G[v],x=S;x<v;x++)K[x-S]&&(nt[j]=v,pt[j]=x,ot[j]=K[x-S],j++);nt[j]=v,pt[j]=v,ot[j]=1,j++}return{U:[st,H,at],L:[nt,pt,ot]}},numeric.cLUsolve=function(I,v){var x,w,S=I.L,N=I.U,R=numeric.clone(v),E=S[0],L=S[1],V=S[2],P=N[0],D=N[1],O=N[2],G=P.length,W=(E.length,R.length);for(w=0,x=0;x<W;x++){for(;L[w]<x;)R[x]-=V[w]*R[L[w]],w++;w++}for(w=G-1,x=W-1;x>=0;x--){for(;D[w]>x;)R[x]-=O[w]*R[D[w]],w--;R[x]/=O[w],w--}return R},numeric.cgrid=function(I,v){typeof I=="number"&&(I=[I,I]);var x,w,S,N=numeric.rep(I,-1);for(typeof v!="function"&&(v==="L"?v=function(R,E){return R>=I[0]/2||E<I[1]/2}:v=function(R,E){return!0}),S=0,x=1;x<I[0]-1;x++)for(w=1;w<I[1]-1;w++)v(x,w)&&(N[x][w]=S,S++);return N},numeric.cdelsq=function(I){var v,x,w,S,N,R=[[-1,0],[0,-1],[0,1],[1,0]],E=numeric.dim(I),L=E[0],V=E[1],P=[],D=[],O=[];for(v=1;v<L-1;v++)for(x=1;x<V-1;x++)if(!(I[v][x]<0)){for(w=0;w<4;w++)S=v+R[w][0],N=x+R[w][1],I[S][N]<0||(P.push(I[v][x]),D.push(I[S][N]),O.push(-1));P.push(I[v][x]),D.push(I[v][x]),O.push(4)}return[P,D,O]},numeric.cdotMV=function(I,v){var x,w,S,N=I[0],R=I[1],E=I[2],L=N.length;for(S=0,w=0;w<L;w++)N[w]>S&&(S=N[w]);for(S++,x=numeric.rep([S],0),w=0;w<L;w++)x[N[w]]+=E[w]*v[R[w]];return x},numeric.Spline=function(I,v,x,w,S){this.x=I,this.yl=v,this.yr=x,this.kl=w,this.kr=S},numeric.Spline.prototype._at=function(I,v){var x,w,S,N=this.x,R=this.yl,E=this.yr,L=this.kl,V=this.kr,P=numeric.add,D=numeric.sub,O=numeric.mul;x=D(O(L[v],N[v+1]-N[v]),D(E[v+1],R[v])),w=P(O(V[v+1],N[v]-N[v+1]),D(E[v+1],R[v]));var G=(S=(I-N[v])/(N[v+1]-N[v]))*(1-S);return P(P(P(O(1-S,R[v]),O(S,E[v+1])),O(x,G*(1-S))),O(w,G*S))},numeric.Spline.prototype.at=function(I){if(typeof I=="number"){var v,x,w,S=this.x,N=S.length,R=Math.floor;for(v=0,x=N-1;x-v>1;)S[w=R((v+x)/2)]<=I?v=w:x=w;return this._at(I,v)}N=I.length;var E,L=Array(N);for(E=N-1;E!==-1;--E)L[E]=this.at(I[E]);return L},numeric.Spline.prototype.diff=function(){var I,v,x,w=this.x,S=this.yl,N=this.yr,R=this.kl,E=this.kr,L=S.length,V=R,P=E,D=Array(L),O=Array(L),G=numeric.add,W=numeric.mul,X=numeric.div,U=numeric.sub;for(I=L-1;I!==-1;--I)v=w[I+1]-w[I],x=U(N[I+1],S[I]),D[I]=X(G(W(x,6),W(R[I],-4*v),W(E[I+1],-2*v)),v*v),O[I+1]=X(G(W(x,-6),W(R[I],2*v),W(E[I+1],4*v)),v*v);return new numeric.Spline(w,V,P,D,O)},numeric.Spline.prototype.roots=function(){function I(Jt){return Jt*Jt}var v=[],x=this.x,w=this.yl,S=this.yr,N=this.kl,R=this.kr;typeof w[0]=="number"&&(w=[w],S=[S],N=[N],R=[R]);var E,L,V,P,D,O,G,W,X,U,j,K,st,H,at,nt,pt,ot,q,bt,$t,zt,Xt,Zt=w.length,ie=x.length-1,Ut=(v=Array(Zt),Math.sqrt);for(E=0;E!==Zt;++E){for(P=w[E],D=S[E],O=N[E],G=R[E],W=[],L=0;L!==ie;L++){for(L>0&&D[L]*P[L]<0&&W.push(x[L]),nt=x[L+1]-x[L],x[L],j=P[L],K=D[L+1],X=O[L]/nt,st=(U=G[L+1]/nt)+3*j+2*X-3*K,H=3*(U+X+2*(j-K)),(at=I(X-U+3*(j-K))+12*U*j)<=0?pt=(ot=st/H)>x[L]&&ot<x[L+1]?[x[L],ot,x[L+1]]:[x[L],x[L+1]]:(ot=(st-Ut(at))/H,q=(st+Ut(at))/H,pt=[x[L]],ot>x[L]&&ot<x[L+1]&&pt.push(ot),q>x[L]&&q<x[L+1]&&pt.push(q),pt.push(x[L+1])),$t=pt[0],ot=this._at($t,L),V=0;V<pt.length-1;V++)if(zt=pt[V+1],q=this._at(zt,L),ot!==0)if(q===0||ot*q>0)$t=zt,ot=q;else{for(var z=0;!((Xt=(ot*zt-q*$t)/(ot-q))<=$t||Xt>=zt);)if((bt=this._at(Xt,L))*q>0)zt=Xt,q=bt,z===-1&&(ot*=.5),z=-1;else{if(!(bt*ot>0))break;$t=Xt,ot=bt,z===1&&(q*=.5),z=1}W.push(Xt),$t=pt[V+1],ot=this._at($t,L)}else W.push($t),$t=zt,ot=q;q===0&&W.push(zt)}v[E]=W}return typeof this.yl[0]=="number"?v[0]:v},numeric.spline=function(I,v,x,w){var S,N=I.length,R=[],E=[],L=[],V=numeric.sub,P=numeric.mul,D=numeric.add;for(S=N-2;S>=0;S--)E[S]=I[S+1]-I[S],L[S]=V(v[S+1],v[S]);typeof x!="string"&&typeof w!="string"||(x=w="periodic");var O=[[],[],[]];switch(typeof x){case"undefined":R[0]=P(3/(E[0]*E[0]),L[0]),O[0].push(0,0),O[1].push(0,1),O[2].push(2/E[0],1/E[0]);break;case"string":R[0]=D(P(3/(E[N-2]*E[N-2]),L[N-2]),P(3/(E[0]*E[0]),L[0])),O[0].push(0,0,0),O[1].push(N-2,0,1),O[2].push(1/E[N-2],2/E[N-2]+2/E[0],1/E[0]);break;default:R[0]=x,O[0].push(0),O[1].push(0),O[2].push(1)}for(S=1;S<N-1;S++)R[S]=D(P(3/(E[S-1]*E[S-1]),L[S-1]),P(3/(E[S]*E[S]),L[S])),O[0].push(S,S,S),O[1].push(S-1,S,S+1),O[2].push(1/E[S-1],2/E[S-1]+2/E[S],1/E[S]);switch(typeof w){case"undefined":R[N-1]=P(3/(E[N-2]*E[N-2]),L[N-2]),O[0].push(N-1,N-1),O[1].push(N-2,N-1),O[2].push(1/E[N-2],2/E[N-2]);break;case"string":O[1][O[1].length-1]=0;break;default:R[N-1]=w,O[0].push(N-1),O[1].push(N-1),O[2].push(1)}R=typeof R[0]!="number"?numeric.transpose(R):[R];var G=Array(R.length);if(typeof x=="string")for(S=G.length-1;S!==-1;--S)G[S]=numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(O)),R[S]),G[S][N-1]=G[S][0];else for(S=G.length-1;S!==-1;--S)G[S]=numeric.cLUsolve(numeric.cLU(O),R[S]);return G=typeof v[0]=="number"?G[0]:numeric.transpose(G),new numeric.Spline(I,v,v,G,G)},numeric.fftpow2=function I(v,x){var w=v.length;if(w!==1){var S,N,R=Math.cos,E=Math.sin,L=Array(w/2),V=Array(w/2),P=Array(w/2),D=Array(w/2);for(N=w/2,S=w-1;S!==-1;--S)P[--N]=v[S],D[N]=x[S],--S,L[N]=v[S],V[N]=x[S];I(L,V),I(P,D),N=w/2;var O,G,W,X=-6.283185307179586/w;for(S=w-1;S!==-1;--S)--N===-1&&(N=w/2-1),G=R(O=X*S),W=E(O),v[S]=L[N]+G*P[N]-W*D[N],x[S]=V[N]+G*D[N]+W*P[N]}},numeric._ifftpow2=function I(v,x){var w=v.length;if(w!==1){var S,N,R=Math.cos,E=Math.sin,L=Array(w/2),V=Array(w/2),P=Array(w/2),D=Array(w/2);for(N=w/2,S=w-1;S!==-1;--S)P[--N]=v[S],D[N]=x[S],--S,L[N]=v[S],V[N]=x[S];I(L,V),I(P,D),N=w/2;var O,G,W,X=6.283185307179586/w;for(S=w-1;S!==-1;--S)--N===-1&&(N=w/2-1),G=R(O=X*S),W=E(O),v[S]=L[N]+G*P[N]-W*D[N],x[S]=V[N]+G*D[N]+W*P[N]}},numeric.ifftpow2=function(I,v){numeric._ifftpow2(I,v),numeric.diveq(I,I.length),numeric.diveq(v,v.length)},numeric.convpow2=function(I,v,x,w){var S,N,R,E,L;for(numeric.fftpow2(I,v),numeric.fftpow2(x,w),S=I.length-1;S!==-1;--S)N=I[S],E=v[S],R=x[S],L=w[S],I[S]=N*R-E*L,v[S]=N*L+E*R;numeric.ifftpow2(I,v)},numeric.T.prototype.fft=function(){var I,v,x=this.x,w=this.y,S=x.length,N=Math.log,R=N(2),E=Math.ceil(N(2*S-1)/R),L=Math.pow(2,E),V=numeric.rep([L],0),P=numeric.rep([L],0),D=Math.cos,O=Math.sin,G=-3.141592653589793/S,W=numeric.rep([L],0),X=numeric.rep([L],0);for(Math.floor(S/2),I=0;I<S;I++)W[I]=x[I];if(w!==void 0)for(I=0;I<S;I++)X[I]=w[I];for(V[0]=1,I=1;I<=L/2;I++)v=G*I*I,V[I]=D(v),P[I]=O(v),V[L-I]=D(v),P[L-I]=O(v);var U=new numeric.T(W,X),j=new numeric.T(V,P);return U=U.mul(j),numeric.convpow2(U.x,U.y,numeric.clone(j.x),numeric.neg(j.y)),(U=U.mul(j)).x.length=S,U.y.length=S,U},numeric.T.prototype.ifft=function(){var I,v,x=this.x,w=this.y,S=x.length,N=Math.log,R=N(2),E=Math.ceil(N(2*S-1)/R),L=Math.pow(2,E),V=numeric.rep([L],0),P=numeric.rep([L],0),D=Math.cos,O=Math.sin,G=3.141592653589793/S,W=numeric.rep([L],0),X=numeric.rep([L],0);for(Math.floor(S/2),I=0;I<S;I++)W[I]=x[I];if(w!==void 0)for(I=0;I<S;I++)X[I]=w[I];for(V[0]=1,I=1;I<=L/2;I++)v=G*I*I,V[I]=D(v),P[I]=O(v),V[L-I]=D(v),P[L-I]=O(v);var U=new numeric.T(W,X),j=new numeric.T(V,P);return U=U.mul(j),numeric.convpow2(U.x,U.y,numeric.clone(j.x),numeric.neg(j.y)),(U=U.mul(j)).x.length=S,U.y.length=S,U.div(S)},numeric.gradient=function(I,v){var x=v.length,w=I(v);if(isNaN(w))throw new Error("gradient: f(x) is a NaN!");var S,N,R,E,L,V,P,D,O,G=Math.max,W=numeric.clone(v),X=Array(x),U=(numeric.div,numeric.sub,G=Math.max,Math.abs),j=Math.min,K=0;for(S=0;S<x;S++)for(var st=G(1e-6*w,1e-8);;){if(++K>20)throw new Error("Numerical gradient fails");if(W[S]=v[S]+st,N=I(W),W[S]=v[S]-st,R=I(W),W[S]=v[S],isNaN(N)||isNaN(R))st/=16;else{if(X[S]=(N-R)/(2*st),E=v[S]-st,L=v[S],V=v[S]+st,P=(N-w)/st,D=(w-R)/st,O=G(U(X[S]),U(w),U(N),U(R),U(E),U(L),U(V),1e-8),!(j(G(U(P-X[S]),U(D-X[S]),U(P-D))/O,st/O)>.001))break;st/=16}}return X},numeric.uncmin=function(I,v,x,w,S,N,R){var E=numeric.gradient;R===void 0&&(R={}),x===void 0&&(x=1e-8),w===void 0&&(w=function(le){return E(I,le)}),S===void 0&&(S=1e3);var L,V,P=(v=numeric.clone(v)).length,D=I(v);if(isNaN(D))throw new Error("uncmin: f(x0) is a NaN!");var O=Math.max,G=numeric.norm2;x=O(x,numeric.epsilon);var W,X,U,j,K,st,H,at,nt,pt,ot=R.Hinv||numeric.identity(P),q=numeric.dot,bt=(numeric.inv,numeric.sub),$t=numeric.add,zt=numeric.tensor,Xt=numeric.div,Zt=numeric.mul,ie=numeric.all,Ut=numeric.isFinite,z=numeric.neg,Jt=0,Ht="";for(X=w(v);Jt<S;){if(typeof N=="function"&&N(Jt,v,D,X,ot)){Ht="Callback returned true";break}if(!ie(Ut(X))){Ht="Gradient has Infinity or NaN";break}if(!ie(Ut(W=z(q(ot,X))))){Ht="Search direction has Infinity or NaN";break}if((pt=G(W))<x){Ht="Newton step smaller than tol";break}for(nt=1,V=q(X,W),K=v;Jt<S&&!(nt*pt<x)&&(K=$t(v,j=Zt(W,nt)),(L=I(K))-D>=.1*nt*V||isNaN(L));)nt*=.5,++Jt;if(nt*pt<x){Ht="Line search step size smaller than tol";break}if(Jt===S){Ht="maxit reached during line search";break}at=q(st=bt(U=w(K),X),j),H=q(ot,st),ot=bt($t(ot,Zt((at+q(st,H))/(at*at),zt(j,j))),Xt($t(zt(H,j),zt(j,H)),at)),v=K,D=L,X=U,++Jt}return{solution:v,f:D,gradient:X,invHessian:ot,iterations:Jt,message:Ht}},numeric.Dopri=function(I,v,x,w,S,N,R){this.x=I,this.y=v,this.f=x,this.ymid=w,this.iterations=S,this.events=R,this.message=N},numeric.Dopri.prototype._at=function(I,v){function x(H){return H*H}var w,S,N,R,E,L,V,P,D,O=this,G=O.x,W=O.y,X=O.f,U=O.ymid,j=(G.length,numeric.add),K=numeric.mul,st=numeric.sub;return w=G[v],S=G[v+1],R=W[v],E=W[v+1],N=w+.5*(S-w),L=U[v],V=st(X[v],K(R,1/(w-N)+2/(w-S))),P=st(X[v+1],K(E,1/(S-N)+2/(S-w))),j(j(j(j(K(R,(D=[x(I-S)*(I-N)/x(w-S)/(w-N),x(I-w)*x(I-S)/x(w-N)/x(S-N),x(I-w)*(I-N)/x(S-w)/(S-N),(I-w)*x(I-S)*(I-N)/x(w-S)/(w-N),(I-S)*x(I-w)*(I-N)/x(w-S)/(S-N)])[0]),K(L,D[1])),K(E,D[2])),K(V,D[3])),K(P,D[4]))},numeric.Dopri.prototype.at=function(I){var v,x,w,S=Math.floor;if(typeof I!="number"){var N=I.length,R=Array(N);for(v=N-1;v!==-1;--v)R[v]=this.at(I[v]);return R}var E=this.x;for(v=0,x=E.length-1;x-v>1;)E[w=S(.5*(v+x))]<=I?v=w:x=w;return this._at(I,v)},numeric.dopri=function(I,v,x,w,S,N,R){S===void 0&&(S=1e-6),N===void 0&&(N=1e3);var E,L,V,P,D,O,G,W,X,U,j,K,st,H=[I],at=[x],nt=[w(I,x)],pt=[],ot=[3/40,9/40],q=[44/45,-56/15,32/9],bt=[19372/6561,-25360/2187,64448/6561,-212/729],$t=[9017/3168,-355/33,46732/5247,49/176,-5103/18656],zt=[35/384,0,500/1113,125/192,-2187/6784,11/84],Xt=[.10013431883002395,0,.3918321794184259,-.02982460176594817,.05893268337240795,-.04497888809104361,56185495e-1/235043384],Zt=[.2,.3,.8,8/9,1,1],ie=[-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40],Ut=0,z=(v-I)/10,Jt=0,Ht=numeric.add,le=numeric.mul,St=Math.min,se=Math.abs,Ge=numeric.norminf,Cr=Math.pow,Wn=numeric.any,fr=numeric.lt,er=numeric.and,ge=(numeric.sub,new numeric.Dopri(H,at,nt,pt,-1,""));for(typeof R=="function"&&(j=R(I,x));I<v&&Jt<N;)if(++Jt,I+z>v&&(z=v-I),E=w(I+Zt[0]*z,Ht(x,le(.2*z,nt[Ut]))),L=w(I+Zt[1]*z,Ht(Ht(x,le(ot[0]*z,nt[Ut])),le(ot[1]*z,E))),V=w(I+Zt[2]*z,Ht(Ht(Ht(x,le(q[0]*z,nt[Ut])),le(q[1]*z,E)),le(q[2]*z,L))),P=w(I+Zt[3]*z,Ht(Ht(Ht(Ht(x,le(bt[0]*z,nt[Ut])),le(bt[1]*z,E)),le(bt[2]*z,L)),le(bt[3]*z,V))),D=w(I+Zt[4]*z,Ht(Ht(Ht(Ht(Ht(x,le($t[0]*z,nt[Ut])),le($t[1]*z,E)),le($t[2]*z,L)),le($t[3]*z,V)),le($t[4]*z,P))),O=w(I+z,X=Ht(Ht(Ht(Ht(Ht(x,le(nt[Ut],z*zt[0])),le(L,z*zt[2])),le(V,z*zt[3])),le(P,z*zt[4])),le(D,z*zt[5]))),(U=typeof(G=Ht(Ht(Ht(Ht(Ht(le(nt[Ut],z*ie[0]),le(L,z*ie[2])),le(V,z*ie[3])),le(P,z*ie[4])),le(D,z*ie[5])),le(O,z*ie[6])))=="number"?se(G):Ge(G))>S){if(I+(z=.2*z*Cr(S/U,.25))===I){ge.msg="Step size became too small";break}}else{if(pt[Ut]=Ht(Ht(Ht(Ht(Ht(Ht(x,le(nt[Ut],z*Xt[0])),le(L,z*Xt[2])),le(V,z*Xt[3])),le(P,z*Xt[4])),le(D,z*Xt[5])),le(O,z*Xt[6])),H[++Ut]=I+z,at[Ut]=X,nt[Ut]=O,typeof R=="function"){var Zn,Ae,Xe=I,mr=I+.5*z;if(K=R(mr,pt[Ut-1]),Wn(st=er(fr(j,0),fr(0,K)))||(Xe=mr,j=K,K=R(mr=I+z,X),st=er(fr(j,0),fr(0,K))),Wn(st)){for(var Vn,Yr,gr=0,Se=1,Un=1;;){if(typeof j=="number")Ae=(Un*K*Xe-Se*j*mr)/(Un*K-Se*j);else for(Ae=mr,W=j.length-1;W!==-1;--W)j[W]<0&&K[W]>0&&(Ae=St(Ae,(Un*K[W]*Xe-Se*j[W]*mr)/(Un*K[W]-Se*j[W])));if(Ae<=Xe||Ae>=mr)break;Yr=R(Ae,Zn=ge._at(Ae,Ut-1)),Wn(Vn=er(fr(j,0),fr(0,Yr)))?(mr=Ae,K=Yr,st=Vn,Un=1,gr===-1?Se*=.5:Se=1,gr=-1):(Xe=Ae,j=Yr,Se=1,gr===1?Un*=.5:Un=1,gr=1)}return X=ge._at(.5*(I+Ae),Ut-1),ge.f[Ut]=w(Ae,Zn),ge.x[Ut]=Ae,ge.y[Ut]=Zn,ge.ymid[Ut-1]=X,ge.events=st,ge.iterations=Jt,ge}}I+=z,x=X,j=K,z=St(.8*z*Cr(S/U,.25),4*z)}return ge.iterations=Jt,ge},numeric.LU=function(I,v){v=v||!1;var x,w,S,N,R,E,L,V,P,D=Math.abs,O=I.length,G=O-1,W=new Array(O);for(v||(I=numeric.clone(I)),S=0;S<O;++S){for(L=S,P=D((E=I[S])[S]),w=S+1;w<O;++w)P<(N=D(I[w][S]))&&(P=N,L=w);for(W[S]=L,L!=S&&(I[S]=I[L],I[L]=E,E=I[S]),R=E[S],x=S+1;x<O;++x)I[x][S]/=R;for(x=S+1;x<O;++x){for(V=I[x],w=S+1;w<G;++w)V[w]-=V[S]*E[w],V[++w]-=V[S]*E[w];w===G&&(V[w]-=V[S]*E[w])}}return{LU:I,P:W}},numeric.LUsolve=function(I,v){var x,w,S,N,R,E=I.LU,L=E.length,V=numeric.clone(v),P=I.P;for(x=L-1;x!==-1;--x)V[x]=v[x];for(x=0;x<L;++x)for(S=P[x],P[x]!==x&&(R=V[x],V[x]=V[S],V[S]=R),N=E[x],w=0;w<x;++w)V[x]-=V[w]*N[w];for(x=L-1;x>=0;--x){for(N=E[x],w=x+1;w<L;++w)V[x]-=V[w]*N[w];V[x]/=N[x]}return V},numeric.solve=function(I,v,x){return numeric.LUsolve(numeric.LU(I,x),v)},numeric.echelonize=function(I){var v,x,w,S,N,R,E,L,V=numeric.dim(I),P=V[0],D=V[1],O=numeric.identity(P),G=Array(P),W=Math.abs,X=numeric.diveq;for(I=numeric.clone(I),v=0;v<P;++v){for(w=0,N=I[v],R=O[v],x=1;x<D;++x)W(N[w])<W(N[x])&&(w=x);for(G[v]=w,X(R,N[w]),X(N,N[w]),x=0;x<P;++x)if(x!==v){for(L=(E=I[x])[w],S=D-1;S!==-1;--S)E[S]-=N[S]*L;for(E=O[x],S=P-1;S!==-1;--S)E[S]-=R[S]*L}}return{I:O,A:I,P:G}},numeric.__solveLP=function(I,v,x,w,S,N,R){var E,L,V,P,D=numeric.sum,O=(numeric.log,numeric.mul),G=numeric.sub,W=numeric.dot,X=numeric.div,U=numeric.add,j=I.length,K=x.length,st=!1,H=1,at=(numeric.transpose(v),numeric.svd,numeric.transpose),nt=(numeric.leq,Math.sqrt),pt=Math.abs,ot=(numeric.muleq,numeric.norminf,numeric.any,Math.min),q=numeric.all,bt=numeric.gt,$t=Array(j),zt=Array(K),Xt=(numeric.rep([K],1),numeric.solve),Zt=G(x,W(v,N)),ie=W(I,I);for(V=0;V<S;++V){var Ut,z;for(Ut=K-1;Ut!==-1;--Ut)zt[Ut]=X(v[Ut],Zt[Ut]);var Jt=at(zt);for(Ut=j-1;Ut!==-1;--Ut)$t[Ut]=D(Jt[Ut]);H=.25*pt(ie/W(I,$t));var Ht=100*nt(ie/W($t,$t));for((!isFinite(H)||H>Ht)&&(H=Ht),P=U(I,O(H,$t)),L=W(Jt,zt),Ut=j-1;Ut!==-1;--Ut)L[Ut][Ut]+=1;z=Xt(L,X(P,H),!0);var le=X(Zt,W(v,z)),St=1;for(Ut=K-1;Ut!==-1;--Ut)le[Ut]<0&&(St=ot(St,-.999*le[Ut]));if(E=G(N,O(z,St)),!q(bt(Zt=G(x,W(v,E)),0)))return{solution:N,message:"",iterations:V};if(N=E,H<w)return{solution:E,message:"",iterations:V};if(R){var se=W(I,P),Ge=W(v,P);for(st=!0,Ut=K-1;Ut!==-1;--Ut)if(se*Ge[Ut]<0){st=!1;break}}else st=!(N[j-1]>=0);if(st)return{solution:E,message:"Unbounded",iterations:V}}return{solution:N,message:"maximum iteration count exceeded",iterations:V}},numeric._solveLP=function(I,v,x,w,S){var N=I.length,R=x.length,E=(numeric.sum,numeric.log,numeric.mul,numeric.sub),L=numeric.dot,V=(numeric.div,numeric.add,numeric.rep([N],0).concat([1])),P=numeric.rep([R,1],-1),D=numeric.blockMatrix([[v,P]]),O=x,G=numeric.rep([N],0).concat(Math.max(0,numeric.sup(numeric.neg(x)))+1),W=numeric.__solveLP(V,D,O,w,S,G,!1),X=numeric.clone(W.solution);if(X.length=N,numeric.inf(E(x,L(v,X)))<0)return{solution:NaN,message:"Infeasible",iterations:W.iterations};var U=numeric.__solveLP(I,v,x,w,S-W.iterations,X,!0);return U.iterations+=W.iterations,U},numeric.solveLP=function(I,v,x,w,S,N,R){if(R===void 0&&(R=1e3),N===void 0&&(N=numeric.epsilon),w===void 0)return numeric._solveLP(I,v,x,N,R);var E,L=w.length,V=w[0].length,P=v.length,D=numeric.echelonize(w),O=numeric.rep([V],0),G=D.P,W=[];for(E=G.length-1;E!==-1;--E)O[G[E]]=1;for(E=V-1;E!==-1;--E)O[E]===0&&W.push(E);var X=numeric.getRange,U=numeric.linspace(0,L-1),j=numeric.linspace(0,P-1),K=X(w,U,W),st=X(v,j,G),H=X(v,j,W),at=numeric.dot,nt=numeric.sub,pt=at(st,D.I),ot=nt(H,at(pt,K)),q=nt(x,at(pt,S)),bt=Array(G.length),$t=Array(W.length);for(E=G.length-1;E!==-1;--E)bt[E]=I[G[E]];for(E=W.length-1;E!==-1;--E)$t[E]=I[W[E]];var zt=nt($t,at(bt,at(D.I,K))),Xt=numeric._solveLP(zt,ot,q,N,R),Zt=Xt.solution;if(Zt!=Zt)return Xt;var ie=at(D.I,nt(S,at(K,Zt))),Ut=Array(I.length);for(E=G.length-1;E!==-1;--E)Ut[G[E]]=ie[E];for(E=W.length-1;E!==-1;--E)Ut[W[E]]=Zt[E];return{solution:Ut,message:Xt.message,iterations:Xt.iterations}},numeric.MPStoLP=function(I){I instanceof String&&I.split(`
`);var v,x,w,S,N=0,R=["Initial state","NAME","ROWS","COLUMNS","RHS","BOUNDS","ENDATA"],E=I.length,L=0,V={},P=[],D=0,O={},G=0,W=[],X=[],U=[];function j(nt){throw new Error("MPStoLP: "+nt+`
Line `+v+": "+I[v]+`
Current state: `+R[N]+`
`)}for(v=0;v<E;++v){var K=(w=I[v]).match(/\S*/g),st=[];for(x=0;x<K.length;++x)K[x]!==""&&st.push(K[x]);if(st.length!==0){for(x=0;x<R.length&&w.substr(0,R[x].length)!==R[x];++x);if(x<R.length){if(N=x,x===1&&(S=st[1]),x===6)return{name:S,c:W,A:numeric.transpose(X),b:U,rows:V,vars:O}}else switch(N){case 0:case 1:j("Unexpected line");case 2:switch(st[0]){case"N":L===0?L=st[1]:j("Two or more N rows");break;case"L":V[st[1]]=D,P[D]=1,U[D]=0,++D;break;case"G":V[st[1]]=D,P[D]=-1,U[D]=0,++D;break;case"E":V[st[1]]=D,P[D]=0,U[D]=0,++D;break;default:j("Parse error "+numeric.prettyPrint(st))}break;case 3:O.hasOwnProperty(st[0])||(O[st[0]]=G,W[G]=0,X[G]=numeric.rep([D],0),++G);var H=O[st[0]];for(x=1;x<st.length;x+=2)if(st[x]!==L){var at=V[st[x]];X[H][at]=(P[at]<0?-1:1)*parseFloat(st[x+1])}else W[H]=parseFloat(st[x+1]);break;case 4:for(x=1;x<st.length;x+=2)U[V[st[x]]]=(P[V[st[x]]]<0?-1:1)*parseFloat(st[x+1]);break;case 5:break;case 6:j("Internal error")}}}j("Reached end of file without ENDATA")},numeric.seedrandom={pow:Math.pow,random:Math.random},function(I,v,x,w,S,N,R){function E(D){var O,G,W=this,X=D.length,U=0,j=W.i=W.j=W.m=0;for(W.S=[],W.c=[],X||(D=[X++]);U<x;)W.S[U]=U++;for(U=0;U<x;U++)j=P(j+(O=W.S[U])+D[U%X]),G=W.S[j],W.S[U]=G,W.S[j]=O;W.g=function(K){var st=W.S,H=P(W.i+1),at=st[H],nt=P(W.j+at),pt=st[nt];st[H]=pt,st[nt]=at;for(var ot=st[P(at+pt)];--K;)H=P(H+1),pt=st[nt=P(nt+(at=st[H]))],st[H]=pt,st[nt]=at,ot=ot*x+st[P(at+pt)];return W.i=H,W.j=nt,ot},W.g(x)}function L(D,O,G,W,X){if(G=[],X=typeof D,O&&X=="object"){for(W in D)if(W.indexOf("S")<5)try{G.push(L(D[W],O-1))}catch{}}return G.length?G:D+(X!="string"?"\0":"")}function V(D,O,G,W){for(D+="",G=0,W=0;W<D.length;W++)O[P(W)]=P((G^=19*O[P(W)])+D.charCodeAt(W));for(W in D="",O)D+=String.fromCharCode(O[W]);return D}function P(D){return 255&D}v.seedrandom=function(D,O){var G,W=[];return D=V(L(O?[D,I]:arguments.length?D:[new Date().getTime(),I,window],3),W),V((G=new E(W)).S,I),v.random=function(){for(var X=G.g(6),U=R,j=0;X<S;)X=(X+j)*x,U*=x,j=G.g(1);for(;X>=N;)X/=2,U/=2,j>>>=1;return(X+j)/U},D},R=v.pow(x,6),S=v.pow(2,S),N=2*S,V(v.random(),I)}([],numeric.seedrandom,256,0,52),function(I){function v(S){if(typeof S!="object")return S;var N,R=[],E=S.length;for(N=0;N<E;N++)R[N+1]=v(S[N]);return R}function x(S){if(typeof S!="object")return S;var N,R=[],E=S.length;for(N=1;N<E;N++)R[N-1]=x(S[N]);return R}function w(S,N,R,E,L,V,P,D,O,G,W,X,U,j,K,st){var H,at,nt,pt,ot,q,bt,$t,zt,Xt,Zt,ie,Ut,z,Jt,Ht,le,St,se,Ge,Cr,Wn,fr,er,ge,Zn,Ae;Ut=Math.min(E,G),nt=2*E+Ut*(Ut+5)/2+2*G+1,er=1e-60;do ge=1+.1*(er+=er),Zn=1+.2*er;while(ge<=1||Zn<=1);for(H=1;H<=E;H+=1)K[H]=N[H];for(H=E+1;H<=nt;H+=1)K[H]=0;for(H=1;H<=G;H+=1)X[H]=0;if(ot=[],st[1]===0){if(function(Se,Un,nr,He){var Yt,ye,tn,en,nn,$r;for(ye=1;ye<=nr;ye+=1){if(He[1]=ye,$r=0,(tn=ye-1)<1){if(($r=Se[ye][ye]-$r)<=0)break;Se[ye][ye]=Math.sqrt($r)}else{for(en=1;en<=tn;en+=1){for(nn=Se[en][ye],Yt=1;Yt<en;Yt+=1)nn-=Se[Yt][ye]*Se[Yt][en];nn/=Se[en][en],Se[en][ye]=nn,$r+=nn*nn}if(($r=Se[ye][ye]-$r)<=0)break;Se[ye][ye]=Math.sqrt($r)}He[1]=0}}(S,0,E,ot),ot[1]!==0)return void(st[1]=2);(function(Se,Un,nr,He){var Yt,ye,tn,en;for(ye=1;ye<=nr;ye+=1){for(en=0,Yt=1;Yt<ye;Yt+=1)en+=Se[Yt][ye]*He[Yt];He[ye]=(He[ye]-en)/Se[ye][ye]}for(tn=1;tn<=nr;tn+=1)for(He[ye=nr+1-tn]=He[ye]/Se[ye][ye],en=-He[ye],Yt=1;Yt<ye;Yt+=1)He[Yt]=He[Yt]+en*Se[Yt][ye]})(S,0,E,N),function(Se,Un,nr){var He,Yt,ye,tn,en;for(ye=1;ye<=nr;ye+=1){for(Se[ye][ye]=1/Se[ye][ye],en=-Se[ye][ye],He=1;He<ye;He+=1)Se[He][ye]=en*Se[He][ye];if(nr<(tn=ye+1))break;for(Yt=tn;Yt<=nr;Yt+=1)for(en=Se[ye][Yt],Se[ye][Yt]=0,He=1;He<=ye;He+=1)Se[He][Yt]=Se[He][Yt]+en*Se[He][ye]}}(S,0,E)}else{for(at=1;at<=E;at+=1)for(L[at]=0,H=1;H<=at;H+=1)L[at]=L[at]+S[H][at]*N[H];for(at=1;at<=E;at+=1)for(N[at]=0,H=at;H<=E;H+=1)N[at]=N[at]+S[at][H]*L[H]}for(V[1]=0,at=1;at<=E;at+=1)for(L[at]=N[at],V[1]=V[1]+K[at]*L[at],K[at]=0,H=at+1;H<=E;H+=1)S[H][at]=0;for(V[1]=-V[1]/2,st[1]=0,z=(Xt=(zt=(Zt=($t=(bt=E)+E)+Ut)+Ut+1)+Ut*(Ut+1)/2)+G,H=1;H<=G;H+=1){for(Ht=0,at=1;at<=E;at+=1)Ht+=P[at][H]*P[at][H];K[z+H]=Math.sqrt(Ht)}function Xe(){for(j[1]=j[1]+1,nt=Xt,H=1;H<=G;H+=1){for(nt+=1,Ht=-D[H],at=1;at<=E;at+=1)Ht+=P[at][H]*L[at];if(Math.abs(Ht)<er&&(Ht=0),H>W)K[nt]=Ht;else if(K[nt]=-Math.abs(Ht),Ht>0){for(at=1;at<=E;at+=1)P[at][H]=-P[at][H];D[H]=-D[H]}}for(H=1;H<=U;H+=1)K[Xt+X[H]]=0;for(ie=0,Jt=0,H=1;H<=G;H+=1)K[Xt+H]<Jt*K[z+H]&&(ie=H,Jt=K[Xt+H]/K[z+H]);return ie===0?999:0}function mr(){for(H=1;H<=E;H+=1){for(Ht=0,at=1;at<=E;at+=1)Ht+=S[at][H]*P[at][ie];K[H]=Ht}for(pt=bt,H=1;H<=E;H+=1)K[pt+H]=0;for(at=U+1;at<=E;at+=1)for(H=1;H<=E;H+=1)K[pt+H]=K[pt+H]+S[H][at]*K[at];for(Wn=!0,H=U;H>=1;H-=1){for(Ht=K[H],pt=(nt=zt+H*(H+3)/2)-H,at=H+1;at<=U;at+=1)Ht-=K[nt]*K[$t+at],nt+=at;if(Ht/=K[pt],K[$t+H]=Ht,X[H]<W||Ht<0)break;Wn=!1,q=H}if(!Wn)for(le=K[Zt+q]/K[$t+q],H=1;H<=U&&!(X[H]<W)&&!(K[$t+H]<0);H+=1)(Jt=K[Zt+H]/K[$t+H])<le&&(le=Jt,q=H);for(Ht=0,H=bt+1;H<=bt+E;H+=1)Ht+=K[H]*K[H];if(Math.abs(Ht)<=er){if(Wn)return st[1]=1,999;for(H=1;H<=U;H+=1)K[Zt+H]=K[Zt+H]-le*K[$t+H];return K[Zt+U+1]=K[Zt+U+1]+le,700}for(Ht=0,H=1;H<=E;H+=1)Ht+=K[bt+H]*P[H][ie];for(St=-K[Xt+ie]/Ht,fr=!0,Wn||le<St&&(St=le,fr=!1),H=1;H<=E;H+=1)L[H]=L[H]+St*K[bt+H],Math.abs(L[H])<er&&(L[H]=0);for(V[1]=V[1]+St*Ht*(St/2+K[Zt+U+1]),H=1;H<=U;H+=1)K[Zt+H]=K[Zt+H]-St*K[$t+H];if(K[Zt+U+1]=K[Zt+U+1]+St,!fr){for(Ht=-D[ie],at=1;at<=E;at+=1)Ht+=L[at]*P[at][ie];if(ie>W)K[Xt+ie]=Ht;else if(K[Xt+ie]=-Math.abs(Ht),Ht>0){for(at=1;at<=E;at+=1)P[at][ie]=-P[at][ie];D[ie]=-D[ie]}return 700}for(X[U+=1]=ie,nt=zt+(U-1)*U/2+1,H=1;H<=U-1;H+=1)K[nt]=K[H],nt+=1;if(U===E)K[nt]=K[E];else{for(H=E;H>=U+1&&K[H]!==0&&(se=Math.max(Math.abs(K[H-1]),Math.abs(K[H])),Ge=Math.min(Math.abs(K[H-1]),Math.abs(K[H])),Jt=K[H-1]>=0?Math.abs(se*Math.sqrt(1+Ge*Ge/(se*se))):-Math.abs(se*Math.sqrt(1+Ge*Ge/(se*se))),se=K[H-1]/Jt,Ge=K[H]/Jt,se!==1);H-=1)if(se===0)for(K[H-1]=Ge*Jt,at=1;at<=E;at+=1)Jt=S[at][H-1],S[at][H-1]=S[at][H],S[at][H]=Jt;else for(K[H-1]=Jt,Cr=Ge/(1+se),at=1;at<=E;at+=1)Jt=se*S[at][H-1]+Ge*S[at][H],S[at][H]=Cr*(S[at][H-1]+Jt)-S[at][H],S[at][H-1]=Jt;K[nt]=K[U]}return 0}function Vn(){if(K[pt=(nt=zt+q*(q+1)/2+1)+q]===0||(se=Math.max(Math.abs(K[pt-1]),Math.abs(K[pt])),Ge=Math.min(Math.abs(K[pt-1]),Math.abs(K[pt])),Jt=K[pt-1]>=0?Math.abs(se*Math.sqrt(1+Ge*Ge/(se*se))):-Math.abs(se*Math.sqrt(1+Ge*Ge/(se*se))),se=K[pt-1]/Jt,Ge=K[pt]/Jt,se===1))return 798;if(se===0){for(H=q+1;H<=U;H+=1)Jt=K[pt-1],K[pt-1]=K[pt],K[pt]=Jt,pt+=H;for(H=1;H<=E;H+=1)Jt=S[H][q],S[H][q]=S[H][q+1],S[H][q+1]=Jt}else{for(Cr=Ge/(1+se),H=q+1;H<=U;H+=1)Jt=se*K[pt-1]+Ge*K[pt],K[pt]=Cr*(K[pt-1]+Jt)-K[pt],K[pt-1]=Jt,pt+=H;for(H=1;H<=E;H+=1)Jt=se*S[H][q]+Ge*S[H][q+1],S[H][q+1]=Cr*(S[H][q]+Jt)-S[H][q+1],S[H][q]=Jt}return 0}function Yr(){for(pt=nt-q,H=1;H<=q;H+=1)K[pt]=K[nt],nt+=1,pt+=1;return K[Zt+q]=K[Zt+q+1],X[q]=X[q+1],(q+=1)<U?797:0}function gr(){return K[Zt+U]=K[Zt+U+1],K[Zt+U+1]=0,X[U]=0,U-=1,j[2]=j[2]+1,0}for(U=0,j[1]=0,j[2]=0,Ae=0;;){if((Ae=Xe())===999)return;for(;(Ae=mr())!==0;){if(Ae===999)return;if(Ae===700)if(q===U)gr();else{for(;Vn(),(Ae=Yr())===797;);gr()}}}}I.solveQP=function(S,N,R,E,L,V){S=v(S),N=v(N),R=v(R);var P,D,O,G,W,X=[],U=[],j=[],K=[],st=[];if(L=L||0,V=V?v(V):[void 0,0],E=E?v(E):[],D=S.length-1,O=R[1].length-1,!E)for(P=1;P<=O;P+=1)E[P]=0;for(P=1;P<=O;P+=1)U[P]=0;for(G=Math.min(D,O),P=1;P<=D;P+=1)j[P]=0;for(X[1]=0,P=1;P<=2*D+G*(G+5)/2+2*O+1;P+=1)K[P]=0;for(P=1;P<=2;P+=1)st[P]=0;return w(S,N,0,D,j,X,R,E,0,O,L,U,0,st,K,V),W="",V[1]===1&&(W="constraints are inconsistent, no solution!"),V[1]===2&&(W="matrix D in quadratic function is not positive definite!"),{solution:x(j),value:x(X),unconstrained_solution:x(N),iterations:x(st),iact:x(U),message:W}}}(numeric),numeric.svd=function(I){var v,x=numeric.epsilon,w=1e-64/x,S=0,N=0,R=0,E=0,L=0,V=numeric.clone(I),P=V.length,D=V[0].length;if(P<D)throw"Need more rows than columns";var O=new Array(D),G=new Array(D);for(N=0;N<D;N++)O[N]=G[N]=0;var W=numeric.rep([D,D],0);function X(bt,$t){return(bt=Math.abs(bt))>($t=Math.abs($t))?bt*Math.sqrt(1+$t*$t/bt/bt):$t==0?bt:$t*Math.sqrt(1+bt*bt/$t/$t)}var U=0,j=0,K=0,st=0,H=0,at=0,nt=0;for(N=0;N<D;N++){for(O[N]=j,nt=0,L=N+1,R=N;R<P;R++)nt+=V[R][N]*V[R][N];if(nt<=w)j=0;else for(U=V[N][N],j=Math.sqrt(nt),U>=0&&(j=-j),K=U*j-nt,V[N][N]=U-j,R=L;R<D;R++){for(nt=0,E=N;E<P;E++)nt+=V[E][N]*V[E][R];for(U=nt/K,E=N;E<P;E++)V[E][R]+=U*V[E][N]}for(G[N]=j,nt=0,R=L;R<D;R++)nt+=V[N][R]*V[N][R];if(nt<=w)j=0;else{for(U=V[N][N+1],j=Math.sqrt(nt),U>=0&&(j=-j),K=U*j-nt,V[N][N+1]=U-j,R=L;R<D;R++)O[R]=V[N][R]/K;for(R=L;R<P;R++){for(nt=0,E=L;E<D;E++)nt+=V[R][E]*V[N][E];for(E=L;E<D;E++)V[R][E]+=nt*O[E]}}(H=Math.abs(G[N])+Math.abs(O[N]))>st&&(st=H)}for(N=D-1;N!=-1;N+=-1){if(j!=0){for(K=j*V[N][N+1],R=L;R<D;R++)W[R][N]=V[N][R]/K;for(R=L;R<D;R++){for(nt=0,E=L;E<D;E++)nt+=V[N][E]*W[E][R];for(E=L;E<D;E++)W[E][R]+=nt*W[E][N]}}for(R=L;R<D;R++)W[N][R]=0,W[R][N]=0;W[N][N]=1,j=O[N],L=N}for(N=D-1;N!=-1;N+=-1){for(L=N+1,j=G[N],R=L;R<D;R++)V[N][R]=0;if(j!=0){for(K=V[N][N]*j,R=L;R<D;R++){for(nt=0,E=L;E<P;E++)nt+=V[E][N]*V[E][R];for(U=nt/K,E=N;E<P;E++)V[E][R]+=U*V[E][N]}for(R=N;R<P;R++)V[R][N]=V[R][N]/j}else for(R=N;R<P;R++)V[R][N]=0;V[N][N]+=1}for(x*=st,E=D-1;E!=-1;E+=-1)for(var pt=0;pt<50;pt++){var ot=!1;for(L=E;L!=-1;L+=-1){if(Math.abs(O[L])<=x){ot=!0;break}if(Math.abs(G[L-1])<=x)break}if(!ot){S=0,nt=1;var q=L-1;for(N=L;N<E+1&&(U=nt*O[N],O[N]=S*O[N],!(Math.abs(U)<=x));N++)for(K=X(U,j=G[N]),G[N]=K,S=j/K,nt=-U/K,R=0;R<P;R++)H=V[R][q],at=V[R][N],V[R][q]=H*S+at*nt,V[R][N]=-H*nt+at*S}if(at=G[E],L==E){if(at<0)for(G[E]=-at,R=0;R<D;R++)W[R][E]=-W[R][E];break}if(pt>=49)throw"Error: no convergence.";for(st=G[L],j=X(U=(((H=G[E-1])-at)*(H+at)+((j=O[E-1])-(K=O[E]))*(j+K))/(2*K*H),1),U=U<0?((st-at)*(st+at)+K*(H/(U-j)-K))/st:((st-at)*(st+at)+K*(H/(U+j)-K))/st,S=1,nt=1,N=L+1;N<E+1;N++){for(j=O[N],H=G[N],K=nt*j,j*=S,at=X(U,K),O[N-1]=at,U=st*(S=U/at)+j*(nt=K/at),j=-st*nt+j*S,K=H*nt,H*=S,R=0;R<D;R++)st=W[R][N-1],at=W[R][N],W[R][N-1]=st*S+at*nt,W[R][N]=-st*nt+at*S;for(at=X(U,K),G[N-1]=at,U=(S=U/at)*j+(nt=K/at)*H,st=-nt*j+S*H,R=0;R<P;R++)H=V[R][N-1],at=V[R][N],V[R][N-1]=H*S+at*nt,V[R][N]=-H*nt+at*S}O[L]=0,O[E]=U,G[E]=st}for(N=0;N<G.length;N++)G[N]<x&&(G[N]=0);for(N=0;N<D;N++)for(R=N-1;R>=0;R--)if(G[R]<G[N]){for(S=G[R],G[R]=G[N],G[N]=S,E=0;E<V.length;E++)v=V[E][N],V[E][N]=V[E][R],V[E][R]=v;for(E=0;E<W.length;E++)v=W[E][N],W[E][N]=W[E][R],W[E][R]=v;N=R}return{U:V,S:G,V:W}}},254:function(I,v){var x,w,S;w=[I],x=function(N){"use strict";function R(X,U,j){return U in X?Object.defineProperty(X,U,{value:j,enumerable:!0,configurable:!0,writable:!0}):X[U]=j,X}var E=Object.assign||function(X){for(var U=1;U<arguments.length;U++){var j=arguments[U];for(var K in j)Object.prototype.hasOwnProperty.call(j,K)&&(X[K]=j[K])}return X};function L(X){if(Array.isArray(X)){for(var U=0,j=Array(X.length);U<X.length;U++)j[U]=X[U];return j}return Array.from(X)}var V={order:2,precision:2,period:null};function P(X,U){var j=[],K=[];X.forEach(function(at,nt){at[1]!==null&&(K.push(at),j.push(U[nt]))});var st=K.reduce(function(at,nt){return at+nt[1]},0)/K.length,H=K.reduce(function(at,nt){var pt=nt[1]-st;return at+pt*pt},0);return 1-K.reduce(function(at,nt,pt){var ot=j[pt],q=nt[1]-ot[1];return at+q*q},0)/H}function D(X,U){for(var j=X,K=X.length-1,st=[U],H=0;H<K;H++){for(var at=H,nt=H+1;nt<K;nt++)Math.abs(j[H][nt])>Math.abs(j[H][at])&&(at=nt);for(var pt=H;pt<K+1;pt++){var ot=j[pt][H];j[pt][H]=j[pt][at],j[pt][at]=ot}for(var q=H+1;q<K;q++)for(var bt=K;bt>=H;bt--)j[bt][q]-=j[bt][H]*j[H][q]/j[H][H]}for(var $t=K-1;$t>=0;$t--){for(var zt=0,Xt=$t+1;Xt<K;Xt++)zt+=j[Xt][$t]*st[Xt];st[$t]=(j[K][$t]-zt)/j[$t][$t]}return st}function O(X,U){var j=Math.pow(10,U);return Math.round(X*j)/j}var G={linear:function(X,U){for(var j=[0,0,0,0,0],K=0,st=0;st<X.length;st++)X[st][1]!==null&&(K++,j[0]+=X[st][0],j[1]+=X[st][1],j[2]+=X[st][0]*X[st][0],j[3]+=X[st][0]*X[st][1],j[4]+=X[st][1]*X[st][1]);var H=K*j[2]-j[0]*j[0],at=K*j[3]-j[0]*j[1],nt=H===0?0:O(at/H,U.precision),pt=O(j[1]/K-nt*j[0]/K,U.precision),ot=function(bt){return[O(bt,U.precision),O(nt*bt+pt,U.precision)]},q=X.map(function(bt){return ot(bt[0])});return{points:q,predict:ot,equation:[nt,pt],r2:O(P(X,q),U.precision),string:pt===0?"y = "+nt+"x":"y = "+nt+"x + "+pt}},exponential:function(X,U){for(var j=[0,0,0,0,0,0],K=0;K<X.length;K++)X[K][1]!==null&&(j[0]+=X[K][0],j[1]+=X[K][1],j[2]+=X[K][0]*X[K][0]*X[K][1],j[3]+=X[K][1]*Math.log(X[K][1]),j[4]+=X[K][0]*X[K][1]*Math.log(X[K][1]),j[5]+=X[K][0]*X[K][1]);var st=j[1]*j[2]-j[5]*j[5],H=Math.exp((j[2]*j[3]-j[5]*j[4])/st),at=(j[1]*j[4]-j[5]*j[3])/st,nt=O(H,U.precision),pt=O(at,U.precision),ot=function(bt){return[O(bt,U.precision),O(nt*Math.exp(pt*bt),U.precision)]},q=X.map(function(bt){return ot(bt[0])});return{points:q,predict:ot,equation:[nt,pt],string:"y = "+nt+"e^("+pt+"x)",r2:O(P(X,q),U.precision)}},logarithmic:function(X,U){for(var j=[0,0,0,0],K=X.length,st=0;st<K;st++)X[st][1]!==null&&(j[0]+=Math.log(X[st][0]),j[1]+=X[st][1]*Math.log(X[st][0]),j[2]+=X[st][1],j[3]+=Math.pow(Math.log(X[st][0]),2));var H=O((K*j[1]-j[2]*j[0])/(K*j[3]-j[0]*j[0]),U.precision),at=O((j[2]-H*j[0])/K,U.precision),nt=function(ot){return[O(ot,U.precision),O(O(at+H*Math.log(ot),U.precision),U.precision)]},pt=X.map(function(ot){return nt(ot[0])});return{points:pt,predict:nt,equation:[at,H],string:"y = "+at+" + "+H+" ln(x)",r2:O(P(X,pt),U.precision)}},power:function(X,U){for(var j=[0,0,0,0,0],K=X.length,st=0;st<K;st++)X[st][1]!==null&&(j[0]+=Math.log(X[st][0]),j[1]+=Math.log(X[st][1])*Math.log(X[st][0]),j[2]+=Math.log(X[st][1]),j[3]+=Math.pow(Math.log(X[st][0]),2));var H=(K*j[1]-j[0]*j[2])/(K*j[3]-Math.pow(j[0],2)),at=(j[2]-H*j[0])/K,nt=O(Math.exp(at),U.precision),pt=O(H,U.precision),ot=function(bt){return[O(bt,U.precision),O(O(nt*Math.pow(bt,pt),U.precision),U.precision)]},q=X.map(function(bt){return ot(bt[0])});return{points:q,predict:ot,equation:[nt,pt],string:"y = "+nt+"x^"+pt,r2:O(P(X,q),U.precision)}},polynomial:function(X,U){for(var j=[],K=[],st=0,H=0,at=X.length,nt=U.order+1,pt=0;pt<nt;pt++){for(var ot=0;ot<at;ot++)X[ot][1]!==null&&(st+=Math.pow(X[ot][0],pt)*X[ot][1]);j.push(st),st=0;for(var q=[],bt=0;bt<nt;bt++){for(var $t=0;$t<at;$t++)X[$t][1]!==null&&(H+=Math.pow(X[$t][0],pt+bt));q.push(H),H=0}K.push(q)}K.push(j);for(var zt=D(K,nt).map(function(z){return O(z,U.precision)}),Xt=function(z){return[O(z,U.precision),O(zt.reduce(function(Jt,Ht,le){return Jt+Ht*Math.pow(z,le)},0),U.precision)]},Zt=X.map(function(z){return Xt(z[0])}),ie="y = ",Ut=zt.length-1;Ut>=0;Ut--)ie+=Ut>1?zt[Ut]+"x^"+Ut+" + ":Ut===1?zt[Ut]+"x + ":zt[Ut];return{string:ie,points:Zt,predict:Xt,equation:[].concat(L(zt)).reverse(),r2:O(P(X,Zt),U.precision)}}};function W(){var X=function(U,j){return E({_round:O},U,R({},j,function(K,st){return G[j](K,E({},V,st))}))};return Object.keys(G).reduce(X,{})}N.exports=W()},(S=typeof x=="function"?x.apply(v,w):x)===void 0||(I.exports=S)},377:(I,v,x)=>{var w=x(832),S=x(652),N=x(801),R=x(30),E=x(618),L=x(49),V=x(971);V.alea=w,V.xor128=S,V.xorwow=N,V.xorshift7=R,V.xor4096=E,V.tychei=L,I.exports=V},832:function(I,v,x){var w;(function(S,N,R){function E(P){var D=this,O=function(){var G=4022871197,W=function(X){X=String(X);for(var U=0;U<X.length;U++){var j=.02519603282416938*(G+=X.charCodeAt(U));j-=G=j>>>0,G=(j*=G)>>>0,G+=4294967296*(j-=G)}return 23283064365386963e-26*(G>>>0)};return W}();D.next=function(){var G=2091639*D.s0+23283064365386963e-26*D.c;return D.s0=D.s1,D.s1=D.s2,D.s2=G-(D.c=0|G)},D.c=1,D.s0=O(" "),D.s1=O(" "),D.s2=O(" "),D.s0-=O(P),D.s0<0&&(D.s0+=1),D.s1-=O(P),D.s1<0&&(D.s1+=1),D.s2-=O(P),D.s2<0&&(D.s2+=1),O=null}function L(P,D){return D.c=P.c,D.s0=P.s0,D.s1=P.s1,D.s2=P.s2,D}function V(P,D){var O=new E(P),G=D&&D.state,W=O.next;return W.int32=function(){return 4294967296*O.next()|0},W.double=function(){return W()+11102230246251565e-32*(2097152*W()|0)},W.quick=W,G&&(typeof G=="object"&&L(G,O),W.state=function(){return L(O,{})}),W}N&&N.exports?N.exports=V:x.amdD&&x.amdO?(w=function(){return V}.call(v,x,v,N))===void 0||(N.exports=w):this.alea=V})(0,I=x.nmd(I),x.amdD)},49:function(I,v,x){var w;(function(S,N,R){function E(P){var D=this,O="";D.next=function(){var W=D.b,X=D.c,U=D.d,j=D.a;return W=W<<25^W>>>7^X,X=X-U|0,U=U<<24^U>>>8^j,j=j-W|0,D.b=W=W<<20^W>>>12^X,D.c=X=X-U|0,D.d=U<<16^X>>>16^j,D.a=j-W|0},D.a=0,D.b=0,D.c=-1640531527,D.d=1367130551,P===Math.floor(P)?(D.a=P/4294967296|0,D.b=0|P):O+=P;for(var G=0;G<O.length+20;G++)D.b^=0|O.charCodeAt(G),D.next()}function L(P,D){return D.a=P.a,D.b=P.b,D.c=P.c,D.d=P.d,D}function V(P,D){var O=new E(P),G=D&&D.state,W=function(){return(O.next()>>>0)/4294967296};return W.double=function(){do var X=((O.next()>>>11)+(O.next()>>>0)/4294967296)/2097152;while(X===0);return X},W.int32=O.next,W.quick=W,G&&(typeof G=="object"&&L(G,O),W.state=function(){return L(O,{})}),W}N&&N.exports?N.exports=V:x.amdD&&x.amdO?(w=function(){return V}.call(v,x,v,N))===void 0||(N.exports=w):this.tychei=V})(0,I=x.nmd(I),x.amdD)},652:function(I,v,x){var w;(function(S,N,R){function E(P){var D=this,O="";D.x=0,D.y=0,D.z=0,D.w=0,D.next=function(){var W=D.x^D.x<<11;return D.x=D.y,D.y=D.z,D.z=D.w,D.w^=D.w>>>19^W^W>>>8},P===(0|P)?D.x=P:O+=P;for(var G=0;G<O.length+64;G++)D.x^=0|O.charCodeAt(G),D.next()}function L(P,D){return D.x=P.x,D.y=P.y,D.z=P.z,D.w=P.w,D}function V(P,D){var O=new E(P),G=D&&D.state,W=function(){return(O.next()>>>0)/4294967296};return W.double=function(){do var X=((O.next()>>>11)+(O.next()>>>0)/4294967296)/2097152;while(X===0);return X},W.int32=O.next,W.quick=W,G&&(typeof G=="object"&&L(G,O),W.state=function(){return L(O,{})}),W}N&&N.exports?N.exports=V:x.amdD&&x.amdO?(w=function(){return V}.call(v,x,v,N))===void 0||(N.exports=w):this.xor128=V})(0,I=x.nmd(I),x.amdD)},618:function(I,v,x){var w;(function(S,N,R){function E(P){var D=this;D.next=function(){var O,G,W=D.w,X=D.X,U=D.i;return D.w=W=W+1640531527|0,G=X[U+34&127],O=X[U=U+1&127],G^=G<<13,O^=O<<17,G^=G>>>15,O^=O>>>12,G=X[U]=G^O,D.i=U,G+(W^W>>>16)|0},function(O,G){var W,X,U,j,K,st=[],H=128;for(G===(0|G)?(X=G,G=null):(G+="\0",X=0,H=Math.max(H,G.length)),U=0,j=-32;j<H;++j)G&&(X^=G.charCodeAt((j+32)%G.length)),j===0&&(K=X),X^=X<<10,X^=X>>>15,X^=X<<4,X^=X>>>13,j>=0&&(K=K+1640531527|0,U=(W=st[127&j]^=X+K)==0?U+1:0);for(U>=128&&(st[127&(G&&G.length||0)]=-1),U=127,j=512;j>0;--j)X=st[U+34&127],W=st[U=U+1&127],X^=X<<13,W^=W<<17,X^=X>>>15,W^=W>>>12,st[U]=X^W;O.w=K,O.X=st,O.i=U}(D,P)}function L(P,D){return D.i=P.i,D.w=P.w,D.X=P.X.slice(),D}function V(P,D){P==null&&(P=+new Date);var O=new E(P),G=D&&D.state,W=function(){return(O.next()>>>0)/4294967296};return W.double=function(){do var X=((O.next()>>>11)+(O.next()>>>0)/4294967296)/2097152;while(X===0);return X},W.int32=O.next,W.quick=W,G&&(G.X&&L(G,O),W.state=function(){return L(O,{})}),W}N&&N.exports?N.exports=V:x.amdD&&x.amdO?(w=function(){return V}.call(v,x,v,N))===void 0||(N.exports=w):this.xor4096=V})(0,I=x.nmd(I),x.amdD)},30:function(I,v,x){var w;(function(S,N,R){function E(P){var D=this;D.next=function(){var O,G,W=D.x,X=D.i;return O=W[X],G=(O^=O>>>7)^O<<24,G^=(O=W[X+1&7])^O>>>10,G^=(O=W[X+3&7])^O>>>3,G^=(O=W[X+4&7])^O<<7,O=W[X+7&7],G^=(O^=O<<13)^O<<9,W[X]=G,D.i=X+1&7,G},function(O,G){var W,X=[];if(G===(0|G))X[0]=G;else for(G=""+G,W=0;W<G.length;++W)X[7&W]=X[7&W]<<15^G.charCodeAt(W)+X[W+1&7]<<13;for(;X.length<8;)X.push(0);for(W=0;W<8&&X[W]===0;++W);for(W==8?X[7]=-1:X[W],O.x=X,O.i=0,W=256;W>0;--W)O.next()}(D,P)}function L(P,D){return D.x=P.x.slice(),D.i=P.i,D}function V(P,D){P==null&&(P=+new Date);var O=new E(P),G=D&&D.state,W=function(){return(O.next()>>>0)/4294967296};return W.double=function(){do var X=((O.next()>>>11)+(O.next()>>>0)/4294967296)/2097152;while(X===0);return X},W.int32=O.next,W.quick=W,G&&(G.x&&L(G,O),W.state=function(){return L(O,{})}),W}N&&N.exports?N.exports=V:x.amdD&&x.amdO?(w=function(){return V}.call(v,x,v,N))===void 0||(N.exports=w):this.xorshift7=V})(0,I=x.nmd(I),x.amdD)},801:function(I,v,x){var w;(function(S,N,R){function E(P){var D=this,O="";D.next=function(){var W=D.x^D.x>>>2;return D.x=D.y,D.y=D.z,D.z=D.w,D.w=D.v,(D.d=D.d+362437|0)+(D.v=D.v^D.v<<4^W^W<<1)|0},D.x=0,D.y=0,D.z=0,D.w=0,D.v=0,P===(0|P)?D.x=P:O+=P;for(var G=0;G<O.length+64;G++)D.x^=0|O.charCodeAt(G),G==O.length&&(D.d=D.x<<10^D.x>>>4),D.next()}function L(P,D){return D.x=P.x,D.y=P.y,D.z=P.z,D.w=P.w,D.v=P.v,D.d=P.d,D}function V(P,D){var O=new E(P),G=D&&D.state,W=function(){return(O.next()>>>0)/4294967296};return W.double=function(){do var X=((O.next()>>>11)+(O.next()>>>0)/4294967296)/2097152;while(X===0);return X},W.int32=O.next,W.quick=W,G&&(typeof G=="object"&&L(G,O),W.state=function(){return L(O,{})}),W}N&&N.exports?N.exports=V:x.amdD&&x.amdO?(w=function(){return V}.call(v,x,v,N))===void 0||(N.exports=w):this.xorwow=V})(0,I=x.nmd(I),x.amdD)},971:function(I,v,x){var w;(function(S,N,R){var E,L=256,V=R.pow(L,6),P=R.pow(2,52),D=2*P,O=255;function G(st,H,at){var nt=[],pt=j(U((H=H==1?{entropy:!0}:H||{}).entropy?[st,K(N)]:st??function(){try{var bt;return E&&(bt=E.randomBytes)?bt=bt(L):(bt=new Uint8Array(L),(S.crypto||S.msCrypto).getRandomValues(bt)),K(bt)}catch{var $t=S.navigator,zt=$t&&$t.plugins;return[+new Date,S,zt,S.screen,K(N)]}}(),3),nt),ot=new W(nt),q=function(){for(var bt=ot.g(6),$t=V,zt=0;bt<P;)bt=(bt+zt)*L,$t*=L,zt=ot.g(1);for(;bt>=D;)bt/=2,$t/=2,zt>>>=1;return(bt+zt)/$t};return q.int32=function(){return 0|ot.g(4)},q.quick=function(){return ot.g(4)/4294967296},q.double=q,j(K(ot.S),N),(H.pass||at||function(bt,$t,zt,Xt){return Xt&&(Xt.S&&X(Xt,ot),bt.state=function(){return X(ot,{})}),zt?(R.random=bt,$t):bt})(q,pt,"global"in H?H.global:this==R,H.state)}function W(st){var H,at=st.length,nt=this,pt=0,ot=nt.i=nt.j=0,q=nt.S=[];for(at||(st=[at++]);pt<L;)q[pt]=pt++;for(pt=0;pt<L;pt++)q[pt]=q[ot=O&ot+st[pt%at]+(H=q[pt])],q[ot]=H;(nt.g=function(bt){for(var $t,zt=0,Xt=nt.i,Zt=nt.j,ie=nt.S;bt--;)$t=ie[Xt=O&Xt+1],zt=zt*L+ie[O&(ie[Xt]=ie[Zt=O&Zt+$t])+(ie[Zt]=$t)];return nt.i=Xt,nt.j=Zt,zt})(L)}function X(st,H){return H.i=st.i,H.j=st.j,H.S=st.S.slice(),H}function U(st,H){var at,nt=[],pt=typeof st;if(H&&pt=="object")for(at in st)try{nt.push(U(st[at],H-1))}catch{}return nt.length?nt:pt=="string"?st:st+"\0"}function j(st,H){for(var at,nt=st+"",pt=0;pt<nt.length;)H[O&pt]=O&(at^=19*H[O&pt])+nt.charCodeAt(pt++);return K(H)}function K(st){return String.fromCharCode.apply(0,st)}if(j(R.random(),N),I.exports){I.exports=G;try{E=x(42)}catch{}}else(w=function(){return G}.call(v,x,v,I))===void 0||(I.exports=w)})(typeof self<"u"?self:this,[],Math)},730:()=>{window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(I,v){return window.setTimeout(I,16.666666666666668)},window.cancelRequestAnimFrame=window.cancelCancelRequestAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||window.clearTimeout},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},__webpack_module_cache__={};function __webpack_require__(I){var v=__webpack_module_cache__[I];if(v!==void 0)return v.exports;var x=__webpack_module_cache__[I]={id:I,loaded:!1,exports:{}};return __webpack_modules__[I].call(x.exports,x,x.exports,__webpack_require__),x.loaded=!0,x.exports}__webpack_require__.amdD=function(){throw new Error("define cannot be used indirect")},__webpack_require__.amdO={},__webpack_require__.n=I=>{var v=I&&I.__esModule?()=>I.default:()=>I;return __webpack_require__.d(v,{a:v}),v},__webpack_require__.d=(I,v)=>{for(var x in v)__webpack_require__.o(v,x)&&!__webpack_require__.o(I,x)&&Object.defineProperty(I,x,{enumerable:!0,get:v[x]})},__webpack_require__.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),__webpack_require__.o=(I,v)=>Object.prototype.hasOwnProperty.call(I,v),__webpack_require__.r=I=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},__webpack_require__.nmd=I=>(I.paths=[],I.children||(I.children=[]),I);var __webpack_exports__={};(()=>{"use strict";__webpack_require__.d(__webpack_exports__,{default:()=>J5});var I={};__webpack_require__.r(I),__webpack_require__.d(I,{browserFiles:()=>Ak,browserHTTPRequest:()=>Fk,concatenateArrayBuffers:()=>Dc,copyModel:()=>Sk,decodeWeights:()=>Gg,encodeWeights:()=>cd,fromMemory:()=>Ok,fromMemorySync:()=>h0,getLoadHandlers:()=>mk,getModelArtifactsForJSON:()=>pd,getModelArtifactsForJSONSync:()=>Kg,getModelArtifactsInfoForJSON:()=>zu,getSaveHandlers:()=>Yg,getWeightSpecs:()=>Xg,http:()=>bd,isHTTPScheme:()=>yd,listModels:()=>Ik,loadWeights:()=>Rk,moveModel:()=>Tk,registerLoadRouter:()=>fk,registerSaveRouter:()=>dk,removeModel:()=>Nk,weightsLoaderFactory:()=>u0,withSaveHandler:()=>Mk,withSaveHandlerSync:()=>Lk});var v={};__webpack_require__.r(v),__webpack_require__.d(v,{assertParamsValid:()=>vd,computeFlatOffset:()=>Id,computeOutShape:()=>wd,getNormalizedAxes:()=>Bk,isSliceContinous:()=>kd,maskToAxes:()=>Pk,parseSliceParams:()=>Mc,sliceInfo:()=>Nd,startForAxis:()=>v0,startIndicesWithElidedDims:()=>y0,stopForAxis:()=>w0,stopIndicesWithElidedDims:()=>b0,stridesForAxis:()=>x0,stridesWithElidedDims:()=>f0});var x={};__webpack_require__.r(x),__webpack_require__.d(x,{conv2d:()=>I1,depthwiseConv2d:()=>TI,matMul:()=>of});var w={};__webpack_require__.r(w),__webpack_require__.d(w,{collectGatherOpShapeInfo:()=>zf,computeOutShape:()=>ty,segOpComputeOptimalWindowSize:()=>Q1});var S={};__webpack_require__.r(S),__webpack_require__.d(S,{ERF_A1:()=>Sf,ERF_A2:()=>Tf,ERF_A3:()=>Cf,ERF_A4:()=>$f,ERF_A5:()=>Ef,ERF_P:()=>Nf,PARALLELIZE_THRESHOLD:()=>xf,RowPartitionType:()=>xs,SELU_SCALE:()=>hh,SELU_SCALEALPHA:()=>ch,applyActivation:()=>ih,assertAndGetBroadcastShape:()=>Ce,assertAxesAreInnerMostDims:()=>jn,assertParamsConsistent:()=>bf,assignToTypedArray:()=>W1,axesAreInnerMostDims:()=>Od,calculateShapes:()=>Ju,checkEinsumDimSizes:()=>Df,checkPadOnDimRoundingMode:()=>ar,combineLocations:()=>X0,combineRaggedTensorToTensorShapes:()=>D1,complexWithEvenIndex:()=>P1,complexWithOddIndex:()=>B1,computeConv2DInfo:()=>Dn,computeConv3DInfo:()=>Ia,computeDefaultPad:()=>Cd,computeDilation2DInfo:()=>Pu,computeOptimalWindowSize:()=>lh,computeOutAndReduceShapes:()=>On,computeOutShape:()=>As,computePool2DInfo:()=>Jr,computePool3DInfo:()=>Gs,convertConv2DDataFormat:()=>Hs,decodeEinsumEquation:()=>Rf,eitherStridesOrDilationsAreOne:()=>Hn,expandShapeToKeepDim:()=>xn,exponent:()=>U1,exponents:()=>V1,fromStringArrayToUint8:()=>ey,fromUint8ToStringArray:()=>di,getAxesPermutation:()=>mn,getBroadcastDims:()=>io,getComplexWithIndex:()=>_f,getEinsumComputePath:()=>Of,getEinsumPermutation:()=>Ff,getFusedBiasGradient:()=>ah,getFusedDyActivation:()=>sh,getImageCenter:()=>vf,getInnerMostAxes:()=>vn,getPermuted:()=>tl,getRaggedRank:()=>M1,getReductionAxes:()=>Sn,getReshaped:()=>Qu,getReshapedPermuted:()=>el,getRowPartitionTypesHelper:()=>O1,getSliceBeginCoords:()=>wf,getSliceSize:()=>kf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>G1,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>H1,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>j1,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>yN,getSparseReshapeInputOutputMismatchErrorMessage:()=>Y1,getSparseReshapeInputOutputMultipleErrorMessage:()=>X1,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>q1,getSparseReshapeNegativeOutputDimErrorMessage:()=>K1,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>J1,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>bN,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>xN,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Z1,getUndoAxesPermutation:()=>Ta,isIdentityPermutation:()=>Mf,log:()=>ek,mergeRealAndImagArrays:()=>Xs,prepareAndValidate:()=>If,prepareSplitSize:()=>Lf,segment_util:()=>w,shouldFuse:()=>oh,slice_util:()=>v,splitRealAndImagArrays:()=>z1,tupleValuesAreOne:()=>Na,upcastType:()=>Er,validateDefaultValueShape:()=>L1,validateInput:()=>v1,validateUpdateShape:()=>x1,warn:()=>Br});var N={};__webpack_require__.r(N),__webpack_require__.d(N,{json:()=>DT});var R={};__webpack_require__.r(R),__webpack_require__.d(R,{json:()=>OT});var E={};__webpack_require__.r(E),__webpack_require__.d(E,{json:()=>MT});var L={};__webpack_require__.r(L),__webpack_require__.d(L,{json:()=>LT});var V={};__webpack_require__.r(V),__webpack_require__.d(V,{json:()=>zT});var P={};__webpack_require__.r(P),__webpack_require__.d(P,{json:()=>PT});var D={};__webpack_require__.r(D),__webpack_require__.d(D,{json:()=>BT});var O={};__webpack_require__.r(O),__webpack_require__.d(O,{json:()=>WT});var G={};__webpack_require__.r(G),__webpack_require__.d(G,{json:()=>VT});var W={};__webpack_require__.r(W),__webpack_require__.d(W,{json:()=>UT});var X={};__webpack_require__.r(X),__webpack_require__.d(X,{json:()=>GT});var U={};__webpack_require__.r(U),__webpack_require__.d(U,{json:()=>HT});var j={};__webpack_require__.r(j),__webpack_require__.d(j,{json:()=>jT});var K={};__webpack_require__.r(K),__webpack_require__.d(K,{json:()=>qT});var st={};__webpack_require__.r(st),__webpack_require__.d(st,{json:()=>KT});var H={};__webpack_require__.r(H),__webpack_require__.d(H,{json:()=>XT});var at={};__webpack_require__.r(at),__webpack_require__.d(at,{json:()=>YT});var nt={};__webpack_require__.r(nt),__webpack_require__.d(nt,{json:()=>ZT});var pt={};__webpack_require__.r(pt),__webpack_require__.d(pt,{json:()=>JT});var ot={};__webpack_require__.r(ot),__webpack_require__.d(ot,{OP_SCOPE_SUFFIX:()=>Ug,abs:()=>Tn,acos:()=>N0,acosh:()=>S0,add:()=>Bt,addN:()=>Wk,all:()=>Td,any:()=>Lc,argMax:()=>uo,argMin:()=>T0,asin:()=>C0,asinh:()=>$0,atan:()=>E0,atan2:()=>_0,atanh:()=>A0,avgPool:()=>Pc,avgPool3d:()=>R0,basicLSTMCell:()=>Vk,batchNorm:()=>Bu,batchNorm2d:()=>F0,batchNorm3d:()=>D0,batchNorm4d:()=>O0,batchToSpaceND:()=>Bc,bincount:()=>M0,booleanMaskAsync:()=>vI,broadcastArgs:()=>Uk,broadcastTo:()=>ho,buffer:()=>Fe,cast:()=>ee,ceil:()=>L0,clipByValue:()=>Ar,clone:()=>Vs,complex:()=>ba,concat:()=>un,concat1d:()=>z0,concat2d:()=>Wc,concat3d:()=>P0,concat4d:()=>B0,conv1d:()=>Ed,conv2d:()=>Sa,conv2dTranspose:()=>Ad,conv3d:()=>W0,conv3dTranspose:()=>U0,cos:()=>Vc,cosh:()=>Rd,cosineWindow:()=>sf,cumprod:()=>Uc,cumsum:()=>Fd,denseBincount:()=>Gk,depthToSpace:()=>G0,depthwiseConv2d:()=>Wu,diag:()=>Hk,dilation2d:()=>H0,div:()=>oe,divNoNan:()=>j0,dot:()=>q0,dropout:()=>w1,einsum:()=>jk,elu:()=>Vu,enclosingPowerOfTwo:()=>k1,equal:()=>ms,erf:()=>K0,euclideanNorm:()=>Z0,exp:()=>Wr,expandDims:()=>vr,expm1:()=>J0,eye:()=>Md,fft:()=>nh,fill:()=>po,floor:()=>Gu,floorDiv:()=>Dd,fused:()=>x,gather:()=>Hu,gatherND:()=>NI,greater:()=>Vr,greaterEqual:()=>ci,ifft:()=>Zu,imag:()=>Hc,image:()=>bs,inTopKAsync:()=>SI,irfft:()=>Qd,isFinite:()=>Q0,isInf:()=>t1,isNaN:()=>e1,leakyRelu:()=>jc,less:()=>Ld,lessEqual:()=>hi,linalg:()=>R1,linspace:()=>qk,localResponseNormalization:()=>n1,log:()=>Ur,log1p:()=>qc,logSigmoid:()=>r1,logSoftmax:()=>zd,logSumExp:()=>Pd,logicalAnd:()=>Es,logicalNot:()=>Kc,logicalOr:()=>Bd,logicalXor:()=>s1,losses:()=>hN,lowerBound:()=>Kk,matMul:()=>Oe,max:()=>gs,maxPool:()=>Xc,maxPool3d:()=>i1,maxPoolWithArgmax:()=>Xk,maximum:()=>js,mean:()=>bn,meshgrid:()=>Yk,min:()=>Gc,minimum:()=>ju,mirrorPad:()=>o1,mod:()=>u1,moments:()=>Yc,movingAverage:()=>wI,mul:()=>ht,multiRNNCell:()=>Zk,multinomial:()=>Jk,neg:()=>cn,norm:()=>Uu,notEqual:()=>mo,oneHot:()=>Vd,ones:()=>Gr,onesLike:()=>Hr,op:()=>ct,outerProduct:()=>Qk,pad:()=>$a,pad1d:()=>tI,pad2d:()=>eI,pad3d:()=>nI,pad4d:()=>rI,pool:()=>l1,pow:()=>Ca,prelu:()=>Jc,print:()=>s0,prod:()=>c1,raggedGather:()=>sI,raggedTensorToTensor:()=>aI,rand:()=>iI,randomGamma:()=>lI,randomNormal:()=>Gd,randomStandardNormal:()=>cI,randomUniform:()=>qu,range:()=>Ku,real:()=>Xu,reciprocal:()=>h1,relu:()=>_s,relu6:()=>Hd,reshape:()=>mt,reverse:()=>ts,reverse1d:()=>hI,reverse2d:()=>pI,reverse3d:()=>dI,reverse4d:()=>fI,rfft:()=>rh,round:()=>jd,rsqrt:()=>qd,scalar:()=>xe,scatterND:()=>kI,searchSorted:()=>Wd,selu:()=>Kd,separableConv2d:()=>Xd,setdiff1dAsync:()=>mI,sigmoid:()=>fs,sign:()=>p1,signal:()=>cN,sin:()=>Yd,sinh:()=>Zd,slice:()=>ve,slice1d:()=>Qc,slice2d:()=>Jd,slice3d:()=>th,slice4d:()=>Yu,softmax:()=>eh,softplus:()=>fo,spaceToBatchND:()=>Zc,sparse:()=>pN,sparseToDense:()=>II,spectral:()=>lN,split:()=>Rr,sqrt:()=>Qn,square:()=>Ze,squaredDifference:()=>tf,squeeze:()=>Fr,stack:()=>jr,step:()=>yo,stridedSlice:()=>d1,string:()=>dN,sub:()=>ne,sum:()=>ce,tan:()=>f1,tanh:()=>co,tensor:()=>ds,tensor1d:()=>wn,tensor2d:()=>qs,tensor3d:()=>p0,tensor4d:()=>gI,tensor5d:()=>yI,tensor6d:()=>bI,tile:()=>Qr,topk:()=>m1,transpose:()=>Le,truncatedNormal:()=>ef,unique:()=>g1,unsortedSegmentSum:()=>nf,unstack:()=>ys,upperBound:()=>xI,variable:()=>y1,where:()=>xr,whereAsync:()=>b1,zeros:()=>Cn,zerosLike:()=>Pe});var q={};__webpack_require__.r(q),__webpack_require__.d(q,{addImpl:()=>cv,bincountImpl:()=>Pm,bincountReduceImpl:()=>gv,castImpl:()=>lv,ceilImpl:()=>yv,concatImpl:()=>bv,equalImpl:()=>wv,expImpl:()=>Iv,expm1Impl:()=>Sv,floorImpl:()=>$v,gatherNdImpl:()=>Ev,gatherV2Impl:()=>_v,greaterEqualImpl:()=>Rv,greaterImpl:()=>Av,lessEqualImpl:()=>Dv,lessImpl:()=>Fv,linSpaceImpl:()=>Ov,logImpl:()=>Mv,maxImpl:()=>Lv,maximumImpl:()=>Pv,minimumImpl:()=>Bv,multiplyImpl:()=>Bm,negImpl:()=>Vv,notEqualImpl:()=>Uv,prodImpl:()=>jv,raggedGatherImpl:()=>Kv,raggedTensorToTensorImpl:()=>Zv,rangeImpl:()=>Jv,rsqrtImpl:()=>Qv,scatterImpl:()=>_o,sigmoidImpl:()=>z3,simpleAbsImpl:()=>pv,sliceImpl:()=>mv,sparseFillEmptyRowsImpl:()=>ew,sparseReshapeImpl:()=>nw,sparseSegmentReductionImpl:()=>jm,sqrtImpl:()=>R4,squaredDifferenceImpl:()=>rw,stridedSliceImpl:()=>sw,stringNGramsImpl:()=>aw,stringSplitImpl:()=>iw,stringToHashBucketFastImpl:()=>ow,subImpl:()=>Tv,tileImpl:()=>uw,topKImpl:()=>cw,transposeImpl:()=>Lm,uniqueImpl:()=>pw});class bt{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class $t{refCount(t){return zt("refCount")}incRef(t){return zt("incRef")}timerAvailable(){return!0}time(t){return zt("time")}read(t){return zt("read")}readSync(t){return zt("readSync")}readToGPU(t,e){return zt("readToGPU")}numDataIds(){return zt("numDataIds")}disposeData(t,e){return zt("disposeData")}write(t,e,r){return zt("write")}move(t,e,r,s,a){return zt("move")}memory(){return zt("memory")}floatPrecision(){return zt("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return zt("dispose")}}function zt(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Xt(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Ut(n,t,e)}function Zt(n,t,e){return Math.max(n,Math.min(t,e))}function ie(n){return n%2==0?n:n+1}function Ut(n,t,e){let r=n[t];n[t]=n[e],n[e]=r}function z(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function Jt(n,t,e=""){z(se(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Ht(n){z(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function le(n,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(n)||Vn(n)&&!e)for(let r=0;r<n.length;++r)le(n[r],t,e);else t.push(n);return t}function St(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function se(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Ge(n){return n%1==0}function Cr(n){let t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function Wn(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function fr(n,t=s=>0,e,r=setTimeout){return new Promise((s,a)=>{let i=0,o=()=>{if(n())return void s();i++;let l=t(i);e!=null&&i>=e?a():r(o,l)};o()})}function er(n,t){let e=1,r=-1;for(let a=0;a<n.length;++a)if(n[a]>=0)e*=n[a];else if(n[a]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(n[a]<0)throw Error(`Shapes can not be < 0. Found ${n[a]} at dim ${a}`);if(r===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let s=n.slice();return s[r]=t/e,s}function ge(n,t){let e=t.length;return z((n=n==null?t.map((r,s)=>s):[].concat(n)).every(r=>r>=-e&&r<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),z(n.every(r=>Ge(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?e+r:r)}function Zn(n,t){let e=[],r=[],s=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||s?null:ge(t,n).sort(),i=0;for(let o=0;o<n.length;++o){if(a!=null){if(a[i]===o&&n[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(a[i]==null||a[i]>o)&&n[o]===1&&(e.push(n[o]),r.push(o)),a[i]<=o&&i++}n[o]!==1&&(e.push(n[o]),r.push(o))}return{newShape:e,keptDims:r}}function Ae(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else{if(n!=="bool")throw new Error(`Unknown data type ${n}`);e=new Uint8Array(t)}return e}function Xe(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else{if(n!=="string")throw new Error(`Unknown data type ${n}`);e=new Array(t)}return e}function mr(n,t){return t!=="complex64"&&(t!=="float32"||n==="complex64")&&(t!=="int32"||n==="float32"||n==="complex64")&&(t!=="bool"||n!=="bool")}function Vn(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function Yr(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function gr(n){return typeof n=="string"||n instanceof String}function Se(n){return typeof n=="number"}function Un(n){return Array.isArray(n)?Un(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Se(n)?"float32":gr(n)?"string":typeof n=="boolean"?"bool":"float32"}function nr(n){return!!(n&&n.constructor&&n.call&&n.apply)}function He(n,t){for(let e=t;e<n;++e)if(n%e==0)return e;return n}function Yt(n){let t=n.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=n[t-1];for(let r=t-3;r>=0;--r)e[r]=e[r+1]*n[r+1];return e}function ye(n,t,e,r=!1){let s=new Array;if(t.length===1){let a=t[0]*(r?2:1);for(let i=0;i<a;i++)s[i]=e[n+i]}else{let a=t[0],i=t.slice(1),o=i.reduce((l,c)=>l*c)*(r?2:1);for(let l=0;l<a;l++)s[l]=ye(n+l*o,i,e,r)}return s}function tn(n,t,e=!1){if(n.length===0)return t[0];let r=n.reduce((s,a)=>s*a)*(e?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return ye(0,n,t,e)}function en(n,t){let e=nn(n,t);for(let r=0;r<e.length;r++)e[r]=1;return e}function nn(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function $r(n,t){let e=n.reduce((r,s)=>r*s,1);if(t==null||t==="float32")return tn(n,new Float32Array(e));if(t==="int32")return tn(n,new Int32Array(e));if(t==="bool")return tn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function qo(n){n.forEach(t=>{z(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Pr(n,t,e){if(t===0)return 0;if(t===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=e[s]*n[s];return r}function Ps(n,t,e){if(t===0)return[];if(t===1)return[n];let r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/e[s]),n-=r[s]*e[s];return r[r.length-1]=n,r}function Bs(n){return n&&n.then&&typeof n.then=="function"}let Ko="tfjsflags";class Vl{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ul,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(Ct().getBool("IS_TEST")||Ct().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,r){if(this.flagRegistry[t]={evaluationFn:e,setHook:r},this.urlFlags[t]!=null){let s=this.urlFlags[t];Ct().getBool("IS_TEST")||Ct().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${s}.`),this.set(t,s)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(Bs(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(this.global===void 0||this.global.location===void 0||this.global.location.search===void 0)return;let t=this.getQueryParams(this.global.location.search);Ko in t&&t[Ko].split(",").forEach(e=>{let[r,s]=e.split(":");this.urlFlags[r]=function(a,i){if((i=i.toLowerCase())==="true"||i==="false")return i==="true";if(""+ +i===i)return+i;throw new Error(`Could not parse value flag value ${i} for flag ${a}.`)}(r,s)})}}function Ul(n){let t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...r)=>(function(s,a,i){s[decodeURIComponent(a)]=decodeURIComponent(i||"")}(t,r[0],r[1]),r.join("="))),t}function Ct(){return Mi}let Oi,Mi=null;function Gl(){if(Oi==null){let n;if(typeof window<"u")n=window;else if(__webpack_require__.g!==void 0)n=__webpack_require__.g;else if(typeof process<"u")n=process;else{if(typeof self>"u")throw new Error("Could not find a global object");n=self}Oi=n}return Oi}function Xo(n,t){let e=function(){let r=Gl();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}();if(e.has(n))return e.get(n);{let r=t();return e.set(n,r),e.get(n)}}let aa="Abs",ia="Acos",Ga="Acosh",yr="Add",Li="AddN",Yo="All",zi="Any",Pi="ArgMax",Bi="ArgMin",Ha="Asin",ja="Asinh",qa="Atan",Ka="Atanh",Xa="Atan2",Wi="AvgPool",Zo="AvgPoolGrad",Vi="AvgPool3D",Ui="AvgPool3DGrad",Gi="BatchMatMul",Hi="BatchToSpaceND",Jo="Bincount",Qo="BroadcastArgs",Ya="Cast",Za="Ceil",Ja="ClipByValue",tu="Complex",ji="ComplexAbs",qi="Concat",Ki="Conv2D",eu="Conv2DBackpropFilter",Xi="Conv2DBackpropInput",Yi="Conv3D",nu="Conv3DBackpropFilterV2",Zi="Conv3DBackpropInputV2",hs="Cos",oa="Cosh",$s="Cumprod",Ji="Cumsum",ua="CropAndResize",Qa="DenseBincount",ru="DepthToSpace",Qi="DepthwiseConv2dNative",ti="DepthwiseConv2dNativeBackpropFilter",su="DepthwiseConv2dNativeBackpropInput",au="Diag",J="Dilation2D",it="Dilation2DBackpropInput",ut="Dilation2DBackpropFilter",vt="RealDiv",xt="Einsum",Nt="Elu",Dt="EluGrad",Vt="Erf",Gt="Equal",qt="Exp",ae="ExpandDims",de="Expm1",Re="FFT",Ue="Fill",je="FlipLeftRight",on="Floor",br="FloorDiv",la="FusedBatchNorm",ca="GatherV2",iu="GatherNd",to="Greater",ha="GreaterEqual",ou="Identity",xp="IFFT",vp="Imag",uu="IsFinite",lu="IsInf",cu="IsNan",Hl="LeakyRelu",jl="Less",ql="LessEqual",wp="LinSpace",hu="Log",pu="Log1p",Kl="LogicalAnd",Xl="LogicalNot",Yl="LogicalOr",Zl="LRN",kp="LRNGrad",Jl="Max",du="Maximum",Ql="MaxPool",Ip="MaxPoolGrad",tc="MaxPool3D",Np="MaxPool3DGrad",Sp="MaxPoolWithArgmax",ec="Mean",nc="Min",fu="Minimum",rc="MirrorPad",mu="Mod",Tp="Multinomial",gu="Multiply",sc="Neg",ac="NotEqual",Cp="NonMaxSuppressionV3",$p="NonMaxSuppressionV4",Ep="NonMaxSuppressionV5",ic="OnesLike",oc="OneHot",uc="Pack",lc="PadV2",yu="Pow",cc="Prelu",hc="Prod",_p="RaggedGather",Ap="RaggedTensorToTensor",Rp="Range",Fp="Real",bu="Reciprocal",xu="Relu",pc="Reshape",dc="ResizeNearestNeighbor",Dp="ResizeNearestNeighborGrad",fc="ResizeBilinear",Op="ResizeBilinearGrad",vu="Relu6",mc="Reverse",wu="Round",ku="Rsqrt",Mp="ScatterNd",Lp="SearchSorted",gc="Select",Iu="Selu",yc="Slice",Nu="Sin",Su="Sinh",Tu="Sign",Cu="Sigmoid",$u="Softplus",Eu="Sqrt",bc="Sum",xc="SpaceToBatchND",vc="SplitV",wc="Softmax",zp="SparseFillEmptyRows",Pp="SparseReshape",Bp="SparseSegmentMean",Wp="SparseSegmentSum",Vp="SparseToDense",_u="SquaredDifference",Up="Square",Gp="StridedSlice",Hp="StringNGrams",jp="StringSplit",qp="StringToHashBucketFast",Au="Sub",Ru="Tan",Fu="Tanh",Du="Tile",Kp="TopK",Xp="Transform",eo="Transpose",Yp="Unique",kc="Unpack",Ic="UnsortedSegmentSum",Nc="ZerosLike",Ou="Step",Zp="FromPixels",Jp="RotateWithOffset",Sc="_FusedMatMul",Tc="FusedConv2D",Cc="FusedDepthwiseConv2D";function Br(...n){Ct().getBool("IS_TEST")||Ct().getBool("PROD")||console.warn(...n)}function ek(...n){Ct().getBool("IS_TEST")||Ct().getBool("PROD")||console.log(...n)}let $c=Xo("kernelRegistry",()=>new Map),Qp=Xo("gradRegistry",()=>new Map);function td(n,t){let e=$g(n,t);return $c.get(e)}function Sg(n){return Qp.get(n)}function Tg(n){let t=$c.entries(),e=[];for(;;){let{done:r,value:s}=t.next();if(r)break;let[a,i]=s,[o]=a.split("_");o===n&&e.push(i)}return e}function Cg(n){let{kernelName:t,backendName:e}=n,r=$g(t,e);$c.has(r)&&Br(`The kernel '${t}' for backend '${e}' is already registered`),$c.set(r,n)}function nk(n){let{kernelName:t}=n;Qp.has(t)&&Ct().getBool("DEBUG")&&Br(`Overriding the gradient for '${t}'`),Qp.set(t,n)}function $g(n,t){return`${t}_${n}`}var Eg=__webpack_require__(720);let ei=__webpack_require__.n(Eg)()||Eg;function Ec(n){return ei.fromString(n,!0,16)}let _g=Ec("c3a5c85c97cb3127"),ni=Ec("b492b66fbe98f273"),rr=Ec("9ae16a3b2f90404f");function ed(n){return n.xor(n.shru(47))}function Ag(n,t,e){let r=n.slice(t,t+e);return ei.fromBytes(Array.from(r),!0,!0)}function rn(n,t){return Ag(n,t,8)}function Rg(n,t){return Ag(n,t,4)}function Rn(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function pa(n,t,e=Ec("9ddfea08eb382d69")){let r=n.xor(t).mul(e);r=r.xor(r.shru(47));let s=t.xor(r).mul(e);return s=s.xor(s.shru(47)),s=s.mul(e),s}function _c(n,t,e,r){return function(s,a,i,o,l,c){l=l.add(s),c=Rn(c.add(l).add(o),21);let u=l;return l=(l=l.add(a)).add(i),c=c.add(Rn(l,44)),[l.add(o),c.add(u)]}(rn(n,t),rn(n,t+8),rn(n,t+16),rn(n,t+24),e,r)}function rk(n,t=n.length){let e=ei.fromNumber(81,!0);if(t<=32)return t<=16?function(p,d=p.length){if(d>=8){let f=rr.add(2*d),m=rn(p,0).add(rr),g=rn(p,d-8);return pa(Rn(g,37).mul(f).add(m),Rn(m,25).add(g).mul(f),f)}if(d>=4){let f=rr.add(2*d);return pa(Rg(p,0).shl(3).add(d),Rg(p,d-4),f)}if(d>0){let f=p[0]+(p[d>>1]<<8),m=d+(p[d-1]<<2);return ed(rr.mul(f).xor(_g.mul(m))).mul(rr)}return rr}(n,t):function(p,d=p.length){let f=rr.add(2*d),m=rn(p,0).mul(ni),g=rn(p,8),y=rn(p,d-8).mul(f),b=rn(p,d-16).mul(rr);return pa(Rn(m.add(g),43).add(Rn(y,30)).add(b),m.add(Rn(g.add(rr),18)).add(y),f)}(n,t);if(t<=64)return function(p,d=p.length){let f=rr.add(2*d),m=rn(p,0).mul(rr),g=rn(p,8),y=rn(p,d-8).mul(f),b=rn(p,d-16).mul(rr),$=Rn(m.add(g),43).add(Rn(y,30)).add(b),_=pa($,m.add(Rn(g.add(rr),18)).add(y),f),M=rn(p,16).mul(f),Y=rn(p,24),tt=$.add(rn(p,d-32)).mul(f),Q=_.add(rn(p,d-24)).mul(f);return pa(Rn(M.add(Y),43).add(Rn(tt,30)).add(Q),M.add(Rn(Y.add(m),18)).add(tt),f)}(n,t);let r=e,s=e.mul(ni).add(113),a=ed(s.mul(rr).add(113)).mul(rr),i=[ei.UZERO,ei.UZERO],o=[ei.UZERO,ei.UZERO];r=r.mul(rr).add(rn(n,0));let l=0,c=64*(t-1>>6),u=c+(t-1&63)-63;do r=Rn(r.add(s).add(i[0]).add(rn(n,l+8)),37).mul(ni),s=Rn(s.add(i[1]).add(rn(n,l+48)),42).mul(ni),r=r.xor(o[1]),s=s.add(i[0]).add(rn(n,l+40)),a=Rn(a.add(o[0]),33).mul(ni),i=_c(n,l,i[1].mul(ni),r.add(o[0])),o=_c(n,l+32,a.add(o[1]),s.add(rn(n,l+16))),[a,r]=[r,a],l+=64;while(l!==c);let h=ni.add(a.and(255).shl(1));return l=u,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Rn(r.add(s).add(i[0]).add(rn(n,l+8)),37).mul(h),s=Rn(s.add(i[1]).add(rn(n,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(rn(n,l+40))),a=Rn(a.add(o[0]),33).mul(h),i=_c(n,l,i[1].mul(h),r.add(o[0])),o=_c(n,l+32,a.add(o[1]),s.add(rn(n,l+16))),[a,r]=[r,a],pa(pa(i[0],o[0],h).add(ed(s).mul(_g)).add(a),pa(i[1],o[1],h).add(r),h)}function da(n,t){return t==="string"?fa(n):ri([n],t)}function ri(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=le(n)),Ct().getBool("DEBUG")&&function(e,r){for(let s=0;s<e.length;s++){let a=e[s];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${r} being uploaded contains ${a}.`)}}(n,t),function(e,r){return e instanceof Float32Array&&r==="float32"||e instanceof Int32Array&&r==="int32"||e instanceof Uint8Array&&r==="bool"}(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){let e=new Uint8Array(n.length);for(let r=0;r<e.length;++r)Math.round(n[r])!==0&&(e[r]=1);return e}throw new Error(`Unknown data type ${t}`)}function Jn(){return Ct().platform.now()}function fa(n,t="utf-8"){return t=t||"utf-8",Ct().platform.encode(n,t)}function ma(n,t="utf-8"){return t=t||"utf-8",Ct().platform.decode(n,t)}class sk{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new ik)}profileKernel(t,e,r){let s,a=()=>{s=r()},i,o=Jn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(let l of s)l.dataSync();i=Promise.resolve({kernelMs:Jn()-o})}if(Ct().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let c=s[l];c.data().then(u=>{ak(u,c.dtype,t)})}return{kernelName:t,outputs:s,inputs:e,timeMs:i.then(l=>l.kernelMs),extraInfo:i.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:r,timeMs:s,inputs:a,extraInfo:i}=t;r.forEach(o=>{Promise.all([o.data(),s,i]).then(l=>{this.logger.logKernelProfile(e,o,l[0],l[1],a,l[2])})})}}function ak(n,t,e){if(t!=="float32")return!1;for(let r=0;r<n.length;r++){let s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${e}'`),!0}return!1}class ik{logKernelProfile(t,e,r,s,a,i){let o=typeof s=="number"?Wn(`${s}ms`,9):s.error,l=Wn(t,25),c=e.rank,u=e.size,h=Wn(e.shape.toString(),14),p="";for(let d in a){let f=a[d];if(f!=null){let m=f.shape||e.shape,g=m.length;p+=`${d}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${o}	%c${c}D ${h}	%c${u}	%c${p}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function ok(n,t,e,r){let s=Yt(t),a=function(c,u,h,p){let d=St(u),f=p[p.length-1],m=new Array(f).fill(0),g=u.length,y=h==="complex64"?Lu(c):c;if(g>1)for(let b=0;b<d/f;b++){let $=b*f;for(let _=0;_<f;_++)m[_]=Math.max(m[_],Mu(y[$+_],0,h).length)}return m}(n,t,e,s),i=t.length,o=Ac(n,t,e,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(c=>"    "+c).join(`
`)),l.join(`
`)}function Mu(n,t,e){let r;return r=Array.isArray(n)?`${parseFloat(n[0].toFixed(7))} + ${parseFloat(n[1].toFixed(7))}j`:gr(n)?`'${n}'`:e==="bool"?Fg(n):parseFloat(n.toFixed(7)).toString(),Wn(r,t)}function Fg(n){return n===0?"false":"true"}function Ac(n,t,e,r,s,a=!0){let i=e==="complex64"?2:1,o=t[0],l=t.length;if(l===0)return e==="complex64"?[Mu(Lu(n)[0],0,e)]:e==="bool"?[Fg(n[0])]:[n[0].toString()];if(l===1){if(o>20){let m=3*i,g=Array.from(n.slice(0,m)),y=Array.from(n.slice((o-3)*i,o*i));return e==="complex64"&&(g=Lu(g),y=Lu(y)),["["+g.map((b,$)=>Mu(b,s[$],e)).join(", ")+", ..., "+y.map((b,$)=>Mu(b,s[o-3+$],e)).join(", ")+"]"]}return["["+(e==="complex64"?Lu(n):Array.from(n)).map((m,g)=>Mu(m,s[g],e)).join(", ")+"]"]}let c=t.slice(1),u=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let m=0;m<3;m++){let g=m*h,y=g+h;p.push(...Ac(n.slice(g,y),c,e,u,s,!1))}p.push("...");for(let m=o-3;m<o;m++){let g=m*h,y=g+h;p.push(...Ac(n.slice(g,y),c,e,u,s,m===o-1))}}else for(let m=0;m<o;m++){let g=m*h,y=g+h;p.push(...Ac(n.slice(g,y),c,e,u,s,m===o-1))}let d=l===2?",":"";p[0]="["+p[0]+d;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+d;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Lu(n){let t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}class Fn{constructor(t,e,r){if(this.dtype=e,this.shape=t.slice(),this.size=St(t),r!=null){let s=r.length;z(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||Xe(e,this.size),this.strides=Yt(t)}set(t,...e){e.length===0&&(e=[0]),z(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let r=this.locToIndex(e);this.values[r]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let s of t){if(s<0||s>=this.shape[e]){let a=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(a)}e++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let r=0;r<t.length-1;++r)e+=this.strides[r]*t[r];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let r=0;r<e.length-1;++r)e[r]=Math.floor(t/this.strides[r]),t-=e[r]*this.strides[r];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return ps().makeTensor(this.values,this.shape,this.dtype)}}let ps=null,no=null,uk=null;class Me{constructor(t,e,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=St(t),this.strides=Yt(t),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let t=await this.data();return no.buffer(this.shape,this.dtype,t)}bufferSync(){return no.buffer(this.shape,this.dtype,this.dataSync())}async array(){let t=await this.data();return tn(this.shape,t,this.dtype==="complex64")}arraySync(){return tn(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let t=ps().read(this.dataId);if(this.dtype==="string"){let e=await t;try{return e.map(r=>ma(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),ps().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=ps().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>ma(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();let t=await ps().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(ps().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return no.print(this,t)}clone(){return this.throwIfDisposed(),no.clone(this)}toString(t=!1){return ok(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),no.cast(this,t)}variable(t=!0,e,r){return this.throwIfDisposed(),ps().makeVariable(this,t,e,r)}}function Rt(){return Xo("Tensor",()=>Me)}Object.defineProperty(Me,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null}),Rt();class Rc extends Me{constructor(t,e,r,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=r}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!se(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);ps().disposeTensor(this),this.dataId=t.dataId,ps().incRef(this,null)}dispose(){ps().disposeVariable(this),this.isDisposedInternal=!0}}var Dg,nd,rd,sd,ad;Object.defineProperty(Rc,Symbol.hasInstance,{value:n=>n instanceof Me&&n.assign!=null&&n.assign instanceof Function}),function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"}(Dg||(Dg={})),function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"}(nd||(nd={})),function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"}(rd||(rd={})),function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"}(sd||(sd={})),function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"}(ad||(ad={}));let lk={float32:sd,int32:nd,bool:rd,complex64:ad};function Er(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return lk[n][t]}function id(n){return Er(n,"int32")}function yn(n,t){if(n.dtype===t.dtype)return[n,t];let e=Er(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function od(n,t){return t.some(e=>e.id===n.id)}function ga(n){let t=[];return Og(n,t,new Set),t}function Og(n,t,e){if(n==null)return;if(n instanceof Me)return void t.push(n);if(r=n,!Array.isArray(r)&&typeof r!="object")return;var r;let s=n;for(let a in s){let i=s[a];e.has(i)||(e.add(i),Og(i,t,e))}}function ud(n){return n.kernelName!=null}class Mg{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}}class ro{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Mg}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let r=t[e];if(await this.initializeBackend(r).success)return void await this.setBackend(r)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{let{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,r=1){return t in this.registryFactory?(Br(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:r},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:r}=this.initializeBackend(t);if(!(r?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new sk(this.backendInstance),!0}setupRegisteredKernels(){Tg(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Tg(t).forEach(e=>{e.disposeFunc!=null&&e.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let r=e.factory();if(!r||r instanceof $t||typeof r.then!="function")return this.registry[t]=r,{success:!0,asyncInit:!1};{let s=++this.pendingBackendInitId,a=r.then(i=>!(s<this.pendingBackendInitId)&&(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Br(`Initialization of backend ${t} failed`),Br(i.stack||i.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(r){return Br(`Initialization of backend ${t} failed`),Br(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let r=t[e],{success:s,asyncInit:a}=this.initializeBackend(r);if(a||s)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let r=this.state.tensorInfo.get(e),s=r.backend,a=this.readSync(e),i=s.refCount(e);s.disposeData(e,!0),r.backend=t,t.move(e,a,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let r,s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,r){t();try{let s=r();return e(),s}catch(s){throw e(),s}}nextTensorId(){return ro.nextTensorId++}nextVariableId(){return ro.nextVariableId++}clone(t){let e=dt.runKernel(ou,{x:t}),r={x:t};return this.addTapeNode(this.state.activeScope.name,r,[e],s=>({x:()=>{let a={x:s},i={dtype:"float32"};return dt.runKernel(Ya,a,i)}}),[],{}),e}runKernel(t,e,r){if(this.backendName==null&&this.backend,td(t,this.backendName)==null)throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,r){let s=this.backend.numDataIds(),a=0;r.forEach(l=>{a+=l.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-e-a-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let e,r=[],s=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors,o,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),this.backendName==null&&this.backend;let c=ud(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ud(t)){let{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;let y=td(f,this.backendName);z(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),o=()=>{let b=this.backend.numDataIds();l=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});let $=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,$);let _=$.map(M=>M.rank!=null?M:this.makeTensorFromTensorInfo(M));if(s){let M=this.getTensorsForGradient(f,m,_);r=this.saveTensorsForBackwardMode(M)}return _}}else{let{forwardFunc:f}=t,m=g=>{s&&(r=g.map(y=>this.keep(this.clone(y))))};o=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));let y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,y),y}}let{inputs:u,attrs:h}=t,p=ud(t)?null:t.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=o()}),s&&this.addTapeNode(c,u,e,p,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(t,e,r){let s=Sg(t);if(s!=null){let a=s.inputsToSave||[],i=s.outputsToSave||[],o;s.saveAllInputs?(z(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(e).map(c=>e[c])):o=a.map(c=>e[c]);let l=r.filter((c,u)=>i[u]);return o.concat(l)}return[]}makeTensor(t,e,r,s){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let a=t;r==="string"&&gr(t[0])&&(a=t.map(l=>fa(l)));let i=s.write(a,e,r),o=new Me(e,r,i,this.nextTensorId());if(this.trackTensor(o,s),r==="string"){let l=this.state.tensorInfo.get(i),c=function(u){if(u==null)return 0;let h=0;return u.forEach(p=>h+=p.length),h}(a);this.state.numBytes+=c-l.bytes,l.bytes=c}return o}makeTensorFromDataId(t,e,r,s){let a={dataId:t,shape:e,dtype:r=r||"float32"};return this.makeTensorFromTensorInfo(a,s)}makeTensorFromTensorInfo(t,e){let{dataId:r,shape:s,dtype:a}=t,i=new Me(s,a,r,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==t.dtype&&(t=t.cast(s));let a=new Rc(t,e,r,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let r=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(r=t.size*Yr(t.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:r})),t instanceof Rc||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let r=t.size*Yr(t.dtype);this.state.numBytes-=r}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let e=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-r;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,r,s,a,i){let o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:r,saved:a},l=Sg(t);l!=null&&(s=l.gradFunc),s!=null&&(o.gradient=c=>(c=c.map((u,h)=>{if(u==null){let p=r[h],d=nn(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return u}),s(c.length>1?c:c[0],a,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=ga(t),r=new Set(e.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){let i=this.state.activeScope.track[a];i.kept||r.has(i.id)||i.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(a=>{a.kept||a.scopeId!==s.id||this.track(a)})}gradients(t,e,r,s=!1){if(z(e.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));z(a instanceof Me,()=>"The result y returned by f() must be a tensor.");let i=function(o,l,c){let u={},h={};for(let m=0;m<l.length;m++)u[l[m].id]=!0;for(let m=0;m<o.length;m++){let g=o[m],y=g.inputs;for(let b in y){let $=y[b],_=!1;for(let M=0;M<l.length;M++)if(u[$.id]){g.outputs.forEach(Y=>u[Y.id]=!0),_=!0,h[g.id]=!0;break}if(_)break}}let p={};p[c.id]=!0;let d={};for(let m=o.length-1;m>=0;m--){let g=o[m],y=g.inputs;for(let b=0;b<g.outputs.length;b++)if(p[g.outputs[b].id]){for(let $ in y)p[y[$].id]=!0,d[g.id]=!0;break}}let f=[];for(let m=0;m<o.length;m++){let g=o[m];if(h[g.id]&&d[g.id]){let y={};for(let $ in g.inputs){let _=g.inputs[$];u[_.id]&&(y[$]=_)}let b=Object.assign({},g);b.inputs=y,b.outputs=g.outputs,f.push(b)}}return f}(this.state.activeTape,e,a);if(!s&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[a.id]=r??function(c){let u=en(St(c),"float32");return dt.makeTensor(u,c,"float32")}(a.shape),function(c,u,h,p){for(let d=u.length-1;d>=0;d--){let f=u[d],m=[];if(f.outputs.forEach(y=>{let b=c[y.id];b!=null?m.push(b):m.push(null)}),f.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${f.kernelName}.`);let g=f.gradient(m);for(let y in f.inputs){if(!(y in g))throw new Error(`Cannot backprop through input ${y}. Available gradients found: ${Object.keys(g)}.`);let b=h(()=>g[y]());if(b.dtype!=="float32")throw new Error(`Error in gradient for op ${f.kernelName}. The gradient of input ${y} must have 'float32' dtype, but has '${b.dtype}'`);let $=f.inputs[y];if(!se(b.shape,$.shape))throw new Error(`Error in gradient for op ${f.kernelName}. The gradient of input '${y}' has shape '${b.shape}', which does not match the shape of the input '${$.shape}'`);if(c[$.id]==null)c[$.id]=b;else{let _=c[$.id];c[$.id]=p(_,b),_.dispose()}}}}(o,i,c=>this.tidy(c),ck);let l=e.map(c=>o[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let u of c.saved)u.dispose()}),this.state.activeTape=null),{value:a,grads:l}})}customGrad(t){return z(nr(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let r;z(e.every(a=>a instanceof Me),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s={};return e.forEach((a,i)=>{s[i]=a}),this.runKernelFunc({forwardFunc:(a,i)=>(r=t(...e,i),z(r.value instanceof Me,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),z(nr(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(a,i)=>{let o=r.gradFunc(a,i),l=Array.isArray(o)?o:[o];z(l.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),z(l.every(u=>u instanceof Me),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return l.forEach((u,h)=>{c[h]=()=>u}),c},inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){let e=Jn(),r=await this.backend.time(t);return r.wallMs=Jn()-e,r}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Mg;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Lg(){let n=Gl();if(n._tfengine==null){let e=new Vl(n);n._tfengine=new ro(e)}var t;return t=n._tfengine.ENV,Mi=t,ps=()=>n._tfengine,n._tfengine}ro.nextTensorId=0,ro.nextVariableId=0;let dt=Lg();function ck(n,t){let e={a:n,b:t};return dt.runKernel(yr,e)}let zg;function Pg(n){if(zg!==void 0)return zg;if(n||typeof navigator<"u"&&navigator!=null){if(n||(n=navigator),n.product==="ReactNative")return!0;let t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Bg(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}let _r=Ct();function ya(n,t){let e=n;if(Vn(n))return t==="string"?[]:[n.length];if(!Array.isArray(n))return[];let r=[];for(;Array.isArray(e)||Vn(e)&&t!=="string";)r.push(e.length),e=e[0];return Array.isArray(n)&&Ct().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Wg(n,r,[]),r}function Wg(n,t,e){if(e=e||[],!Array.isArray(n)&&!Vn(n))return void z(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);z(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),z(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);let r=t.slice(1);for(let s=0;s<n.length;++s)Wg(n[s],r,e.concat(s))}function Vg(n,t,e,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${r}' must be ${n} tensor, but got ${t} tensor`)}}function Z(n,t,e,r="numeric"){if(n instanceof Me)return Vg(r,n.dtype,t,e),n;let s=Un(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Vg(r,s,t,e),n==null||!Vn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){let o=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${o}'`)}let a=ya(n,s);Vn(n)||Array.isArray(n)||(n=[n]);let i=s!=="string"?ri(n,s):le(n,[],!0);return dt.makeTensor(i,a,s)}function Fc(n,t,e,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((s,a)=>Z(s,`${t}[${a}]`,e,r))}_r.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),_r.registerFlag("IS_BROWSER",()=>Bg()),_r.registerFlag("IS_NODE",()=>typeof process<"u"&&process.versions!==void 0&&process.versions.node!==void 0),_r.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),_r.registerFlag("PROD",()=>!1),_r.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>_r.getBool("DEBUG")),_r.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),_r.registerFlag("IS_TEST",()=>!1),_r.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),_r.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),_r.registerFlag("ENGINE_COMPILE_ONLY",()=>!1),_r.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),_r.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);let Ug="__op";function ct(n){let t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],r=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e+=Ug;let s=(...a)=>{dt.startScope(e);try{let i=r(...a);return Bs(i)&&console.error("Cannot return a Promise inside of tidy."),dt.endScope(i),i}catch(i){throw dt.endScope(null),i}};return Object.defineProperty(s,"name",{value:e,configurable:!0}),s}let ba=ct({complex_:function(n,t){let e=Z(n,"real","complex"),r=Z(t,"imag","complex");Jt(e.shape,r.shape,`real and imag shapes, ${e.shape} and ${r.shape}, must match in call to tf.complex().`);let s={real:e,imag:r};return dt.runKernel(tu,s)}});function xa(n,t,e,r){if(r==null&&(r=Un(n)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Vn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){qo(t);let s=St(t),a=St(e);z(s===a,()=>`Based on the provided shape, [${t}], the tensor should have ${s} values but has ${a}`);for(let i=0;i<e.length;++i){let o=e[i],l=i!==e.length-1||o!==St(t.slice(i));z(e[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return Vn(n)||Array.isArray(n)||(n=[n]),t=t||e,n=r!=="string"?ri(n,r):le(n,[],!0),dt.makeTensor(n,t,r)}function ds(n,t,e){return xa(n,t,ya(n,e),e)}let ld={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function cd(n,t){let e=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){let i=s[a],o=Array.isArray(n)?n[a].tensor:n[i];if(o.dtype!=="float32"&&o.dtype!=="int32"&&o.dtype!=="bool"&&o.dtype!=="string"&&o.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if(o.dtype==="string"){let c=new Promise(async u=>{let h=await o.bytes(),p=h.reduce((m,g)=>m+g.length,0)+4*h.length,d=new Uint8Array(p),f=0;for(let m=0;m<h.length;m++){let g=h[m],y=new Uint8Array(new Uint32Array([g.length]).buffer);d.set(y,f),f+=4,d.set(g,f),f+=g.length}u(d)});r.push(c)}else r.push(o.data());t!=null&&(l.group=t),e.push(l)}return{data:hk(await Promise.all(r)),specs:e}}function Gg(n,t){let e={},r,s=0;for(let a of t){let i=a.name,o=a.dtype,l=a.shape,c=St(l),u;if("quantization"in a){let h=a.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h)||!("scale"in h))throw new Error(`Weight ${a.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else{if(h.dtype!=="float16")throw new Error(`Weight ${a.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if(o!=="float32")throw new Error(`Weight ${a.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${o}.`)}let p=ld[h.dtype],d=n.slice(s,s+c*p),f=h.dtype==="uint8"?new Uint8Array(d):new Uint16Array(d);if(o==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*h.scale+h.min}}else{if(h.dtype!=="float16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);r===void 0&&(r=pk()),u=r(f)}else{if(o!=="int32")throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*h.scale+h.min)}}s+=c*p}else if(o==="string"){let h=St(a.shape);u=[];for(let p=0;p<h;p++){let d=new Uint32Array(n.slice(s,s+4))[0];s+=4;let f=new Uint8Array(n.slice(s,s+d));u.push(f),s+=d}}else{let h=ld[o],p=n.slice(s,s+c*h);if(o==="float32")u=new Float32Array(p);else if(o==="int32")u=new Int32Array(p);else if(o==="bool")u=new Uint8Array(p);else{if(o!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{u=new Float32Array(p);let d=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<d.length;y++)d[y]=u[2*y],f[y]=u[2*y+1];let m=ds(d,l,"float32"),g=ds(f,l,"float32");e[i]=ba(m,g),m.dispose(),g.dispose()}}s+=c*h}o!=="complex64"&&(e[i]=ds(u,l,o))}return e}function hk(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0,e=[];n.forEach(a=>{if(t+=a.byteLength,e.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let r=new Uint8Array(t),s=0;return e.forEach(a=>{r.set(new Uint8Array(a.buffer),s),s+=a.byteLength}),r.buffer}let hd=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Hg(n){return hd?Buffer.byteLength(n):new Blob([n]).size}function Dc(n){if(n.length===1)return n[0];let t=0;n.forEach(s=>{t+=s.byteLength});let e=new Uint8Array(t),r=0;return n.forEach(s=>{e.set(new Uint8Array(s),r),r+=s.byteLength}),e.buffer}function jg(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);let t=n.split("/");return t[t.length-1]}function qg(n,t){let e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function Kg(n,t,e){let r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=e}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),r}async function pd(n,t){let e,r;return n.weightsManifest!=null&&([e,r]=await t(n.weightsManifest)),Kg(n,e,r)}function zu(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Hg(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Hg(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function Xg(n){let t=[];for(let e of n)t.push(...e.weights);return t}function pk(){let n=function(){let r=a=>{let i=a<<13,o=0;for(;(8388608&i)==0;)o-=8388608,i<<=1;return i&=-8388609,o+=947912704,i|o},s=new Uint32Array(2048);s[0]=0;for(let a=1;a<1024;a++)s[a]=r(a);for(let a=1024;a<2048;a++)s[a]=939524096+(a-1024<<13);return s}(),t=function(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let s=1;s<31;s++)r[s]=s<<23;for(let s=33;s<63;s++)r[s]=2147483648+(s-32<<23);return r}(),e=function(){let r=new Uint32Array(64);for(let s=0;s<64;s++)r[s]=1024;return r[0]=r[32]=0,r}();return r=>{let s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){let o=r[i],l=n[e[o>>10]+(1023&o)]+t[o>>10];a[i]=l}return new Float32Array(s)}}class fn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return fn.instance==null&&(fn.instance=new fn),fn.instance}static registerSaveRouter(t){fn.getInstance().saveRouters.push(t)}static registerLoadRouter(t){fn.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return fn.getHandlers(t,"save")}static getLoadHandlers(t,e){return fn.getHandlers(t,"load",e)}static getHandlers(t,e,r){let s=[];return(e==="load"?fn.getInstance().loadRouters:fn.getInstance().saveRouters).forEach(a=>{let i=a(t,r);i!==null&&s.push(i)}),s}}let dk=n=>fn.registerSaveRouter(n),fk=n=>fn.registerLoadRouter(n),Yg=n=>fn.getSaveHandlers(n),mk=(n,t)=>fn.getLoadHandlers(n,t),dd="tensorflowjs",si="models_store",va="model_info_store";function Zg(){if(!Ct().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function fd(n){let t=n.result;t.createObjectStore(si,{keyPath:"modelPath"}),t.createObjectStore(va,{keyPath:"modelPath"})}class ai{constructor(t){if(this.indexedDB=Zg(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((r,s)=>{let a=this.indexedDB.open(dd,1);a.onupgradeneeded=()=>fd(a),a.onsuccess=()=>{let i=a.result;if(e==null){let o=i.transaction(si,"readonly"),l=o.objectStore(si).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=c=>(i.close(),s(l.error)),o.oncomplete=()=>i.close()}else{let o=zu(e),l=i.transaction(va,"readwrite"),c=l.objectStore(va),u=c.put({modelPath:this.modelPath,modelArtifactsInfo:o}),h;u.onsuccess=()=>{h=i.transaction(si,"readwrite");let p=h.objectStore(si).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:o});p.onsuccess=()=>r({modelArtifactsInfo:o}),p.onerror=d=>{c=l.objectStore(va);let f=c.delete(this.modelPath);f.onsuccess=()=>(i.close(),s(p.error)),f.onerror=m=>(i.close(),s(p.error))}},u.onerror=p=>(i.close(),s(u.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},a.onerror=i=>s(a.error)})}}ai.URL_SCHEME="indexeddb://";let Jg=n=>{return Ct().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ai.URL_SCHEME)?(t=n.slice(ai.URL_SCHEME.length),new ai(t)):null;var t};fn.registerSaveRouter(Jg),fn.registerLoadRouter(Jg);class gk{constructor(){this.indexedDB=Zg()}async listModels(){return new Promise((t,e)=>{let r=this.indexedDB.open(dd,1);r.onupgradeneeded=()=>fd(r),r.onsuccess=()=>{let s=r.result,a=s.transaction(va,"readonly"),i=a.objectStore(va).getAll();i.onsuccess=()=>{let o={};for(let l of i.result)o[l.modelPath]=l.modelArtifactsInfo;t(o)},i.onerror=o=>(s.close(),e(i.error)),a.oncomplete=()=>s.close()},r.onerror=s=>e(r.error)})}async removeModel(t){var e;return t=(e=t).startsWith(ai.URL_SCHEME)?e.slice(ai.URL_SCHEME.length):e,new Promise((r,s)=>{let a=this.indexedDB.open(dd,1);a.onupgradeneeded=()=>fd(a),a.onsuccess=()=>{let i=a.result,o=i.transaction(va,"readwrite"),l=o.objectStore(va),c=l.get(t),u;c.onsuccess=()=>{if(c.result==null)return i.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let h=l.delete(t),p=()=>{u=i.transaction(si,"readwrite");let d=u.objectStore(si).delete(t);d.onsuccess=()=>r(c.result.modelArtifactsInfo),d.onerror=f=>s(c.error)};h.onsuccess=p,h.onerror=d=>(p(),i.close(),s(c.error))}},c.onerror=h=>(i.close(),s(c.error)),o.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},a.onerror=i=>s(a.error)})}}let Ws="/",so="tensorflowjs_models",Qg="info",yk="model_topology",bk="weight_specs",xk="weight_data",vk="model_metadata";function t0(n){return{info:[so,n,Qg].join(Ws),topology:[so,n,yk].join(Ws),weightSpecs:[so,n,bk].join(Ws),weightData:[so,n,xk].join(Ws),modelMetadata:[so,n,vk].join(Ws)}}function e0(n){for(let t of Object.values(n))window.localStorage.removeItem(t)}function wk(n){let t=n.split(Ws);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Ws)}class ii{constructor(t){if(!Ct().getBool("IS_BROWSER")||typeof window>"u"||window.localStorage===void 0)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=t0(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),s=zu(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(i){if(hd)return Buffer.from(i).toString("base64");let o=new Uint8Array(i),l="";for(let c=0,u=o.length;c<u;c++)l+=String.fromCharCode(o[c]);return btoa(l)}(t.weightData));let a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw e0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=r;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;let a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){let o=JSON.parse(a);e.format=o.format,e.generatedBy=o.generatedBy,e.convertedBy=o.convertedBy,o.signature!=null&&(e.signature=o.signature),o.userDefinedMetadata!=null&&(e.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(e.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(e.trainingConfig=o.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(o){if(hd){let u=Buffer.from(o,"base64");return u.buffer.slice(u.byteOffset,u.byteOffset+u.byteLength)}let l=atob(o),c=new Uint8Array(l.length);for(let u=0;u<l.length;++u)c.set([l.charCodeAt(u)],u);return c.buffer}(i),e}}ii.URL_SCHEME="localstorage://";let n0=n=>{return Ct().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ii.URL_SCHEME)?(t=n.slice(ii.URL_SCHEME.length),new ii(t)):null;var t};fn.registerSaveRouter(n0),fn.registerLoadRouter(n0);class kk{constructor(){z(Ct().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),z(typeof window>"u"||window.localStorage!==void 0,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let t={},e=so+Ws,r=Ws+Qg;for(let s=0;s<this.LS.length;++s){let a=this.LS.key(s);a.startsWith(e)&&a.endsWith(r)&&(t[wk(a)]=JSON.parse(this.LS.getItem(a)))}return t}async removeModel(t){var e;let r=t0(t=(e=t).startsWith(ii.URL_SCHEME)?e.slice(ii.URL_SCHEME.length):e);if(this.LS.getItem(r.info)==null)throw new Error(`Cannot find model at path '${t}'`);let s=JSON.parse(this.LS.getItem(r.info));return e0(r),s}}let ao="://";class sr{constructor(){this.managers={}}static getInstance(){return sr.instance==null&&(sr.instance=new sr),sr.instance}static registerManager(t,e){z(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(ao)&&(t=t.slice(0,t.indexOf(ao))),z(t.length>0,()=>"scheme must not be an empty string.");let r=sr.getInstance();z(r.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=e}static getManager(t){let e=sr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(sr.getInstance().managers)}}function Oc(n){if(n.indexOf(ao)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${sr.getSchemes().join(",")}`);return{scheme:n.split(ao)[0],path:n.split(ao)[1]}}async function r0(n,t,e=!1){z(n!==t,()=>`Old path and new path are the same: '${n}'`);let r=fn.getLoadHandlers(n);z(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),z(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);let s=r[0],a=fn.getSaveHandlers(t);z(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),z(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=a[0],o=Oc(n).scheme,l=Oc(n).path,c=o===Oc(n).scheme,u=await s.load();e&&c&&await sr.getManager(o).removeModel(l);let h=await i.save(u);return e&&!c&&await sr.getManager(o).removeModel(l),h.modelArtifactsInfo}async function Ik(){let n=sr.getSchemes(),t={};for(let e of n){let r=await sr.getManager(e).listModels();for(let s in r)t[e+ao+s]=r[s]}return t}async function Nk(n){let t=Oc(n);return sr.getManager(t.scheme).removeModel(t.path)}async function Sk(n,t){return r0(n,t,!1)}async function Tk(n,t){return r0(n,t,!0)}class Ck{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){window&&Ct().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{r.source===window&&r.data.name===this.messageName&&(r.stopPropagation(),(0,this.functionRefs[r.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(t,e)}}if(Ct().get("IS_BROWSER")){Ct().setPlatform("browser",new Ck);try{sr.registerManager(ii.URL_SCHEME,new kk)}catch{}try{sr.registerManager(ai.URL_SCHEME,new gk)}catch{}}let $k=()=>__webpack_require__(410),md;class Ek{constructor(){this.util=__webpack_require__(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return Ct().global.fetch!=null?Ct().global.fetch(t,e):(md==null&&(md=$k()),md(t,e))}now(){let t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}function Fe(n,t="float32",e){return t=t||"float32",qo(n),new Fn(n,t,e)}Ct().get("IS_NODE")&&!Ct().get("IS_BROWSER")&&Ct().setPlatform("node",new Ek);let ee=ct({cast_:function(n,t){let e=Z(n,"x","cast");if(!function(a){return a==="bool"||a==="complex64"||a==="float32"||a==="int32"||a==="string"}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:e},s={dtype:t};return dt.runKernel(Ya,r,s)}}),Vs=ct({clone_:function(n){let t={x:Z(n,"x","clone","string_or_numeric")};return dt.runKernel(ou,t)}});function s0(n,t=!1){console.log(n.toString(t))}Lg(),no={buffer:Fe,cast:ee,clone:Vs,print:s0};function a0(n){return new Promise(t=>setTimeout(t)).then(n)}class oi{constructor(t){if(!Ct().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(oi.URL_SCHEME)&&(t=t.slice(oi.URL_SCHEME.length)),t!=null&&t.length!==0||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let r=qg(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await a0(()=>a.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=e,await a0(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:zu(t)}}}}oi.URL_SCHEME="downloads://";class _k{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{let r=new FileReader;r.onload=s=>{let a=JSON.parse(s.target.result),i=a.modelTopology;if(i==null)return void e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(a.weightsManifest==null)return void e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(this.weightsFiles.length===0)return void t({modelTopology:i});let o=pd(a,l=>this.loadWeights(l));t(o)},r.onerror=s=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(t){let e=[],r=[];for(let i of t)e.push(...i.weights),r.push(...i.paths);let s=this.checkManifestAndWeightFiles(t),a=r.map(i=>this.loadWeightsFile(i,s[i]));return Promise.all(a).then(i=>[e,Dc(i)])}loadWeightsFile(t,e){return new Promise((r,s)=>{let a=new FileReader;a.onload=i=>{let o=i.target.result;r(o)},a.onerror=i=>s(`Failed to weights data from file of path '${t}'.`),a.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],r=this.weightsFiles.map(a=>jg(a.name)),s={};for(let a of t)a.paths.forEach(i=>{let o=jg(i);if(e.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(e.push(o),r.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[i]=this.weightsFiles[r.indexOf(o)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function Ak(n){return new _k(n)}function i0(n,t,e,r){(function(a){z(a!=null&&Array.isArray(a)&&a.length>0,()=>"promises must be a none empty array")})(n),function(a,i){z(a>=0&&a<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${a}`),z(i>=0&&i<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`),z(i>=a,()=>`startFraction must be no more than endFraction, but got startFraction ${a} and endFraction ${i}`)}(e=e??0,r=r??1);let s=0;return Promise.all(n.map(a=>(a.then(i=>{let o=e+ ++s/n.length*(r-e);return t(o),i}),a)))}async function o0(n,t){t==null&&(t={});let e=t.fetchFunc==null?Ct().platform.fetch:t.fetchFunc,r=n.map(a=>e(a,t.requestInit,{isBinary:!0})),s=(t.onProgress==null?await Promise.all(r):await i0(r,t.onProgress,0,.5)).map(a=>a.arrayBuffer());return t.onProgress==null?await Promise.all(s):await i0(s,t.onProgress,.5,1)}async function Rk(n,t="",e,r){return u0(s=>o0(s,{requestInit:r}))(n,t,e)}function u0(n){return async(t,e="",r)=>{let s=t.map(()=>!1),a={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((d,f)=>{let m=0;d.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=ld[y]*St(g.shape),$=()=>{s[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:b})};r!=null?r.forEach((_,M)=>{_===g.name&&($(),i[M]=!0)}):$(),o.push(g.name),m+=b})}),!i.every(d=>d)){let d=r.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=s.reduce((d,f,m)=>(f&&d.push(m),d),[]),c=[];l.forEach(d=>{t[d].paths.forEach(f=>{let m=e+(e.endsWith("/")?"":"/")+f;c.push(m)})});let u=await n(c),h={},p=0;return l.forEach(d=>{let f=t[d].paths.length,m=0;for(let $=0;$<f;$++)m+=u[p+$].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),b=0;for(let $=0;$<f;$++){let _=new Uint8Array(u[p+$]);y.set(_,b),b+=_.byteLength}a[d].forEach($=>{let _=Gg(g.slice($.groupOffset,$.groupOffset+$.sizeBytes),[$.manifestEntry]);for(let M in _)h[M]=_[M]}),p+=f}),h}}fn.registerSaveRouter(n=>Ct().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(oi.URL_SCHEME)?function(t="model"){return new oi(t)}(n.slice(oi.URL_SCHEME.length)):null);class gd{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(z(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Ct().platform.fetch,z(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&z(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let r=qg(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");let s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:zu(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}let r=e.modelTopology,s=e.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return pd(e,a=>this.loadWeights(a))}async loadWeights(t){let e=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=function(c){let u=c.lastIndexOf("/"),h=c.lastIndexOf("?"),p=c.substring(0,u),d=h>u?c.substring(h):"";return[p+"/",d]}(e),a=this.weightPathPrefix||r,i=Xg(t),o=[],l=[];for(let c of t)for(let u of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(u)):o.push(a+u+s);return this.weightUrlConverter&&o.push(...await Promise.all(l)),[i,Dc(await o0(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function yd(n){return n.match(gd.URL_SCHEME_REGEX)!=null}gd.URL_SCHEME_REGEX=/^https?:\/\//;let l0=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(e=Array.isArray(n)?n.every(r=>yd(r)):yd(n),e)return bd(n,t)}return null};function bd(n,t){return new gd(n,t)}function Fk(n,t){return bd(n,t)}fn.registerSaveRouter(l0),fn.registerLoadRouter(l0);class xd{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class c0{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class Dk{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function Ok(n,t,e,r){let s=arguments;return new Dk(h0(...s))}function h0(n,t,e,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new xd(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new xd({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new xd({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:r}))}function Mk(n){return new c0(n)}function Lk(n){return new c0(n)}function io(n,t){let e=n.length,r=[];for(let s=0;s<e;s++){let a=e-1-s,i=n[a]||1;(t[t.length-1-s]||1)>1&&i===1&&r.unshift(a)}return r}function Sn(n,t){let e=[];for(let r=0;r<t.length;r++){let s=n[n.length-r-1],a=t.length-r-1,i=t[a];(s==null||s===1&&i>1)&&e.unshift(a)}return e}function Ce(n,t){let e=[],r=Math.max(n.length,t.length);for(let s=0;s<r;s++){let a=n[n.length-s-1];a==null&&(a=1);let i=t[t.length-s-1];if(i==null&&(i=1),a===1)e.unshift(i);else if(i===1)e.unshift(a);else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${n} and ${t}.`);e.unshift(a)}}return e}function p0(n,t,e){if(Ht(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=ya(n,e);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return xa(n,t,r,e)}let ui;function zk(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)a=!0;else if(n.getContext!=null)i=!0;else{if(!(typeof ImageBitmap<"u"&&n instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);o=!0}if(td(Zp,dt.backendName)!=null){let p={pixels:n},d={numChannels:t};return dt.runKernel(Zp,p,d)}let[l,c]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],u,h;if(i)u=n.getContext("2d").getImageData(0,0,l,c).data;else if(r||e)u=n.data;else if(a||s||o){if(ui==null)if(typeof document>"u"){if(typeof OffscreenCanvas>"u"||typeof OffscreenCanvasRenderingContext2D>"u")throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ui=new OffscreenCanvas(1,1).getContext("2d")}else ui=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ui.canvas.width=l,ui.canvas.height=c,ui.drawImage(n,0,0,l,c),u=ui.getImageData(0,0,l,c).data}if(t===4)h=new Int32Array(u);else{let p=l*c;h=new Int32Array(p*t);for(let d=0;d<p;d++)for(let f=0;f<t;++f)h[d*t+f]=u[4*d+f]}return p0(h,[c,l,t],"int32")}let d0=ct({fromPixels_:zk});function vd(n,t,e){let r=n.shape.length;z(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),z(r===e.length,()=>`Error in slice${r}D: Length of size ${e} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)z(t[s]+e[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+e[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function Pk(n){let t=[],e=0;for(;n>0;)1&n&&t.push(e),n/=2,e++;return t}function wd(n,t,e){let r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((t[s]-n[s])/e[s]);return r}function f0(n,t,e,r){let s=[...n];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<e;a++)a===0?s[t]=1:(s.splice(t,0,1),s.pop());return s}function m0(n,t,e){return e<=n?e:e-(t-1)}function g0(n,t){let e=[];for(let r=0;r<n;r++)e.push(t+r);return e}function Bk(n,t,e,r,s,a,i,o,l){let c=n.length,u=new Array(c),h=new Array(c),p=new Array(c);if(t.length&&e>0){let d=t[0],f=e+1;u=y0(i,d,f,r,n),h=b0(o,d,f,s,n),p=f0(a,d,f,n)}else for(let d=0;d<c;d++)u[d]=v0(i,r,a,n,d,l),h[d]=w0(o,s,a,n,d,l),p[d]=x0(a,d,l);return{begin:u,end:h,strides:p}}function y0(n,t,e,r,s){let a=[...s],i=g0(e,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{let l=m0(t,e,o),c=r[l];n&1<<l&&(c=0),a[o]=c}return a}function b0(n,t,e,r,s){let a=[...s],i=g0(e,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{let l=m0(t,e,o),c=r[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),a[o]=c}for(let o=0;o<a.length;o++){let l=s[o];a[o]<0&&(a[o]+=l),a[o]=Zt(0,a[o],s[o])}return a}function x0(n,t,e){let r=n[t];return(e&1<<t||r==null)&&(r=1),r}function v0(n,t,e,r,s,a){let i=t[s],o=e[s]||1;(n&1<<s||a&1<<s||i==null)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[s];return i<0&&(i+=l),i=Zt(0,i,l-1),i}function w0(n,t,e,r,s,a){let i=t[s],o=e[s]||1;(n&1<<s||a&1<<s||i==null)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[s];return i<0&&(i+=l),i=o>0?Zt(0,i,l):Zt(-1,i,l-1),i}function kd(n,t,e){let r=e.length;for(let s=0;s<e.length;s++)if(e[s]>1){r=s;break}for(let s=r+1;s<e.length;s++)if(t[s]>0||e[s]!==n[s])return!1;return!0}function Id(n,t){let e=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)e+=n[r]*t[r];return e}function Mc(n,t,e){let r,s=n.shape.length,a;return r=typeof t=="number"?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(i=>{z(i!==-1,()=>"slice() does not support negative begin indexing.")}),a=e==null?new Array(s).fill(-1):typeof e=="number"?[e,...new Array(s-1).fill(-1)]:e.length<s?e.concat(new Array(s-e.length).fill(-1)):e,a=a.map((i,o)=>i>=0?i:(z(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),n.shape[o]-r[o])),[r,a]}function Nd(n,t,e,r,s,a,i,o,l){let c;if(r==null?(c=new Array(t.length),c.fill(1)):c=r,i!=null&&(i&i-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)u&&(1<<b&o)!=0&&h.numAddAxisAfterEllipsis++,1<<b&i&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);let p={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};(function(b,$){$.beginMask=0,$.endMask=0,$.shrinkAxisMask=0;let _=0;$.beginValid=b.begin!=null,$.endValid=b.end!=null,$.begin=new Array($.dims),$.end=new Array($.dims),$.strides=new Array($.dims),$.finalShapeGatherIndices=[],$.finalShapeGatherIndicesSparse=[],$.inputShapeGatherIndicesSparse=new Array($.dims);for(let M=0;M<b.dims;M++)if(1<<M&b.ellipsisMask){let Y=Math.min($.dims-(b.dims-M)+1+b.numAddAxisAfterEllipsis,$.dims);for(;_<Y;_++)$.begin[_]=0,$.end[_]=0,$.strides[_]=1,$.beginMask|=1<<_,$.endMask|=1<<_,$.finalShapeGatherIndices.push(_),$.finalShapeGatherIndicesSparse.push(-1),$.inputShapeGatherIndicesSparse[_]=M}else if(1<<M&b.newAxisMask)$.finalShapeGatherIndices.push(-2),$.finalShapeGatherIndicesSparse.push(-1);else{if(_===$.begin.length)throw Error(`Index out of range using input dim ${_}; input has only ${$.dims} dims, ${$.begin.length}.`);b.begin!=null&&($.begin[_]=b.begin[M]),b.end!=null&&($.end[_]=b.end[M]),$.strides[_]=b.strides[M],b.beginMask&1<<M&&($.beginMask|=1<<_),b.endMask&1<<M&&($.endMask|=1<<_),b.shrinkAxisMask&1<<M?($.finalShapeGatherIndices.push(-1),$.finalShapeGatherIndicesSparse.push(-1),$.shrinkAxisMask|=1<<_):($.finalShapeGatherIndices.push(_),$.finalShapeGatherIndicesSparse.push(M)),$.inputShapeGatherIndicesSparse[_]=M,_++}})(h,p);let d=!0,f=!0,m=!0,g=[],y=[];for(let b=0;b<n.length;++b){if(p.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);let $=!!(p.shrinkAxisMask&1<<b),_=n[b];if(_===-1){g.push($?1:-1);continue}let M=[p.beginMask&1<<b,p.endMask&1<<b],Y=[p.strides[b]>0?0:-1,p.strides[b]>0?_:_-1];if($&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[b]===1;let tt=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if($){let lt=p.begin[b]<0?_+p.begin[b]:p.begin[b];if(p.begin[b]=lt,p.end[b]=p.begin[b]+1,lt<0||lt>=_)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=k0(p.begin[b],0,p.strides[b],_,M,Y),p.end[b]=k0(p.end[b],1,p.strides[b],_,M,Y);let rt=p.strides[b]===1&&p.begin[b]===0&&p.end[b]===_;d=d&&rt,f=f&&(b===0&&p.strides[b]===1||rt)}else d=d&&p.strides[b]===1&&tt,f=f&&(b===0&&p.strides[b]===1||tt);let Q,et=!1;if(p.beginValid&&p.endValid?(Q=p.end[b]-p.begin[b],et=!0):$?(Q=1,et=!0):tt&&_>=0&&(Q=p.strides[b]<0?-_:_,et=!0),et){let rt;rt=Q===0||Q<0!=p.strides[b]<0?0:Math.trunc(Q/p.strides[b])+(Q%p.strides[b]!=0?1:0),g.push(rt)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){let $=p.finalShapeGatherIndices[b];$>=0?y.push(g[$]):$===-2&&y.push(1)}return{finalShapeSparse:y.filter((b,$)=>p.finalShapeGatherIndices[$]!==-2),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function k0(n,t,e,r,s,a){if(s[t])return e>0?a[t]:a[t+1&1];{let i=n<0?r+n:n;return i<a[0]?a[0]:i>a[1]?a[1]:i}}class oo{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Zr{constructor(){this.classNameMap={}}static getMap(){return Zr.instance==null&&(Zr.instance=new Zr),Zr.instance}static register(t){Zr.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Wt(n){z(n.className!=null,()=>"Class being registered does not have the static className property defined."),z(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),z(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Zr.register(n)}function wa(){return dt}function Sd(){return dt.memory()}function wt(n,t){return dt.tidy(n,t)}function De(n){ga(n).forEach(t=>t.dispose())}function Gn(n){return dt.keep(n)}function I0(n,t,e=1){return dt.registerBackend(n,t,e)}function Us(n){return dt.customGrad(n)}function xe(n,t){if((Vn(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Vn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return xa(n,[],[],t)}uk=function(n){Ct().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class ka extends oo{minimize(t,e=!1,r){let{value:s,grads:a}=this.computeGradients(t,r);if(r!=null){let i=r.map(o=>({name:o.name,tensor:a[o.name]}));this.applyGradients(i)}else this.applyGradients(a);return De(a),e?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(r,s){z(nr(r),()=>"The f passed in variableGrads(f) must be a function"),z(s==null||Array.isArray(s)&&s.every(h=>h instanceof Rc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let a=s!=null;if(!a){s=[];for(let h in dt.registeredVariables)s.push(dt.registeredVariables[h])}let i=a?s.filter(h=>!h.trainable):null,o=s.length;s=s.filter(h=>h.trainable),z(s.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let{value:l,grads:c}=dt.gradients(r,s,null,!0);z(c.some(h=>h!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),z(l.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`);let u={};return s.forEach((h,p)=>{c[p]!=null&&(u[h.name]=c[p])}),i?.forEach(h=>u[h.name]=null),{value:l,grads:u}}(t,e)}dispose(){this.iterations_!=null&&De(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:xe(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(ka,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});let Tn=ct({abs_:function(n){let t=Z(n,"x","abs");if(t.dtype==="complex64"){let e={x:t};return dt.runKernel(ji,e)}{let e={x:t};return dt.runKernel(aa,e)}}}),N0=ct({acos_:function(n){let t={x:Z(n,"x","acos")};return dt.runKernel(ia,t)}}),S0=ct({acosh_:function(n){let t={x:Z(n,"x","acosh")};return dt.runKernel(Ga,t)}}),Bt=ct({add_:function(n,t){let e=Z(n,"a","add"),r=Z(t,"b","add");[e,r]=yn(e,r);let s={a:e,b:r};return dt.runKernel(yr,s)}}),Wk=ct({addN_:function(n){z(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),z(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);let t=n.map((s,a)=>Z(s,`tensors${a}`,"addN")),e=t[0];t.forEach(s=>{if(s.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(s=>{if(!se(s.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return dt.runKernel(Li,r)}}),Td=ct({all_:function(n,t=null,e=!1){let r={x:Z(n,"x","all","bool")},s={axis:t,keepDims:e};return dt.runKernel(Yo,r,s)}}),Lc=ct({any_:function(n,t=null,e=!1){let r={x:Z(n,"x","any","bool")},s={axis:t,keepDims:e};return dt.runKernel(zi,r,s)}}),uo=ct({argMax_:function(n,t=0){let e={x:Z(n,"x","argMax")},r={axis:t};return dt.runKernel(Pi,e,r)}}),T0=ct({argMin_:function(n,t=0){let e={x:Z(n,"x","argMin")},r={axis:t};return dt.runKernel(Bi,e,r)}}),C0=ct({asin_:function(n){let t={x:Z(n,"x","asin")};return dt.runKernel(Ha,t)}}),$0=ct({asinh_:function(n){let t={x:Z(n,"x","asinh")};return dt.runKernel(ja,t)}}),E0=ct({atan_:function(n){let t={x:Z(n,"x","atan")};return dt.runKernel(qa,t)}}),_0=ct({atan2_:function(n,t){let e=Z(n,"a","atan2"),r=Z(t,"b","atan2");[e,r]=yn(e,r);let s={a:e,b:r};return dt.runKernel(Xa,s)}}),A0=ct({atanh_:function(n){let t={x:Z(n,"x","atanh")};return dt.runKernel(Ka,t)}});function Pu(n,t,e,r,s="NHWC",a){return Dn(n,[...t,n[3]],e,a,r,null,null,Hs(s))}function Jr(n,t,e,r,s,a,i="channelsLast"){let[o,l]=zc(t),c;if(i==="channelsLast")c=[o,l,n[3],n[3]];else{if(i!=="channelsFirst")throw new Error(`Unknown dataFormat ${i}`);c=[o,l,n[1],n[1]]}return Dn(n,c,e,r,s,a,!1,i)}function Gs(n,t,e,r,s,a,i="NDHWC"){let[o,l,c]=$d(t),u,h;if(i==="NDHWC")h="channelsLast",u=[o,l,c,n[4],n[4]];else{if(i!=="NCDHW")throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",u=[o,l,c,n[1],n[1]]}return Ia(n,u,e,r,s,!1,h,a)}function Dn(n,t,e,r,s,a,i=!1,o="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h]=n;else{if(o!=="channelsFirst")throw new Error(`Unknown dataFormat ${o}`);[l,h,c,u]=n}let[p,d,,f]=t,[m,g]=zc(e),[y,b]=zc(r),$=lo(p,y),_=lo(d,b),{padInfo:M,outHeight:Y,outWidth:tt}=function(rt,lt,ft,yt,kt,Tt,It,Et,_t){let At,Mt,Ot;if(typeof rt=="number"){At={top:rt,bottom:rt,left:rt,right:rt,type:rt===0?"VALID":"NUMBER"};let Lt=function(Pt,jt,Kt,Qt,te){Qt==null&&(Qt=Cd(Pt,jt,Kt));let be=Pt[0],me=Pt[1],we=li((be-jt+2*Qt)/Kt+1,te),pe=li((me-jt+2*Qt)/Kt+1,te);return[we,pe]}([lt,ft],Tt,yt,rt,Et);Mt=Lt[0],Ot=Lt[1]}else if(rt==="same"){Mt=Math.ceil(lt/yt),Ot=Math.ceil(ft/kt);let Lt=Math.max(0,(Mt-1)*yt+Tt-lt),Pt=Math.max(0,(Ot-1)*kt+It-ft),jt=Math.floor(Lt/2),Kt=Lt-jt,Qt=Math.floor(Pt/2);At={top:jt,bottom:Kt,left:Qt,right:Pt-Qt,type:"SAME"}}else if(rt==="valid")At={top:0,bottom:0,left:0,right:0,type:"VALID"},Mt=Math.ceil((lt-Tt+1)/yt),Ot=Math.ceil((ft-It+1)/kt);else{if(typeof rt!="object")throw Error(`Unknown padding parameter: ${rt}`);{let Lt=_t==="channelsLast"?rt[1][0]:rt[2][0],Pt=_t==="channelsLast"?rt[1][1]:rt[2][1],jt=_t==="channelsLast"?rt[2][0]:rt[3][0],Kt=_t==="channelsLast"?rt[2][1]:rt[3][1];At={top:Lt,bottom:Pt,left:jt,right:Kt,type:Lt===0&&Pt===0&&jt===0&&Kt===0?"VALID":"EXPLICIT"},Mt=li((lt-Tt+Lt+Pt)/yt+1,Et),Ot=li((ft-It+jt+Kt)/kt+1,Et)}}return{padInfo:At,outHeight:Mt,outWidth:Ot}}(s,c,u,m,g,$,_,a,o),Q=i?f*h:f,et;return o==="channelsFirst"?et=[l,Q,Y,tt]:o==="channelsLast"&&(et=[l,Y,tt,Q]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:u,inChannels:h,outHeight:Y,outWidth:tt,outChannels:Q,padInfo:M,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:$,effectiveFilterWidth:_,dilationHeight:y,dilationWidth:b,inShape:n,outShape:et,filterShape:t}}function Ia(n,t,e,r,s,a=!1,i="channelsLast",o){let[l,c,u,h,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,h,p]=n;else{if(i!=="channelsFirst")throw new Error(`Unknown dataFormat ${i}`);[l,p,c,u,h]=n}let[d,f,m,,g]=t,[y,b,$]=$d(e),[_,M,Y]=$d(r),tt=lo(d,_),Q=lo(f,M),et=lo(m,Y),{padInfo:rt,outDepth:lt,outHeight:ft,outWidth:yt}=function(It,Et,_t,At,Mt,Ot,Lt,Pt,jt,Kt,Qt){let te,be,me,we;if(typeof It=="number"){te={top:It,bottom:It,left:It,right:It,front:It,back:It,type:It===0?"VALID":"NUMBER"};let pe=function(Ie,ke,Te,Ne,_e,ze){_e==null&&(_e=Cd(Ie,ke,Ne));let In=Ie[0],tr=Ie[1],dn=Ie[2],Ye=li((In-ke+2*_e)/Ne+1,ze),zr=li((tr-ke+2*_e)/Ne+1,ze),Yn=li((dn-ke+2*_e)/Ne+1,ze);return[Ye,zr,Yn,Te]}([Et,_t,At,1],Pt,1,Mt,It,Qt);be=pe[0],me=pe[1],we=pe[2]}else if(It==="same"){be=Math.ceil(Et/Mt),me=Math.ceil(_t/Ot),we=Math.ceil(At/Lt);let pe=(be-1)*Mt+Pt-Et,Ie=(me-1)*Ot+jt-_t,ke=(we-1)*Lt+Kt-At,Te=Math.floor(pe/2),Ne=pe-Te,_e=Math.floor(Ie/2),ze=Ie-_e,In=Math.floor(ke/2);te={top:_e,bottom:ze,left:In,right:ke-In,front:Te,back:Ne,type:"SAME"}}else{if(It!=="valid")throw Error(`Unknown padding parameter: ${It}`);te={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},be=Math.ceil((Et-Pt+1)/Mt),me=Math.ceil((_t-jt+1)/Ot),we=Math.ceil((At-Kt+1)/Lt)}return{padInfo:te,outDepth:be,outHeight:me,outWidth:we}}(s,c,u,h,y,b,$,tt,Q,et,o),kt=a?g*p:g,Tt;return i==="channelsFirst"?Tt=[l,kt,lt,ft,yt]:i==="channelsLast"&&(Tt=[l,lt,ft,yt,kt]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:h,inChannels:p,outDepth:lt,outHeight:ft,outWidth:yt,outChannels:kt,padInfo:rt,strideDepth:y,strideHeight:b,strideWidth:$,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:tt,effectiveFilterHeight:Q,effectiveFilterWidth:et,dilationDepth:_,dilationHeight:M,dilationWidth:Y,inShape:n,outShape:Tt,filterShape:t}}function Cd(n,t,e,r=1){let s=lo(t,r);return Math.floor((n[0]*(e-1)-e+s)/2)}function zc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function $d(n){return typeof n=="number"?[n,n,n]:n}function lo(n,t){return t<=1?n:n+(n-1)*(t-1)}function li(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Na(n){let[t,e,r]=zc(n);return t===1&&e===1&&r===1}function Hn(n,t){return Na(n)||Na(t)}function Hs(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function ar(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")z(Ge(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else{if(typeof t!="object")throw Error(`Error in ${n}: Unknown padding parameter: ${t}`);t.forEach(r=>{r.forEach(s=>{z(Ge(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${s}.`)})})}}}let mt=ct({reshape_:function(n,t){let e={x:Z(n,"x","reshape","string_or_numeric")},r={shape:t};return dt.runKernel(pc,e,r)}}),Pc=ct({avgPool_:function(n,t,e,r,s){let a=Z(n,"x","avgPool","float32");z(Hn(e,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`);let i=a,o=!1;a.rank===3&&(o=!0,i=mt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),ar("avgPool",r,s);let l={x:i},c={filterSize:t,strides:e,pad:r,dimRoundingMode:s},u=dt.runKernel(Wi,l,c);return u=ee(u,a.dtype),o?mt(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),R0=ct({avgPool3d_:function(n,t,e,r,s,a="NDHWC"){let i=Z(n,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=mt(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),z(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),z(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),ar("avgPool3d",r,s);let c={x:o},u={filterSize:t,strides:e,pad:r,dimRoundingMode:s,dataFormat:a},h=dt.runKernel(Vi,c,u);return h=ee(h,o.dtype),l?mt(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),un=ct({concat_:function(n,t=0){z(n.length>=1,()=>"Pass at least one tensor to concat");let e=Fc(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),e.length===1)return Vs(e[0]);let r=e,s={axis:t};return dt.runKernel(qi,r,s)}}),Oe=ct({matMul_:function(n,t,e=!1,r=!1){let s=Z(n,"a","matMul"),a=Z(t,"b","matMul");[s,a]=yn(s,a);let i={a:s,b:a},o={transposeA:e,transposeB:r};return dt.runKernel(Gi,i,o)}}),ht=ct({mul_:function(n,t){let e=Z(n,"a","mul"),r=Z(t,"b","mul");[e,r]=yn(e,r);let s={a:e,b:r};return dt.runKernel(gu,s)}}),fs=ct({sigmoid_:function(n){let t={x:Z(n,"x","sigmoid","float32")};return dt.runKernel(Cu,t)}}),ve=ct({slice_:function(n,t,e){let r=Z(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let s={x:r},a={begin:t,size:e};return dt.runKernel(yc,s,a)}}),co=ct({tanh_:function(n){let t={x:Z(n,"x","tanh","float32")};return dt.runKernel(Fu,t)}}),Vk=ct({basicLSTMCell_:function(n,t,e,r,s,a){let i=Z(n,"forgetBias","basicLSTMCell"),o=Z(t,"lstmKernel","basicLSTMCell"),l=Z(e,"lstmBias","basicLSTMCell"),c=Z(r,"data","basicLSTMCell"),u=Z(s,"c","basicLSTMCell"),h=Z(a,"h","basicLSTMCell"),p=un([c,h],1),d=Oe(p,o),f=Bt(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=ve(f,[0,0],y),$=ve(f,[0,g],y),_=ve(f,[0,2*g],y),M=ve(f,[0,3*g],y),Y=Bt(ht(fs(b),co($)),ht(u,fs(Bt(i,_))));return[Y,ht(co(Y),fs(M))]}}),Bc=ct({batchToSpaceND_:function(n,t,e){let r=Z(n,"x","batchToSpaceND"),s=t.reduce((o,l)=>o*l);z(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),z(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),z(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);let a={x:r},i={blockShape:t,crops:e};return dt.runKernel(Hi,a,i)}}),Bu=ct({batchNorm_:function(n,t,e,r,s,a){a==null&&(a=.001);let i=Z(n,"x","batchNorm"),o=Z(t,"mean","batchNorm"),l=Z(e,"variance","batchNorm"),c,u;s!=null&&(c=Z(s,"scale","batchNorm")),r!=null&&(u=Z(r,"offset","batchNorm")),z(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h=function(m){let g;return g=m.rank===0||m.rank===1?mt(m,[1,1,1,m.size]):m.rank===2?mt(m,[1,1,m.shape[0],m.shape[1]]):m.rank===3?mt(m,[1,m.shape[0],m.shape[1],m.shape[2]]):m,g}(i),p={x:h,scale:c,offset:u,mean:o,variance:l},d={varianceEpsilon:a},f=dt.runKernel(la,p,d);return mt(f,i.shape)}}),F0=ct({batchNorm2d_:function(n,t,e,r,s,a){let i=Z(n,"x","batchNorm"),o=Z(t,"mean","batchNorm"),l=Z(e,"variance","batchNorm"),c,u;return s!=null&&(c=Z(s,"scale","batchNorm")),r!=null&&(u=Z(r,"offset","batchNorm")),z(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),z(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),z(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&z(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&z(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Bu(i,o,l,u,c,a)}}),D0=ct({batchNorm3d_:function(n,t,e,r,s,a){let i=Z(n,"x","batchNorm"),o=Z(t,"mean","batchNorm"),l=Z(e,"variance","batchNorm"),c,u;return s!=null&&(c=Z(s,"scale","batchNorm")),r!=null&&(u=Z(r,"offset","batchNorm")),z(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),z(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),z(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&z(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&z(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Bu(i,o,l,u,c,a)}}),O0=ct({batchNorm4d_:function(n,t,e,r,s,a){let i=Z(n,"x","batchNorm"),o=Z(t,"mean","batchNorm"),l=Z(e,"variance","batchNorm"),c,u;return s!=null&&(c=Z(s,"scale","batchNorm")),r!=null&&(u=Z(r,"offset","batchNorm")),z(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),z(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),z(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&z(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&z(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Bu(i,o,l,u,c,a)}}),M0=ct({bincount_:function(n,t,e){let r=Z(n,"x","bincount"),s=Z(t,"weights","bincount");z(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),z(e>=0,()=>`size must be non-negative, but got ${e}.`),z(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);let a={x:r,weights:s},i={size:e};return dt.runKernel(Jo,a,i)}}),Uk=ct({broadcastArgs_:function(n,t){let e=Z(n,"s0","broadcastArgs","int32"),r=Z(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let s={s0:e,s1:r};return dt.runKernel(Qo,s)}}),ho=ct({broadcastTo_:function(n,t){let e=Z(n,"broadcastTo","x"),r=e.shape;if(t.some(l=>!(l>0)||l%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let l=e.shape.slice();for(;l.length<t.length;)l.unshift(1);e=mt(e,l)}let s=e.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(s[l]===t[l])a[l]=1;else if(e.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(a.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return Vs(e);let i={x:e},o={reps:a};return dt.runKernel(Du,i,o)}}),L0=ct({ceil_:function(n){let t={x:Z(n,"x","ceil","float32")};return dt.runKernel(Za,t)}});function po(n,t,e){let r={shape:n,value:t,dtype:e};return dt.runKernel(Ue,{},r)}let Ar=ct({clipByValue_:function(n,t,e){let r=Z(n,"x","clipByValue");if(z(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return po(r.shape,t,r.dtype);let s={x:r},a={clipValueMin:t,clipValueMax:e};return dt.runKernel(Ja,s,a)}}),z0=ct({concat1d_:function(n){return un(n,0)}}),Wc=ct({concat2d_:function(n,t){return un(n,t)}}),P0=ct({concat3d_:function(n,t){return un(n,t)}}),B0=ct({concat4d_:function(n,t){return un(n,t)}}),Sa=ct({conv2d_:function(n,t,e,r,s="NHWC",a=[1,1],i){let o=Z(n,"x","conv2d","float32"),l=Z(t,"filter","conv2d","float32"),c=o,u=!1;o.rank===3&&(u=!0,c=mt(o,[1,o.shape[0],o.shape[1],o.shape[2]])),z(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),z(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ar("conv2d",r,i);let h=s==="NHWC"?c.shape[3]:c.shape[1];z(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),z(Hn(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let p={x:c,filter:l},d={strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=dt.runKernel(Ki,p,d);return u?mt(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ed=ct({conv1d_:function(n,t,e,r,s="NWC",a=1,i){let o=Z(n,"x","conv1d"),l=Z(t,"filter","conv1d"),c=o,u=!1;o.rank===2&&(u=!0,c=mt(o,[1,o.shape[0],o.shape[1]])),z(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),z(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ar("conv1d",r,i),z(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),z(Hn(e,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${a}'`),z(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);let h=mt(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=mt(c,[c.shape[0],1,c.shape[1],c.shape[2]]),d=Sa(p,h,[1,e],r,"NHWC",[1,a],i);return mt(d,u?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),_d=ct({conv2DBackpropInput_:function(n,t,e,r,s,a="NHWC",i){z(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,l=t,c=!1;t.rank===3&&(c=!0,l=mt(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,n[0],n[1],n[2]]),z(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),z(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),z(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let u=a==="NHWC"?o[3]:o[1],h=a==="NHWC"?l.shape[3]:l.shape[1];z(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),z(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),ar("conv2dDerInput",s,i);let p={dy:l,filter:e},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=dt.runKernel(Xi,p,d);return c?mt(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ad=ct({conv2dTranspose_:function(n,t,e,r,s,a){let i=Z(n,"x","conv2dTranspose"),o=Z(t,"filter","conv2dTranspose");return _d(e,i,o,r,s,"NHWC",a)}}),W0=ct({conv3d_:function(n,t,e,r,s="NDHWC",a=[1,1,1]){let i=Z(n,"x","conv3d"),o=Z(t,"filter","conv3d"),l=i,c=!1;i.rank===4&&(c=!0,l=mt(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),z(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),z(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),z(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),z(Hn(e,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),z(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);let u={x:l,filter:o},h={strides:e,pad:r,dataFormat:s,dilations:a},p=dt.runKernel(Yi,u,h);return c?mt(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),V0=ct({conv3DBackpropInput_:function(n,t,e,r,s){z(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,i=t,o=!1;t.rank===4&&(o=!0,i=mt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,n[0],n[1],n[2],n[3]]);let l=a[4],c=i.shape[4];z(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),z(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),z(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),z(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),z(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);let u={dy:i,filter:e},h={pad:s,strides:r,inputShape:a},p=dt.runKernel(Zi,u,h);return o?mt(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),U0=ct({conv3dTranspose_:function(n,t,e,r,s){let a=Z(n,"x","conv3dTranspose"),i=Z(t,"filter","conv3dTranspose");return V0(e,a,i,r,s)}}),Vc=ct({cos_:function(n){let t={x:Z(n,"x","cos","float32")};return dt.runKernel(hs,t)}}),Rd=ct({cosh_:function(n){let t={x:Z(n,"x","cosh","float32")};return dt.runKernel(oa,t)}}),Uc=ct({cumprod_:function(n,t=0,e=!1,r=!1){let s={x:Z(n,"x","cumprod")},a={axis:t,exclusive:e,reverse:r};return dt.runKernel($s,s,a)}}),Fd=ct({cumsum_:function(n,t=0,e=!1,r=!1){let s={x:Z(n,"x","cumsum")},a={axis:t,exclusive:e,reverse:r};return dt.runKernel(Ji,s,a)}}),Gk=ct({denseBincount_:function(n,t,e,r=!1){let s=Z(n,"x","denseBincount"),a=Z(t,"weights","denseBincount");z(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),z(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),z(e>=0,()=>`size must be non-negative, but got ${e}.`),z(a.size===s.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`);let i={x:s,weights:a},o={size:e,binaryOutput:r};return dt.runKernel(Qa,i,o)}}),G0=ct({depthToSpace_:function(n,t,e="NHWC"){let r=Z(n,"x","depthToSpace","float32"),s=e==="NHWC"?r.shape[1]:r.shape[2],a=e==="NHWC"?r.shape[2]:r.shape[3],i=e==="NHWC"?r.shape[3]:r.shape[1];z(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),z(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t}  for depthToSpace with input shape
    ${r.shape}`),z(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${r.shape}`),z(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:e};return dt.runKernel(ru,o,l)}}),Wu=ct({depthwiseConv2d_:function(n,t,e,r,s="NHWC",a=[1,1],i){let o=Z(n,"x","depthwiseConv2d","float32"),l=Z(t,"filter","depthwiseConv2d","float32"),c=o,u=!1;o.rank===3&&(u=!0,c=mt(o,[1,o.shape[0],o.shape[1],o.shape[2]])),z(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),z(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h=s==="NHWC"?c.shape[3]:c.shape[1];z(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),ar("depthwiseConv2d",r,i);let p={x:c,filter:l},d={strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=dt.runKernel(Qi,p,d);return u?mt(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Hk=ct({diag_:function(n){let t={x:Z(n,"x","diag")};return dt.runKernel(au,t)}}),H0=ct({dilation2d_:function(n,t,e,r,s=[1,1],a="NHWC"){let i=Z(n,"x","dilation2d"),o=Z(t,"filter","dilation2d");z(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),z(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),z(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=i,c=!1;i.rank===3&&(l=mt(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);let u={x:l,filter:o},h={strides:e,pad:r,dilations:s},p=dt.runKernel(J,u,h);return c?mt(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Dd=ct({floorDiv_:function(n,t){let e=Z(n,"a","floorDiv"),r=Z(t,"b","floorDiv");[e,r]=yn(e,r);let s={a:e,b:r};return dt.runKernel(br,s)}}),oe=ct({div_:function(n,t){let e=Z(n,"a","div"),r=Z(t,"b","div");if([e,r]=yn(e,r),e.dtype==="int32"&&r.dtype==="int32")return Dd(e,r);let s={a:e,b:r};return dt.runKernel(vt,s,{})}}),ms=ct({equal_:function(n,t){let e=Z(n,"a","equal","string_or_numeric"),r=Z(t,"b","equal","string_or_numeric");[e,r]=yn(e,r),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(Gt,s)}}),xr=ct({where_:function(n,t,e){let r=Z(t,"a","where"),s=Z(e,"b","where"),a=Z(n,"condition","where","bool"),i=Ce(Ce(a.shape,r.shape),s.shape),o={condition:ho(a,i),t:ho(r,i),e:ho(s,i)};return dt.runKernel(gc,o)}}),Pe=ct({zerosLike_:function(n){let t={x:Z(n,"x","zerosLike")};return dt.runKernel(Nc,t)}}),j0=ct({divNoNan_:function(n,t){let e=Z(n,"a","div"),r=Z(t,"b","div");[e,r]=yn(e,r);let s=oe(e,r),a=Pe(s),i=ms(r,a);return xr(i,a,s)}}),q0=ct({dot_:function(n,t){let e=Z(n,"t1","dot"),r=Z(t,"t2","dot");z(!(e.rank!==1&&e.rank!==2||r.rank!==1&&r.rank!==2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${r.rank}.`);let s=e.rank===1?e.size:e.shape[1],a=r.rank===1?r.size:r.shape[0];if(z(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),e.rank===1&&r.rank===1){let i=mt(e,[1,-1]),o=mt(r,[-1,1]),l=Oe(i,o);return mt(l,[])}if(e.rank===1&&r.rank===2){let i=mt(e,[1,-1]),o=mt(r,[r.shape[0],r.shape[1]]),l=Oe(i,o);return mt(l,[l.size])}if(e.rank===2&&r.rank===1){let i=mt(r,[-1,1]),o=Oe(e,i);return mt(o,[o.size])}{let i=mt(r,[r.shape[0],r.shape[1]]);return Oe(e,i)}}}),jk=ct({einsum_:function(n,...t){let e=t.map((s,a)=>Z(s,`tensors${a}`,"einsum")),r={equation:n};return dt.runKernel(xt,e,r)}}),Vu=ct({elu_:function(n){let t={x:Z(n,"x","elu","float32")};return dt.runKernel(Nt,t)}}),K0=ct({erf_:function(n){let t=Z(n,"x","erf");z(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ee(t,"float32"));let e={x:t};return dt.runKernel(Vt,e)}});function Od(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function X0(n,t,e){let r=n.length+t.length,s=[],a=0,i=0;for(let o=0;o<r;o++)e.indexOf(o)===-1?s.push(n[a++]):s.push(t[i++]);return s}function On(n,t){let e=[],r=n.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&e.push(n[s]);return[e,t.map(s=>n[s])]}function xn(n,t){return X0(n,t.map(e=>1),t)}function jn(n,t,e){z(Od(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function mn(n,t){if(Od(n,t))return null;let e=[];for(let r=0;r<t;++r)n.indexOf(r)===-1&&e.push(r);return n.forEach(r=>e.push(r)),e}function Ta(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function vn(n,t){let e=[];for(let r=t-n;r<t;++r)e.push(r);return e}let gs=ct({max_:function(n,t=null,e=!1){let r={x:Z(n,"x","max")},s={reductionIndices:t,keepDims:e};return dt.runKernel(Jl,r,s)}}),Gc=ct({min_:function(n,t=null,e=!1){let r={x:Z(n,"x","min")},s={axis:t,keepDims:e};return dt.runKernel(nc,r,s)}}),Ca=ct({pow_:function(n,t){let e=Z(n,"base","pow"),r=Z(t,"exp","pow");[e,r]=yn(e,r);let s={a:e,b:r};return dt.runKernel(yu,s)}}),Qn=ct({sqrt_:function(n){let t={x:Z(n,"x","sqrt","float32")};return dt.runKernel(Eu,t)}}),Ze=ct({square_:function(n){let t=Z(n,"x","square");return dt.runKernel("Square",{x:t},{})}}),ce=ct({sum_:function(n,t=null,e=!1){let r=Z(n,"x","sum");r.dtype==="bool"&&(r=ee(r,"int32"));let s={x:r},a={axis:t,keepDims:e};return dt.runKernel(bc,s,a)}});function Y0(n,t,e=null){if(n.rank===0)return Tn(n);if(n.rank!==1&&e===null)return Y0(mt(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return ce(Tn(n),e);if(t===1/0)return gs(Tn(n),e);if(t===-1/0)return Gc(Tn(n),e);if(t==="euclidean"||t===2)return Qn(ce(Ca(Tn(n),xe(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return gs(ce(Tn(n),e[0]),e[1]-1);if(t===1/0)return gs(ce(Tn(n),e[1]),e[0]);if(t===-1/0)return Gc(ce(Tn(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Qn(ce(Ze(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}let Uu=ct({norm_:function(n,t="euclidean",e=null,r=!1){let s=Y0(n=Z(n,"x","norm"),t,e),a=s.shape;if(r){let i=ge(e,n.shape);a=xn(s.shape,i)}return mt(s,a)}}),Z0=ct({euclideanNorm_:function(n,t=null,e=!1){return Uu(n,"euclidean",t,e)}}),Wr=ct({exp_:function(n){let t={x:Z(n,"x","exp")};return dt.runKernel(qt,t)}}),vr=ct({expandDims_:function(n,t=0){let e=Z(n,"x","expandDims","string_or_numeric");z(t<=e.rank,()=>"Axis must be <= rank of the tensor");let r={input:e},s={dim:t};return dt.runKernel(ae,r,s)}}),J0=ct({expm1_:function(n){let t={x:Z(n,"x","expm1")};return dt.runKernel(de,t)}}),Qr=ct({tile_:function(n,t){let e=Z(n,"x","tile","string_or_numeric");z(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let r={x:e},s={reps:t};return dt.runKernel(Du,r,s)}}),Md=ct({eye_:function(n,t,e,r="float32"){t==null&&(t=n);let s=Fe([n,t],r),a=n<=t?n:t;for(let o=0;o<a;++o)s.set(1,o,o);let i=mt(s.toTensor(),[n,t]);if(e==null)return i;if(e.length===1)return Qr(vr(i,0),[e[0],1,1]);if(e.length===2)return Qr(vr(vr(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return Qr(vr(vr(vr(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}}),Gu=ct({floor_:function(n){let t={x:Z(n,"x","floor","float32")};return dt.runKernel(on,t)}}),Hu=ct({gather_:function(n,t,e=0,r=0){let s={x:Z(n,"x","gather"),indices:Z(t,"indices","gather","int32")},a={axis:e,batchDims:r};return dt.runKernel(ca,s,a)}}),Vr=ct({greater_:function(n,t){let e=Z(n,"a","greater","string_or_numeric"),r=Z(t,"b","greater","string_or_numeric");[e,r]=yn(e,r),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(to,s)}}),ci=ct({greaterEqual_:function(n,t){let e=Z(n,"a","greaterEqual","string_or_numeric"),r=Z(t,"b","greaterEqual","string_or_numeric");[e,r]=yn(e,r),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(ha,s)}}),Hc=ct({imag_:function(n){let t={input:Z(n,"input","imag")};return dt.runKernel(vp,t)}}),Q0=ct({isFinite_:function(n){let t={x:Z(n,"x","isFinite")};return dt.runKernel(uu,t)}}),t1=ct({isInf_:function(n){let t={x:Z(n,"x","isInf")};return dt.runKernel(lu,t)}}),e1=ct({isNaN_:function(n){let t={x:Z(n,"x","isNaN")};return dt.runKernel(cu,t)}}),jc=ct({leakyRelu_:function(n,t=.2){let e={x:Z(n,"x","leakyRelu")},r={alpha:t};return dt.runKernel(Hl,e,r)}}),Ld=ct({less_:function(n,t){let e=Z(n,"a","less","string_or_numeric"),r=Z(t,"b","less","string_or_numeric");[e,r]=yn(e,r),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(jl,s)}}),hi=ct({lessEqual_:function(n,t){let e=Z(n,"a","lessEqual","string_or_numeric"),r=Z(t,"b","lessEqual","string_or_numeric");[e,r]=yn(e,r),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(ql,s)}});function qk(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");let r={start:n,stop:t,num:e};return dt.runKernel(wp,{},r)}let n1=ct({localResponseNormalization_:function(n,t=5,e=1,r=1,s=.5){let a=Z(n,"x","localResponseNormalization");z(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),z(Ge(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;a.rank===3&&(o=!0,i=mt(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:i},c={depthRadius:t,bias:e,alpha:r,beta:s},u=dt.runKernel(Zl,l,c);return o?mt(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ur=ct({log_:function(n){let t={x:Z(n,"x","log","float32")};return dt.runKernel(hu,t)}}),qc=ct({log1p_:function(n){let t={x:Z(n,"x","log1p")};return dt.runKernel(pu,t)}}),cn=ct({neg_:function(n){let t={x:Z(n,"x","neg")};return dt.runKernel(sc,t)}}),fo=ct({softplus_:function(n){let t={x:Z(n,"x","softplus")};return dt.runKernel($u,t)}}),r1=ct({logSigmoid_:function(n){let t=Z(n,"x","logSigmoid");return Us(r=>({value:cn(fo(cn(r))),gradFunc:s=>ht(s,fs(cn(r)))}))(t)}}),ne=ct({sub_:function(n,t){let e=Z(n,"a","sub"),r=Z(t,"b","sub");[e,r]=yn(e,r);let s={a:e,b:r};return dt.runKernel(Au,s)}}),zd=ct({logSoftmax_:function(n,t=-1){let e=Z(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Us((s,a)=>{let i=gs(s,t,!0),o=ne(s,i),l=ne(ee(o,"float32"),Ur(ce(Wr(o),t,!0)));return a([l]),{value:l,gradFunc:(c,u)=>{let[h]=u,p=Wr(h);return ne(c,ht(ce(c,t,!0),p))}}})(e)}}),Pd=ct({logSumExp_:function(n,t=null,e=!1){let r=Z(n,"x","logSumExp"),s=ge(t,r.shape),a=gs(r,s,!0),i=ne(r,a),o=Wr(i),l=ce(o,s),c=Ur(l),u=Bt(mt(a,c.shape),c);if(e){let h=xn(u.shape,s);return mt(u,h)}return u}}),Es=ct({logicalAnd_:function(n,t){let e=Z(n,"a","logicalAnd","bool"),r=Z(t,"b","logicalAnd","bool");Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(Kl,s)}}),Kc=ct({logicalNot_:function(n){let t={x:Z(n,"x","logicalNot","bool")};return dt.runKernel(Xl,t)}}),Bd=ct({logicalOr_:function(n,t){let e=Z(n,"a","logicalOr","bool"),r=Z(t,"b","logicalOr","bool");Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(Yl,s)}}),s1=ct({logicalXor_:function(n,t){let e=Z(n,"a","logicalXor","bool"),r=Z(t,"b","logicalXor","bool");return Ce(e.shape,r.shape),Es(Bd(n,t),Kc(Es(n,t)))}}),a1=2147483648,Wd=ct({searchSorted_:function(n,t,e="left"){let r=Z(n,"sortedSequence","searchSorted"),s=Z(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=mt(r,[-1,a]),l=mt(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(St(l.shape)>=a1)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=a1)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);let c={sortedSequence:o,values:l},u={side:e};return dt.runKernel(Lp,c,u)}});function Kk(n,t){return Wd(n,t,"left")}let Xc=ct({maxPool_:function(n,t,e,r,s){let a=Z(n,"x","maxPool"),i=a,o=!1;a.rank===3&&(o=!0,i=mt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),z(Hn(e,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`),ar("maxPool",r,s);let l={x:i},c={filterSize:t,strides:e,pad:r,dimRoundingMode:s},u=dt.runKernel(Ql,l,c);return o?mt(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),i1=ct({maxPool3d_:function(n,t=[1,1,1],e,r,s,a="NDHWC"){let i=Z(n,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=mt(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),z(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),z(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),ar("maxPool3d",r,s);let c={x:o},u={filterSize:t,strides:e,pad:r,dimRoundingMode:s,dataFormat:a},h=dt.runKernel(tc,c,u);return l?mt(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Xk=ct({maxPoolWithArgmax_:function(n,t,e,r,s=!1){let a={x:Z(n,"x","maxPoolWithArgmax")},i={filterSize:t,strides:e,pad:r,includeBatchInIndex:s},o=dt.runKernel(Sp,a,i);return{result:o[0],indexes:o[1]}}}),js=ct({maximum_:function(n,t){let e=Z(n,"a","maximum"),r=Z(t,"b","maximum");[e,r]=yn(e,r),e.dtype==="bool"&&(e=ee(e,"int32"),r=ee(r,"int32")),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(du,s)}}),bn=ct({mean_:function(n,t=null,e=!1){let r={x:Z(n,"x","mean")},s={axis:t,keepDims:e};return dt.runKernel(ec,r,s)}});function Cn(n,t="float32"){if(t==="complex64"){let r=Cn(n,"float32"),s=Cn(n,"float32");return ba(r,s)}let e=nn(St(n),t);return dt.makeTensor(e,n,t)}function Gr(n,t="float32"){if(t==="complex64"){let r=Gr(n,"float32"),s=Cn(n,"float32");return ba(r,s)}let e=en(St(n),t);return dt.makeTensor(e,n,t)}function Yk(n,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=Z(n,"x","meshgrid",n instanceof Me?n.dtype:"float32");if(t===void 0)return[r];let s=Z(t,"y","meshgrid",t instanceof Me?t.dtype:"float32"),a=St(r.shape),i=St(s.shape);return e==="xy"?(r=mt(r,[1,-1]),s=mt(s,[-1,1]),[Oe(Gr([i,1],r.dtype),r),Oe(s,Gr([1,a],s.dtype))]):(r=mt(r,[-1,1]),s=mt(s,[1,-1]),[Oe(r,Gr([1,i],r.dtype)),Oe(Gr([a,1],s.dtype),s)])}let ju=ct({minimum_:function(n,t){let e=Z(n,"a","minimum"),r=Z(t,"b","minimum");[e,r]=yn(e,r),e.dtype==="bool"&&(e=ee(e,"int32"),r=ee(r,"int32")),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(fu,s)}}),o1=ct({mirrorPad_:function(n,t,e){z(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let r=Z(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");z(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let s=e==="reflect"?1:0;for(let o=0;o<r.rank;o++)z(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),z(t[o][0]>=0&&t[o][0]<=r.shape[o]-s&&t[o][1]>=0&&t[o][1]<=r.shape[o]-s,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`);let a={paddings:t,mode:e},i={x:r};return dt.runKernel(rc,i,a)}}),u1=ct({mod_:function(n,t){let e=Z(n,"a","mod"),r=Z(t,"b","mod");[e,r]=yn(e,r);let s={a:e,b:r};return dt.runKernel(mu,s)}}),Yc=ct({moments_:function(n,t=null,e=!1){let r=ge(t,(n=Z(n,"x","moments")).shape),s=bn(n,r,e),a=s.shape;e||(a=xn(s.shape,r));let i=Ze(ne(ee(n,"float32"),mt(s,a)));return{mean:s,variance:bn(i,r,e)}}}),Zk=ct({multiRNNCell_:function(n,t,e,r){let s=Z(t,"data","multiRNNCell"),a=Fc(e,"c","multiRNNCell"),i=Fc(r,"h","multiRNNCell"),o=s,l=[];for(let h=0;h<n.length;h++){let p=n[h](o,a[h],i[h]);l.push(p[0]),l.push(p[1]),o=p[1]}let c=[],u=[];for(let h=0;h<l.length;h+=2)c.push(l[h]),u.push(l[h+1]);return[c,u]}}),Jk=ct({multinomial_:function(n,t,e,r=!1){let s=Z(n,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();let o={logits:i===1?mt(s,[1,-1]):s},l={numSamples:t,seed:e,normalized:r},c=dt.runKernel(Tp,o,l);return i===1?mt(c,[c.size]):c}}),mo=ct({notEqual_:function(n,t){let e=Z(n,"a","notEqual","string_or_numeric"),r=Z(t,"b","notEqual","string_or_numeric");[e,r]=yn(e,r),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(ac,s)}}),Vd=ct({oneHot_:function(n,t,e=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:Z(n,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:e,offValue:r};return dt.runKernel(oc,a,i)}}),Hr=ct({onesLike_:function(n){let t={x:Z(n,"x","onesLike")};return dt.runKernel(ic,t)}}),Qk=ct({outerProduct_:function(n,t){let e=Z(n,"v1","outerProduct"),r=Z(t,"v2","outerProduct");z(e.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${r.rank}.`);let s=mt(e,[-1,1]),a=mt(r,[1,-1]);return Oe(s,a)}}),$a=ct({pad_:function(n,t,e=0){let r=Z(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let s={paddings:t,constantValue:e},a={x:r};return dt.runKernel(lc,a,s)}}),tI=ct({pad1d_:function(n,t,e=0){return z(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),$a(n,[t],e)}}),eI=ct({pad2d_:function(n,t,e=0){return z(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$a(n,t,e)}}),nI=ct({pad3d_:function(n,t,e=0){return z(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$a(n,t,e)}}),rI=ct({pad4d_:function(n,t,e=0){return z(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$a(n,t,e)}}),Zc=ct({spaceToBatchND_:function(n,t,e){let r=Z(n,"x","spaceToBatchND");z(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),z(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),z(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+e[l-1][0]+e[l-1][1])%t[l-1]==0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let s={x:r},a={blockShape:t,paddings:e};return dt.runKernel(xc,s,a)}}),l1=ct({pool_:function(n,t,e,r,s,a,i){s==null&&(s=[1,1]),a==null&&(a=1),r===0&&(r="valid");let o=Z(n,"x","maxPool"),l=o,c=!1;o.rank===3&&(c=!0,l=mt(o,[1,o.shape[0],o.shape[1],o.shape[2]])),z(Hn(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let u=Jr(l.shape,t,a,s,r),h=[u.dilationHeight,u.dilationWidth],p;p=r==="same"?function(_,M){let Y=_.map((rt,lt)=>rt+(rt-1)*(M[lt]-1)),tt=Y.map(rt=>rt-1),Q=tt.map(rt=>Math.floor(rt/2)),et=tt.map((rt,lt)=>rt-Q[lt]);return tt.map((rt,lt)=>[Q[lt],et[lt]])}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];let d=h[0]===1&&h[1]===1,[f,m]=function(_,M,Y){let tt=Y.map(kt=>kt[0]),Q=Y.map(kt=>kt[1]),et=_.concat(tt,Q),rt=M.map((kt,Tt)=>(kt-et[Tt]%kt)%kt),lt=Q.map((kt,Tt)=>kt+rt[Tt]),ft=M.map((kt,Tt)=>[tt[Tt],lt[Tt]]),yt=M.map((kt,Tt)=>[0,rt[Tt]]);return[ft,yt]}([u.inHeight,u.inWidth],h,p),g=d?r:"valid",y=d?l:Zc(l,h,f),b=(e==="avg"?()=>Pc(y,t,a,g,i):()=>Xc(y,t,a,g,i))(),$=d?b:Bc(b,h,m);return c?mt($,[$.shape[1],$.shape[2],$.shape[3]]):$}}),Jc=ct({prelu_:function(n,t){let e={x:Z(n,"x","prelu"),alpha:Z(t,"alpha","prelu")};return dt.runKernel(cc,e)}}),c1=ct({prod_:function(n,t=null,e=!1){let r=Z(n,"x","prod");r.dtype==="bool"&&(r=ee(r,"int32"));let s={x:r},a={axis:t,keepDims:e};return dt.runKernel(hc,s,a)}}),sI=ct({raggedGather_:function(n,t,e,r){let s={paramsNestedSplits:n.map((o,l)=>Z(o,`tensors${l}`,"raggedGather","int32")),paramsDenseValues:Z(t,"paramsDenseValues","raggedGather"),indices:Z(e,"indices","raggedGather","int32")},a={outputRaggedRank:r},i=dt.runKernel(_p,s,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),aI=ct({raggedTensorToTensor_:function(n,t,e,r,s){let a=Z(n,"shape","raggedTensorToTensor","int32"),i=Z(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:Z(e,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map((c,u)=>Z(c,`tensors${u}`,"raggedTensorToTensor","int32"))},l={rowPartitionTypes:s};return dt.runKernel(Ap,o,l)}}),iI=ct({rand_:function(n,t,e){let r=St(n),s=null;if(e==null||e==="float32")s=new Float32Array(r);else if(e==="int32")s=new Int32Array(r);else{if(e!=="bool")throw new Error(`Unknown data type ${e}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return dt.makeTensor(s,n,e)}});var go=__webpack_require__(377);class Ud{constructor(t,e,r,s,a){this.mean=t,this.stdDev=e,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let i=a||Math.random();this.random=go.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let t,e,r=!1;for(;!r;){let s,a,i;do s=2*this.random()-1,a=2*this.random()-1,i=s*s+a*a;while(i>=1||i===0);let o=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*s*o,e=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(t)||(r=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class oI{constructor(t,e,r,s){this.alpha=t,this.beta=1/e,this.dtype=r;let a=s||Math.random();this.randu=go.alea(a.toString()),this.randn=new Ud(0,1,r,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,r,s,a,i;for(;;){do s=this.randn.nextValue(),i=1+this.c*s;while(i<=0);if(i*=i*i,t=s*s,e=1-.331*t*t,r=.5*t+this.d*(1-i+Math.log(i)),a=this.randu(),a<e||Math.log(a)<r)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class uI{constructor(t=0,e=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=go.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}let lI=ct({randomGamma_:function(n,t,e=1,r="float32",s){if(e==null&&(e=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let a=new oI(t,e,r,s),i=Fe(n,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),Gd=ct({randomNormal_:function(n,t=0,e=1,r,s){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let a=new Ud(t,e,r,!1,s),i=Fe(n,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),cI=ct({randomStandardNormal_:function(n,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Gd(n,0,1,t,e)}}),qu=ct({randomUniform_:function(n,t=0,e=1,r="float32",s){let a=Fe(n,r),i=new uI(t,e,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});function Ku(n,t,e=1,r="float32"){if(e===0)throw new Error("Cannot have a step of zero");let s={start:n,stop:t,step:e,dtype:r};return dt.runKernel(Rp,{},s)}let Xu=ct({real_:function(n){let t={input:Z(n,"input","real")};return dt.runKernel(Fp,t)}}),h1=ct({reciprocal_:function(n){let t={x:Z(n,"x","reciprocal")};return dt.runKernel(bu,t)}}),_s=ct({relu_:function(n){let t={x:Z(n,"x","relu")};return dt.runKernel(xu,t)}}),Hd=ct({relu6_:function(n){let t={x:Z(n,"x","relu6")};return dt.runKernel(vu,t)}}),ts=ct({reverse_:function(n,t){let e={x:Z(n,"x","reverse")},r={dims:t};return dt.runKernel(mc,e,r)}}),hI=ct({reverse1d_:function(n){let t=Z(n,"x","reverse");return z(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ts(t,0)}}),pI=ct({reverse2d_:function(n,t){let e=Z(n,"x","reverse");return z(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),ts(e,t)}}),dI=ct({reverse3d_:function(n,t){let e=Z(n,"x","reverse");return z(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),ts(e,t)}}),fI=ct({reverse4d_:function(n,t){let e=Z(n,"x","reverse");return z(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),ts(e,t)}}),jd=ct({round_:function(n){let t={x:Z(n,"x","round")};return dt.runKernel(wu,t)}}),qd=ct({rsqrt_:function(n){let t={x:Z(n,"x","rsqrt","float32")};return dt.runKernel(ku,t)}}),Kd=ct({selu_:function(n){let t={x:Z(n,"x","selu")};return dt.runKernel(Iu,t)}}),Xd=ct({separableConv2d_:function(n,t,e,r,s,a=[1,1],i="NHWC"){let o=Z(n,"x","separableConv2d"),l=Z(t,"depthwiseFilter","separableConv2d"),c=Z(e,"pointwiseFilter","separableConv2d"),u=o,h=!1;if(o.rank===3&&(h=!0,u=mt(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");z(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),z(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),z(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),z(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),z(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let p=l.shape[2],d=l.shape[3];z(c.shape[2]===p*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${c.shape[2]}.`);let f=Wu(u,l,r,s,i,a),m=Sa(f,c,1,"valid",i);return h?mt(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),mI=async function(n,t){let e=Z(n,"x","setdiff1d"),r=Z(t,"y","setdiff1d");z(e.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${r.dtype}).`),z(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),z(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let s=await e.data(),a=await r.data(),i=new Set(a),o=0;for(let u=0;u<s.length;u++)i.has(s[u])||o++;let l=new Fn([o],e.dtype),c=new Fn([o],"int32");for(let u=0,h=0;u<s.length;u++)i.has(s[u])||(l.values[h]=s[u],c.values[h]=u,h++);return[l.toTensor(),c.toTensor()]},p1=ct({sign_:function(n){let t={x:Z(n,"x","sign")};return dt.runKernel(Tu,t)}}),Yd=ct({sin_:function(n){let t={x:Z(n,"x","sin","float32")};return dt.runKernel(Nu,t)}}),Zd=ct({sinh_:function(n){let t={x:Z(n,"x","sinh")};return dt.runKernel(Su,t)}}),Qc=ct({slice1d_:function(n,t,e){let r=Z(n,"x","slice1d");return z(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),ve(r,[t],[e])}}),Jd=ct({slice2d_:function(n,t,e){let r=Z(n,"x","slice2d");return z(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),ve(r,t,e)}}),th=ct({slice3d_:function(n,t,e){let r=Z(n,"x","slice3d");return z(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),ve(r,t,e)}}),Yu=ct({slice4d_:function(n,t,e){let r=Z(n,"x","slice4d");return z(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),ve(r,t,e)}}),eh=ct({softmax_:function(n,t=-1){let e=Z(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let r={logits:e},s={dim:t};return dt.runKernel(wc,r,s)}}),nh=ct({fft_:function(n){z(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);let t={input:n};return dt.runKernel(Re,t)}}),Zu=ct({ifft_:function(n){z(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);let t={input:n};return dt.runKernel(xp,t)}}),Qd=ct({irfft_:function(n){let t=n.shape[n.shape.length-1],e=n.size/t,r;if(t<=2){let s=mt(n,[e,t]);r=Zu(s)}else{let s=[e,2*(t-1)],a=mt(Xu(n),[e,t]),i=mt(Hc(n),[e,t]),o=ts(ve(a,[0,1],[e,t-2]),1),l=ht(ts(ve(i,[0,1],[e,t-2]),1),xe(-1)),c=un([a,o],1),u=un([i,l],1),h=mt(ba(c,u),[s[0],s[1]]);r=Zu(h)}if(r=Xu(r),n.rank===3&&n.shape[0]!==0){let s=r,a=n.shape[0];r=mt(r,[a,r.shape[0]/a,r.shape[1]]),s.dispose()}return r}}),Rr=ct({split_:function(n,t,e=0){let r={x:Z(n,"x","split")},s={numOrSizeSplits:t,axis:e};return dt.runKernel(vc,r,s)}}),rh=ct({rfft_:function(n,t){z(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1],r=n.size/e,s;if(t!=null&&t<e){let f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,s=ve(n,f,m),e=t}else if(t!=null&&t>e){let f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,s=un([n,Cn(f)],n.shape.length-1),e=t}else s=n;let a=Pe(s),i=mt(ba(s,a),[r,e]),o=nh(i),l=Math.floor(e/2)+1,c=Xu(o),u=Hc(o),h=Rr(c,[l,e-l],c.shape.length-1),p=Rr(u,[l,e-l],u.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=l,mt(ba(h[0],p[0]),d)}}),tf=ct({squaredDifference_:function(n,t){let e=Z(n,"a","squaredDifference"),r=Z(t,"b","squaredDifference");[e,r]=yn(e,r),Ce(e.shape,r.shape);let s={a:e,b:r};return dt.runKernel(_u,s,{})}}),Fr=ct({squeeze_:function(n,t){let e=Z(n,"x","squeeze","string_or_numeric");return mt(e,Zn(e.shape,t).newShape)}}),jr=ct({stack_:function(n,t=0){let e=Fc(n,"tensors","stack","string_or_numeric");z(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&z(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let r=e,s={axis:t};return dt.runKernel(uc,r,s)}}),yo=ct({step_:function(n,t=0){let e={x:Z(n,"x","step")},r={alpha:t};return dt.runKernel(Ou,e,r)}}),d1=ct({stridedSlice_:function(n,t,e,r,s=0,a=0,i=0,o=0,l=0){let c={x:Z(n,"x","stridedSlice","string_or_numeric")},u={begin:t,end:e,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return dt.runKernel(Gp,c,u)}}),f1=ct({tan_:function(n){let t={x:Z(n,"x","tan","float32")};return dt.runKernel(Ru,t)}});function wn(n,t){Ht(n);let e=ya(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return xa(n,null,e,t)}function qs(n,t,e){if(Ht(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=ya(n,e);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return xa(n,t,r,e)}function gI(n,t,e){if(Ht(n),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=ya(n,e);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return xa(n,t,r,e)}function yI(n,t,e){if(Ht(n),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=ya(n,e);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return xa(n,t,r,e)}function bI(n,t,e){if(Ht(n),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=ya(n,e);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return xa(n,t=t||r,r,e)}let m1=ct({topk_:function(n,t=1,e=!0){let r=Z(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);let a={x:r},i={k:t,sorted:e},[o,l]=dt.runKernel(Kp,a,i);return{values:o,indices:l}}}),ef=ct({truncatedNormal_:function(n,t=0,e=1,r,s){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new Ud(t,e,r,!0,s),i=Fe(n,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),g1=ct({unique_:function(n,t=0){let e=Z(n,"x","unique","string_or_numeric");z(e.rank>0,()=>"The input tensor must be at least 1D");let r={x:e},s={axis:t},[a,i]=dt.runKernel(Yp,r,s);return{values:a,indices:i}}}),nf=ct({unsortedSegmentSum_:function(n,t,e){let r=Z(n,"x","unsortedSegmentSum"),s=Z(t,"segmentIds","unsortedSegmentSum","int32");z(Ge(e),()=>"numSegments must be of dtype int");let a={x:r,segmentIds:s},i={numSegments:e};return dt.runKernel(Ic,a,i)}}),ys=ct({unstack_:function(n,t=0){let e=Z(n,"x","unstack","string_or_numeric");z(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let r={value:e},s={axis:t};return dt.runKernel(kc,r,s)}});function xI(n,t){return Wd(n,t,"right")}function y1(n,t=!0,e,r){return dt.makeVariable(n,t,e,r)}function rf(n,t){let e=[];for(let a=0;a<t.length;a++)t[a]&&e.push(a);let r=Fe(n,"int32"),s=Fe([e.length,n.length],"int32");for(let a=0;a<e.length;a++){let i=r.indexToLoc(e[a]),o=a*n.length;s.values.set(i,o)}return s.toTensor()}let b1=async function(n){let t=Z(n,"condition","whereAsync","bool"),e=await t.data(),r=rf(t.shape,e);return n!==t&&t.dispose(),r},vI=async function(n,t,e){let r=Z(n,"tensor","boolMask"),s=Z(t,"mask","boolMask","bool"),a=e??0,i=s.rank,o=r.shape;z(i>0,()=>"mask cannot be scalar"),Jt(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+i;m++)l*=o[m];let c=o.slice(0,a).concat([l],o.slice(a+i)),u=mt(r,c),h=mt(s,[-1]),p=await b1(h),d=Fr(p,[1]),f=Hu(u,d,a);return n!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),u.dispose(),h.dispose(),p.dispose(),f},Le=ct({transpose_:function(n,t,e){let r=Z(n,"x","transpose");if(t==null&&(t=r.shape.map((i,o)=>o).reverse()),z(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{z(i>=0&&i<r.rank,()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`)}),r.rank<=1)return r.clone();let s={x:r},a={perm:t};return r.dtype==="complex64"?wt(()=>{let i=Xu(r),o=Hc(r);return i=dt.runKernel(eo,{x:i},a),o=dt.runKernel(eo,{x:o},a),e&&(o=cn(o)),ba(i,o)}):dt.runKernel(eo,s,a)}}),wI=ct({movingAverage_:function(n,t,e,r,s=!0){let a=Z(n,"v","movingAverage"),i=Z(t,"x","movingAverage"),o=Z(e,"decay","movingAverage");var l,c;c=i,z((l=a).dtype===c.dtype,()=>`The dtypes of the first(${l.dtype}) and second(${c.dtype}) input must match`),z(se(a.shape,i.shape),()=>"Shape mismatch in v and x");let u=xe(1),h=ne(u,o),p=ht(ne(i,a),h);if(s){z(r!=null,()=>"When using zeroDebias: true, step is required.");let d=Z(r,"step","movingAverage");p=oe(p,ne(u,Ca(o,d)))}return Bt(a,p)}});function x1(n,t,e){let r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(e.rank<s)throw new Error(a+` update.rank < ${s}. `);if(n.length<r+(e.rank-s))throw new Error(a+` Output shape length < ${r+(e.rank-s)}`);if(e.rank!==s+n.length-r)throw new Error(a+" update.rank != "+(s+n.length-r));for(let i=0;i<s;++i)if(e.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-s;++i)if(e.shape[i+s]!==n[i+r])throw new Error(a+` updates.shape[${i+s}] (${e.shape[i+s]}) != shape[${i+s}] (${n[i+s]})`)}function v1(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}x1(e,t,n)}function Ju(n,t,e){let r=t.shape.length,s=r>1?t.shape[r-1]:1,a=e.length,i=1;for(let l=s;l<a;++l)i*=e[l];let o=s<1?1:s;return{sliceRank:s,numUpdates:St(t.shape)/o,sliceSize:i,strides:[...Yt(e.slice(0,s)),1],outputSize:St(e)}}let kI=ct({scatterND_:function(n,t,e){let r=Z(n,"indices","scatterND","int32"),s=Z(t,"updates","scatterND");v1(s,r,e);let a={indices:r,updates:s},i={shape:e};return dt.runKernel(Mp,a,i)}}),II=ct({sparseToDense_:function(n,t,e,r=0){let s=Z(n,"sparseIndices","sparseToDense","int32"),a=Z(t,"sparseValues","sparseToDense","string_or_numeric"),i=Z(r,"defaultValue","sparseToDense",a.dtype);(function(c,u,h,p){if(c.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${c.dtype}.`);if(c.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${c.shape}.`);let d=c.rank>0?c.shape[0]:1,f=c.rank>1?c.shape[1]:1;if(h.length!==f)throw new Error(`outputShape has incorrect number of elements:, ${h.length}, should be: ${f}.`);let m=u.size;if(u.rank!==0&&(u.rank!==1||m!==d))throw new Error(`sparseValues has incorrect shape ${u.shape}, should be [] or [${d}]`);if(u.dtype!==p.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")})(s,a,e,i);let o={sparseIndices:s,sparseValues:a,defaultValue:i},l={outputShape:e};return dt.runKernel(Vp,o,l)}}),NI=ct({gatherND_:function(n,t){let e=Z(t,"indices","gatherND","int32"),r={params:Z(n,"x","gatherND","string_or_numeric"),indices:e};return dt.runKernel(iu,r)}}),w1=ct({dropout_:function(n,t,e,r){let s=Z(n,"x","dropout");if(z(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),z(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof Me?s.clone():s;let a=function(l,c){if(c==null)return l.shape.slice();if(se(l.shape,c))return c;if(l.shape.length===c.length){let u=[];for(let h=0;h<l.shape.length;h++)c[h]==null&&l.shape[h]!=null?u.push(l.shape[h]):u.push(c[h]);return u}return c}(s,e),i=1-t,o=oe(Gu(Bt(qu(a,0,1,"float32",r),i)),i);return ht(s,o)}});function k1(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function sf(n,t,e){let r=1-n%2,s=new Float32Array(n);for(let a=0;a<n;++a){let i=2*Math.PI*a/(n+r-1);s[a]=t-e*Math.cos(i)}return wn(s,"float32")}let SI=async function(n,t,e=1){let r=Z(n,"predictions","inTopK"),s=Z(t,"targets","inTopK");z(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),z(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Jt(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=r.shape[r.shape.length-1];z(e>0&&e<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${e}`);let i=await r.data(),o=await s.data(),[l,c]=[i.length/a,a],u=Ae("bool",l);for(let h=0;h<l;h++){let p=h*c,d=i.subarray(p,p+c),f=[];for(let m=0;m<d.length;m++)f.push({value:d[m],index:m});f.sort((m,g)=>g.value-m.value),u[h]=0;for(let m=0;m<e;m++)if(f[m].index===o[h]){u[h]=1;break}}return n!==r&&r.dispose(),t!==s&&s.dispose(),ds(u,s.shape,"bool")},af=ct({conv2DBackpropFilter_:function(n,t,e,r,s,a="NHWC",i){let o=n;n.rank===3&&(o=mt(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=mt(t,[1,t.shape[0],t.shape[1],t.shape[2]])),z(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),z(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),z(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let c=a==="NHWC"?o.shape[3]:o.shape[1],u=a==="NHWC"?l.shape[3]:l.shape[1];z(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),z(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),ar("conv2dDerFilter",s,i);let h={x:o,dy:l},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:e};return dt.runKernel(eu,h,p)}});function sh(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return ht(n,yo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function ah(n,t){let e=t,r=Sn(n.shape,t.shape);return r.length>0&&(e=ce(e,r)),mt(e,n.shape)}function ih(n,t,e,r){if(t==="linear")return n;if(t==="relu")return _s(n);if(t==="elu")return Vu(n);if(t==="relu6")return Hd(n);if(t==="prelu")return Jc(n,e);if(t==="leakyrelu")return jc(n,r);if(t==="sigmoid")return fs(n);throw new Error(`Unknown fused activation ${t}.`)}let oh=(n,t)=>!(n>0)||t==="linear",I1=ct({fusedConv2d_:function({x:n,filter:t,strides:e,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",oh(dt.state.gradientDepth,l)===!1){z(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let Y=Sa(n,t,e,r,s,a,i);return o!=null&&(Y=Bt(Y,o)),ih(Y,l,c,u)}let h=Z(n,"x","conv2d","float32"),p=Z(t,"filter","conv2d","float32"),d=h,f=!1;h.rank===3&&(f=!0,d=mt(h,[1,h.shape[0],h.shape[1],h.shape[2]])),z(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),z(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),ar("fused conv2d",r,i);let m=s==="NHWC"?d.shape[3]:d.shape[1];z(p.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),z(Hn(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let g=Dn(d.shape,p.shape,e,a,r,i),y,b;if(o!=null&&(y=Z(o,"bias","fused conv2d"),[y]=yn(y,h),s==="NHWC"?Ce(g.outShape,y.shape):(z(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),z(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`))),c!=null){let Y=c.shape;if(z(Y.length<=1||Y.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${Y.length}.`),Y.length===1)z(Y[0]===1||Y[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${Y}) is not compatible with the number of output channels (${g.outChannels}).`);else if(Y.length===3)try{Ce(Y,g.outShape)}catch{let Q=`Error in fused conv2d: PReLU activation weights (${Y}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(Q)}b=Z(c,"prelu weights","fused conv2d")}let $=(Y,tt)=>{z(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);let[Q,et,rt,lt]=tt,ft=sh(Y,rt,l);z(Na(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let yt=[_d(et.shape,ft,Q,e,r),af(et,ft,Q.shape,e,r)];if(lt!=null){let kt=ah(lt,ft);yt.push(kt)}return yt},_={x:d,filter:p,bias:y,preluActivationWeights:b},M={strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?Us((tt,Q,et)=>{let rt=dt.runKernel(Tc,_,M);return et([Q,tt,rt]),f&&(rt=mt(rt,[rt.shape[1],rt.shape[2],rt.shape[3]])),{value:rt,gradFunc:$}})(d,p):Us((tt,Q,et,rt)=>{let lt=dt.runKernel(Tc,_,M);return rt([Q,tt,lt,et]),f&&(lt=mt(lt,[lt.shape[1],lt.shape[2],lt.shape[3]])),{value:lt,gradFunc:$}})(d,p,y)}}),N1=ct({depthwiseConv2dNativeBackpropFilter_:function(n,t,e,r,s,a=[1,1],i){let o=n;n.rank===3&&(o=mt(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=mt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:o,dy:l},u={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:e};return dt.runKernel(ti,c,u)}}),S1=ct({depthwiseConv2dNativeBackpropInput_:function(n,t,e,r,s,a=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=mt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:o,filter:e},u={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:n},h=dt.runKernel(su,c,u);return l?mt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),TI=ct({fusedDepthwiseConv2d_:function({x:n,filter:t,strides:e,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(oh(dt.state.gradientDepth,l)===!1){let M=Wu(n,t,e,r,s,a,i);return o!=null&&(M=Bt(M,o)),ih(M,l,c,u)}let h=Z(n,"x","depthwiseConv2d","float32"),p=Z(t,"filter","depthwiseConv2d","float32"),d=h,f=!1;h.rank===3&&(f=!0,d=mt(h,[1,h.shape[0],h.shape[1],h.shape[2]])),z(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),z(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),z(d.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),z(Hn(e,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),ar("fused depthwiseConv2d",r,i);let m=Dn(d.shape,p.shape,e,a,r,i,!0),g,y;o!=null&&(g=Z(o,"bias","fused conv2d"),[g]=yn(g,h),Ce(m.outShape,g.shape)),c!=null&&(y=Z(c,"prelu weights","fused depthwiseConv2d"));let b=(M,Y)=>{z(Na(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[tt,Q,et,rt]=Y,lt=sh(M,et,l),ft=S1(Q.shape,lt,tt,e,r,a,i),yt=N1(Q,lt,tt.shape,e,r,a,i);return rt!=null?[ft,yt,ah(g,lt)]:[ft,yt]},$={x:d,filter:p,bias:g,preluActivationWeights:y},_={strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?Us((Y,tt,Q)=>{let et=dt.runKernel(Cc,$,_);return Q([tt,Y,et]),f&&(et=mt(et,[et.shape[1],et.shape[2],et.shape[3]])),{value:et,gradFunc:b}})(d,p):Us((Y,tt,Q,et)=>{let rt=dt.runKernel(Cc,$,_);return et([tt,Y,rt,Q]),f&&(rt=mt(rt,[rt.shape[1],rt.shape[2],rt.shape[3]])),{value:rt,gradFunc:b}})(d,p,g)}}),of=ct({fusedMatMul_:function({a:n,b:t,transposeA:e=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(oh(dt.state.gradientDepth,a)===!1){let rt=Oe(n,t,e,r);return s!=null&&(rt=Bt(rt,s)),ih(rt,a,i,o)}let l=Z(n,"a","fused matMul"),c=Z(t,"b","fused matMul");[l,c]=yn(l,c);let u=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?c.shape[c.rank-1]:c.shape[c.rank-2],p=e?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=St(f),y=St(m);z(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${r} must match.`);let b=Ce(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,d]),$=mt(l,e?[g,u,p]:[g,p,u]),_=mt(c,r?[y,d,h]:[y,h,d]),M,Y;s!=null&&(M=Z(s,"bias","fused matMul"),[M]=yn(M,l),Ce(b,M.shape)),i!=null&&(Y=Z(i,"prelu weights","fused matMul"));let tt=(rt,lt)=>{let[ft,yt,kt,Tt]=lt,It=sh(mt(rt,kt.shape),kt,a),Et,_t;return e||r?!e&&r?(Et=Oe(It,yt,!1,!1),_t=Oe(It,ft,!0,!1)):e&&!r?(Et=Oe(yt,It,!1,!0),_t=Oe(ft,It,!1,!1)):(Et=Oe(yt,It,!0,!0),_t=Oe(It,ft,!0,!0)):(Et=Oe(It,yt,!1,!0),_t=Oe(ft,It,!0,!1)),s!=null?[Et,_t,ah(Tt,It)]:[Et,_t]},Q={a:$,b:_,bias:M,preluActivationWeights:Y},et={transposeA:e,transposeB:r,activation:a,leakyreluAlpha:o};return s==null?Us((lt,ft,yt)=>{let kt=dt.runKernel(Sc,Q,et);return yt([lt,ft,kt]),{value:mt(kt,b),gradFunc:tt}})($,_):Us((lt,ft,yt,kt)=>{let Tt=dt.runKernel(Sc,Q,et);return kt([lt,ft,Tt,yt]),{value:mt(Tt,b),gradFunc:tt}})($,_,M)}}),CI=ct({hammingWindow_:function(n){return sf(n,.54,.46)}}),T1=ct({hannWindow_:function(n){return sf(n,.5,.5)}}),C1=ct({frame_:function(n,t,e,r=!1,s=0){let a=0,i=[];for(;a+t<=n.size;)i.push(ve(n,a,t)),a+=e;if(r)for(;a<n.size;){let o=a+t-n.size,l=un([ve(n,a,t-o),po([o],s)]);i.push(l),a+=e}return i.length===0?qs([],[0,t]):mt(un(i),[i.length,t])}}),$I=ct({stft_:function(n,t,e,r,s=T1){r==null&&(r=k1(t));let a=C1(n,t,e),i=ht(a,s(t));return rh(i,r)}}),EI=ct({cropAndResize_:function(n,t,e,r,s="bilinear",a=0){let i=Z(n,"image","cropAndResize"),o=Z(t,"boxes","cropAndResize","float32"),l=Z(e,"boxInd","cropAndResize","int32"),c=o.shape[0];z(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),z(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),z(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),z(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),z(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),z(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);let u={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return dt.runKernel(ua,u,h)}}),_I=ct({flipLeftRight_:function(n){let t=Z(n,"image","flipLeftRight","float32");z(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return dt.runKernel(je,e,{})}}),AI=ct({grayscaleToRGB_:function(n){let t=Z(n,"image","grayscaleToRGB"),e=t.rank-1,r=t.shape[e];z(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),z(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let s=new Array(t.rank);return s.fill(1,0,e),s[e]=3,Qr(t,s)}}),RI=ct({rotateWithOffset_:function(n,t,e=0,r=.5){let s=Z(n,"image","rotateWithOffset","float32");z(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);let a={image:s},i={radians:t,fillValue:e,center:r};return dt.runKernel(Jp,a,i)}});function bo(n,t,e,r,s,a){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),a==null&&(a=0);let i=n.shape[0];return e=Math.min(e,i),z(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),z(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),z(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),z(t.rank===1,()=>"scores must be a 1D tensor"),z(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),z(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:e,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}let FI=ct({nonMaxSuppression_:function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY){let a=Z(n,"boxes","nonMaxSuppression","float32"),i=Z(t,"scores","nonMaxSuppression","float32"),o=bo(a,i,e,r,s),l={maxOutputSize:e=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return dt.runKernel(Cp,{boxes:a,scores:i},l)}});function DI(n,t,e){let r=function(a,i,o){return function(l,c,u){let h=0,p=l.length,d=0,f=!1;for(;h<p;){d=h+(p-h>>>1);let m=u(c,l[d]);m>0?h=d+1:(p=d,f=!m)}return f?h:-h-1}(a,i,o||OI)}(n,t,e),s=r<0?-(r+1):r;n.splice(s,0,t)}function OI(n,t){return n>t?1:n<t?-1:0}function uf(n,t,e,r,s){return hf(n,t,e,r,s,0)}function lf(n,t,e,r,s,a){return hf(n,t,e,r,s,0,!1,a,!0)}function cf(n,t,e,r,s,a){return hf(n,t,e,r,s,a,!0)}function hf(n,t,e,r,s,a,i=!1,o=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>s&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort($1);let u=a>0?-.5/a:0,h=[],p=[];for(;h.length<e&&c.length>0;){let g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:$}=g;if(y<s)break;let _=!1;for(let M=h.length-1;M>=$;--M){let Y=MI(n,b,h[M]);if(Y>=r){_=!0;break}if(g.score=g.score*LI(r,u,Y),g.score<=s)break}g.suppressBeginIndex=h.length,_||(g.score===y?(h.push(b),p.push(g.score)):g.score>s&&DI(c,g,$1))}let d=h.length,f=e-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function MI(n,t,e){let r=n.subarray(4*t,4*t+4),s=n.subarray(4*e,4*e+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),u=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(l-i),f=(h-c)*(p-u);if(d<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(i,u),y=Math.min(o,h),b=Math.min(l,p),$=Math.max(y-m,0)*Math.max(b-g,0);return $/(d+f-$)}function LI(n,t,e){let r=Math.exp(t*e*e);return e<=n?r:0}function $1(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}let zI=async function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY){let a=Z(n,"boxes","nonMaxSuppressionAsync"),i=Z(t,"scores","nonMaxSuppressionAsync"),o=bo(a,i,e,r,s);e=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;let l=await Promise.all([a.data(),i.data()]),c=l[0],u=l[1],{selectedIndices:h}=uf(c,u,e,r,s);return a!==n&&a.dispose(),i!==t&&i.dispose(),wn(h,"int32")},PI=ct({nonMaxSuppressionWithScore_:function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=0){let i=Z(n,"boxes","nonMaxSuppression"),o=Z(t,"scores","nonMaxSuppression"),l=bo(i,o,e,r,s,a),c={boxes:i,scores:o},u={maxOutputSize:e=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=dt.runKernel(Ep,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}}),BI=async function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=0){let i=Z(n,"boxes","nonMaxSuppressionAsync"),o=Z(t,"scores","nonMaxSuppressionAsync"),l=bo(i,o,e,r,s,a);e=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;let c=await Promise.all([i.data(),o.data()]),u=c[0],h=c[1],{selectedIndices:p,selectedScores:d}=cf(u,h,e,r,s,a);return i!==n&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:wn(p,"int32"),selectedScores:wn(d)}},WI=ct({nonMaxSuppressionPadded_:function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){let i=Z(n,"boxes","nonMaxSuppression"),o=Z(t,"scores","nonMaxSuppression"),l=bo(i,o,e,r,s,null),c={boxes:i,scores:o},u={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=dt.runKernel($p,c,u);return{selectedIndices:h[0],validOutputs:h[1]}}}),VI=async function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){let i=Z(n,"boxes","nonMaxSuppressionAsync"),o=Z(t,"scores","nonMaxSuppressionAsync"),l=bo(i,o,e,r,s,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=lf(p,d,c,u,h,a);return i!==n&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:wn(f,"int32"),validOutputs:xe(m,"int32")}},E1=ct({resizeBilinear_:function(n,t,e=!1,r=!1){let s=Z(n,"images","resizeBilinear");z(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),z(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),z(r===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;s.rank===3&&(i=!0,a=mt(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let[]=t,o={images:a},l={alignCorners:e,halfPixelCenters:r,size:t},c=dt.runKernel(fc,o,l);return i?mt(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),_1=ct({resizeNearestNeighbor_:function(n,t,e=!1,r=!1){let s=Z(n,"images","resizeNearestNeighbor");z(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),z(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),z(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),z(r===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;s.rank===3&&(i=!0,a=mt(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let[]=t,o={images:a},l={alignCorners:e,halfPixelCenters:r,size:t},c=dt.runKernel(dc,o,l);return i?mt(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),UI=ct({threshold_:function(n,t="binary",e=!1,r=.5){let s=Z(n,"image","threshold"),a=s.shape[0]*s.shape[1],i,o,l,c,u=ht(wn([r]),255);if(z(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),z(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),z(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),z(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),s.shape[2]===3){[i,o,l]=Rr(s,[1,1,1],-1);let p=ht(i,.2989),d=ht(o,.587),f=ht(l,.114);c=Bt(Bt(p,d),f)}else c=n;t==="otsu"&&(u=function(p,d){let f,m,g,y,b,$,_=wn([-1]),M=wn([0]),Y=wn([0]);for(let tt=0;tt<p.size-1;tt++){f=ve(p,0,tt+1),m=ve(p,tt+1),b=oe(ce(f),d),$=oe(ce(m),d);let Q=ce(ht(f,Ku(0,f.size)));g=oe(Q,ce(f));let et=po(m.shape,f.size),rt=Bt(Ku(0,m.size),et),lt=ht(m,rt);y=oe(ce(lt),ce(m));let ft=ne(g,y),yt=ne(g,y),kt=ht(b,$);Y=ht(ht(kt,ft),yt);let Tt=Vr(Y,M);M=xr(Tt,Y,M),_=xr(Tt,wn([tt]),_)}return _}(M0(ee(jd(c),"int32"),ds([]),256),a));let h=e?hi(c,u):Vr(c,u);return ee(ht(h,255),"int32")}}),GI=ct({transform_:function(n,t,e="nearest",r="constant",s=0,a){let i=Z(n,"image","transform","float32"),o=Z(t,"transforms","transform","float32");z(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),z(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),z(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:i,transforms:o},c={interpolation:e,fillMode:r,fillValue:s,outputShape:a};return dt.runKernel(Xp,l,c)}}),HI=ct({bandPart_:function(n,t,e){z(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),z(e%1==0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);let r=Z(n,"a","bandPart");z(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(e<=i))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),e<0&&(e=i);let o=mt(Ku(0,a,1,"int32"),[-1,1]),l=Ku(0,i,1,"int32"),c=ne(o,l),u=Es(hi(c,xe(+t,"int32")),ci(c,xe(-e,"int32"))),h=Cn([a,i],r.dtype);return mt(jr(ys(mt(r,[-1,a,i])).map(p=>xr(u,p,h))),s)}}),jI=ct({gramSchmidt_:function(n){let t;if(Array.isArray(n)){t=!1,z(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let s=n[0].shape[0];for(let a=1;a<n.length;++a)z(n[a].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[a].shape[0]} vs. ${s})`)}else t=!0,n=Rr(n,n.shape[0],0).map(s=>Fr(s,[0]));z(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);let e=[],r=n;for(let s=0;s<n.length;++s)e.push(dt.tidy(()=>{let a=r[s];if(s>0)for(let i=0;i<s;++i){let o=ht(ce(ht(e[i],a)),e[i]);a=ne(a,o)}return oe(a,Uu(a,"euclidean"))}));return t?jr(e,0):e}});function A1(n,t=!1){return dt.tidy(()=>{z(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);let e=n.shape[0],r=n.shape[1],s=Md(e),a=Vs(n),i=qs([[1]],[1,1]),o=Vs(i),l=e>=r?r:e;for(let c=0;c<l;++c){let u=a,h=o,p=s;[o,a,s]=dt.tidy(()=>{let d=ve(a,[c,c],[e-c,1]),f=Uu(d),m=ve(a,[c,c],[1,1]),g=xr(Vr(m,0),qs([[-1]]),qs([[1]])),y=ne(m,ht(g,f)),b=oe(d,y);o=b.shape[0]===1?Vs(i):un([i,ve(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let $=cn(oe(Oe(g,y),f)),_=ve(a,[c,0],[e-c,r]),M=ht($,o),Y=Le(o);if(c===0)a=ne(_,Oe(M,Oe(Y,_)));else{let et=ne(_,Oe(M,Oe(Y,_)));a=un([ve(a,[0,0],[c,r]),et],0)}let tt=Le(M),Q=ve(s,[0,c],[e,s.shape[1]-c]);if(c===0)s=ne(Q,Oe(Oe(Q,o),tt));else{let et=ne(Q,Oe(Oe(Q,o),tt));s=un([ve(s,[0,0],[e,c]),et],1)}return[o,a,s]}),De([u,h,p])}return!t&&e>r&&(s=ve(s,[0,0],[e,r]),a=ve(a,[0,0],[r,r])),[s,a]})}let qI=ct({qr_:function(n,t=!1){if(z(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return A1(n,t);{let e=n.shape.slice(0,n.shape.length-2).reduce((i,o)=>i*o),r=ys(mt(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],a=[];return r.forEach(i=>{let[o,l]=A1(i,t);s.push(o),a.push(l)}),[mt(jr(s,0),n.shape),mt(jr(a,0),n.shape)]}}});var wr;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(wr||(wr={}));let Ks=ct({computeWeightedLoss_:function(n,t,e=wr.SUM_BY_NONZERO_WEIGHTS){let r=Z(n,"losses","computeWeightedLoss"),s=null;t!=null&&(s=Z(t,"weights","computeWeightedLoss"));let a=s==null?r:ht(r,s);if(e===wr.NONE)return a;if(e===wr.SUM)return ce(a);if(e===wr.MEAN){if(s==null)return bn(a);{let i=r.size/s.size,o=oe(ce(a),ce(s));return i>1?oe(o,xe(i)):o}}if(e===wr.SUM_BY_NONZERO_WEIGHTS){if(s==null)return oe(ce(a),xe(r.size));{let i=ht(s,Gr(r.shape)),o=ee(ce(mo(i,xe(0))),"float32");return oe(ce(a),o)}}throw Error(`Unknown reduction: ${e}`)}}),KI=ct({absoluteDifference_:function(n,t,e,r=wr.SUM_BY_NONZERO_WEIGHTS){let s=Z(n,"labels","absoluteDifference"),a=Z(t,"predictions","absoluteDifference"),i=null;e!=null&&(i=Z(e,"weights","absoluteDifference")),Jt(s.shape,a.shape,"Error in absoluteDifference: ");let o=Tn(ne(s,a));return Ks(o,i,r)}}),XI=ct({cosineDistance_:function(n,t,e,r,s=wr.SUM_BY_NONZERO_WEIGHTS){let a=Z(n,"labels","cosineDistance"),i=Z(t,"predictions","cosineDistance"),o=null;r!=null&&(o=Z(r,"weights","cosineDistance")),Jt(a.shape,i.shape,"Error in cosineDistance: ");let l=xe(1),c=ne(l,ce(ht(a,i),e,!0));return Ks(c,o,s)}}),YI=ct({hingeLoss_:function(n,t,e,r=wr.SUM_BY_NONZERO_WEIGHTS){let s=Z(n,"labels","hingeLoss"),a=Z(t,"predictions","hingeLoss"),i=null;e!=null&&(i=Z(e,"weights","hingeLoss")),Jt(s.shape,a.shape,"Error in hingeLoss: ");let o=xe(1);s=ne(ht(xe(2),s),o);let l=_s(ne(o,ht(s,a)));return Ks(l,i,r)}}),ZI=ct({huberLoss_:function(n,t,e,r=1,s=wr.SUM_BY_NONZERO_WEIGHTS){let a=Z(n,"labels","huberLoss"),i=Z(t,"predictions","huberLoss"),o=null;e!=null&&(o=Z(e,"weights","huberLoss")),Jt(a.shape,i.shape,"Error in huberLoss: ");let l=xe(r),c=Tn(ne(i,a)),u=ju(c,l),h=ne(c,u),p=Bt(ht(xe(.5),Ze(u)),ht(l,h));return Ks(p,o,s)}}),JI=ct({logLoss_:function(n,t,e,r=1e-7,s=wr.SUM_BY_NONZERO_WEIGHTS){let a=Z(n,"labels","logLoss"),i=Z(t,"predictions","logLoss"),o=null;e!=null&&(o=Z(e,"weights","logLoss")),Jt(a.shape,i.shape,"Error in logLoss: ");let l=xe(1),c=xe(r),u=cn(ht(a,Ur(Bt(i,c)))),h=ht(ne(l,a),Ur(Bt(ne(l,i),c))),p=ne(u,h);return Ks(p,o,s)}}),QI=ct({meanSquaredError_:function(n,t,e,r=wr.SUM_BY_NONZERO_WEIGHTS){let s=Z(n,"labels","meanSquaredError"),a=Z(t,"predictions","meanSquaredError"),i=null;e!=null&&(i=Z(e,"weights","meanSquaredError")),Jt(s.shape,a.shape,"Error in meanSquaredError: ");let o=tf(s,a);return Ks(o,i,r)}}),tN=ct({sigmoidCrossEntropy_:function(n,t,e,r=0,s=wr.SUM_BY_NONZERO_WEIGHTS){let a=Z(n,"multiClassLabels","sigmoidCrossEntropy"),i=Z(t,"logits","sigmoidCrossEntropy"),o=null;if(e!=null&&(o=Z(e,"weights","sigmoidCrossEntropy")),Jt(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let c=xe(r),u=xe(1),h=xe(.5);a=Bt(ht(a,ne(u,c)),ht(h,c))}let l=function(c,u){let h=Z(c,"labels","sigmoidCrossEntropyWithLogits"),p=Z(u,"logits","sigmoidCrossEntropyWithLogits");Jt(h.shape,p.shape,"Error in sigmoidCrossEntropyWithLogits: ");let d=_s(p),f=ht(p,h),m=qc(Wr(cn(Tn(p))));return Bt(ne(d,f),m)}(a,i);return Ks(l,o,s)}}),eN=ct({softmaxCrossEntropy_:function(n,t,e,r=0,s=wr.SUM_BY_NONZERO_WEIGHTS){let a=Z(n,"onehotLabels","softmaxCrossEntropy"),i=Z(t,"logits","softmaxCrossEntropy"),o=null;if(e!=null&&(o=Z(e,"weights","softmaxCrossEntropy")),Jt(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let c=xe(r),u=xe(1),h=xe(a.shape[1]);a=Bt(ht(a,ne(u,c)),oe(c,h))}let l=function(c,u,h=-1){if(h===-1&&(h=u.rank-1),h!==u.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${u.rank} and dim was ${h}`);return Us((d,f,m)=>{let g=Pd(f,[h],!0),y=ne(ee(f,"float32"),g);m([d,y]);let b=cn(ht(y,d));return{value:ce(b,[h]),gradFunc:($,_)=>{let[M,Y]=_,tt=xn($.shape,[h]);return[ht(mt($,tt),ne(ee(M,"float32"),Wr(Y))),ht(mt($,tt),ne(Wr(Y),ee(M,"float32")))]}}})(c,u)}(a,i);return Ks(l,o,s)}}),nN=ct({sparseFillEmptyRows_:function(n,t,e,r){let s=Z(n,"indices","sparseFillEmptyRows","int32"),a=Z(t,"values","sparseFillEmptyRows"),i=Z(e,"denseShape","sparseFillEmptyRows","int32"),o=Z(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:s,values:a,denseShape:i,defaultValue:o},c=dt.runKernel(zp,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}}),rN=ct({sparseReshape_:function(n,t,e){let r=Z(n,"inputIndices","sparseReshape","int32"),s=Z(t,"inputShape","sparseReshape","int32"),a=Z(e,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let i={inputIndices:r,inputShape:s,newShape:a},o=dt.runKernel(Pp,i);return{outputIndices:o[0],outputShape:o[1]}}}),sN=ct({sparseSegmentMean_:function(n,t,e){let r=Z(n,"data","sparseSegmentMean"),s=Z(t,"indices","sparseSegmentMean","int32"),a=Z(e,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let i={data:r,indices:s,segmentIds:a};return dt.runKernel(Bp,i)}}),aN=ct({sparseSegmentSum_:function(n,t,e){let r=Z(n,"data","sparseSegmentSum"),s=Z(t,"indices","sparseSegmentSum","int32"),a=Z(e,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let i={data:r,indices:s,segmentIds:a};return dt.runKernel(Wp,i)}}),iN=ct({stringNGrams_:function(n,t,e,r,s,a,i,o){let l=Z(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let c=Z(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:e,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:c},p=dt.runKernel(Hp,h,u);return{nGrams:p[0],nGramsSplits:p[1]}}}),oN=ct({stringSplit_:function(n,t,e=!0){let r=Z(n,"input","stringSplit","string"),s=Z(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);let a={skipEmpty:e},i={input:r,delimiter:s},o=dt.runKernel(jp,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),uN=ct({stringToHashBucketFast_:function(n,t){let e=Z(n,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let s={input:e};return dt.runKernel(qp,s,r)}}),lN={fft:nh,ifft:Zu,rfft:rh,irfft:Qd},cN={hammingWindow:CI,hannWindow:T1,frame:C1,stft:$I},bs={flipLeftRight:_I,grayscaleToRGB:AI,resizeNearestNeighbor:_1,resizeBilinear:E1,rotateWithOffset:RI,cropAndResize:EI,nonMaxSuppression:FI,nonMaxSuppressionAsync:zI,nonMaxSuppressionWithScore:PI,nonMaxSuppressionWithScoreAsync:BI,nonMaxSuppressionPadded:WI,nonMaxSuppressionPaddedAsync:VI,threshold:UI,transform:GI},R1={bandPart:HI,gramSchmidt:jI,qr:qI},hN={absoluteDifference:KI,computeWeightedLoss:Ks,cosineDistance:XI,hingeLoss:YI,huberLoss:ZI,logLoss:JI,meanSquaredError:QI,sigmoidCrossEntropy:tN,softmaxCrossEntropy:eN},pN={sparseFillEmptyRows:nN,sparseReshape:rN,sparseSegmentMean:sN,sparseSegmentSum:aN},dN={stringNGrams:iN,stringSplit:oN,stringToHashBucketFast:uN};class pf extends ka{constructor(t,e,r=null){super(),this.learningRate=t,this.rho=e,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=dt.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{let s=dt.registeredVariables[e];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${e}/accum_grad`,variable:wt(()=>Pe(s).variable(!1))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${e}/accum_var`,variable:wt(()=>Pe(s).variable(!1))});let a=Array.isArray(t)?t[r].tensor:t[e];if(a==null)return;let i=this.accumulatedGrads[r].variable,o=this.accumulatedUpdates[r].variable;wt(()=>{let l=Bt(ht(i,this.rho),ht(Ze(a),1-this.rho)),c=ht(oe(Qn(Bt(o,this.epsilon)),Qn(Bt(i,this.epsilon))),a),u=Bt(ht(o,this.rho),ht(Ze(c),1-this.rho));i.assign(l),o.assign(u);let h=Bt(ht(c,-this.learningRate),s);s.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(De(this.accumulatedGrads.map(t=>t.variable)),De(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){let e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}pf.className="Adadelta",Wt(pf);class df extends ka{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{let s=dt.registeredVariables[e];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${e}/accumulator`,variable:wt(()=>po(s.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(t)?t[r].tensor:t[e];if(a==null)return;let i=this.accumulatedGrads[r].variable;wt(()=>{let o=Bt(i,Ze(a));i.assign(o);let l=Bt(ht(oe(a,Qn(Bt(o,dt.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&De(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}df.className="Adagrad",Wt(df);class ff extends ka{constructor(t,e,r,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],wt(()=>{this.accBeta1=xe(e).variable(),this.accBeta2=xe(r).variable()}),s==null&&(this.epsilon=dt.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);wt(()=>{let r=ne(1,this.accBeta1),s=ne(1,this.accBeta2);e.forEach((a,i)=>{let o=dt.registeredVariables[a];this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:wt(()=>Pe(o).variable(!1))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:wt(()=>Pe(o).variable(!1))});let l=Array.isArray(t)?t[i].tensor:t[a];if(l==null)return;let c=this.accumulatedFirstMoment[i].variable,u=this.accumulatedSecondMoment[i].variable,h=Bt(ht(c,this.beta1),ht(l,1-this.beta1)),p=Bt(ht(u,this.beta2),ht(Ze(l),1-this.beta2)),d=oe(h,r),f=oe(p,s);c.assign(h),u.assign(p);let m=Bt(ht(oe(d,Bt(Qn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(ht(this.accBeta1,this.beta1)),this.accBeta2.assign(ht(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&De(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&De(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),wt(()=>{this.accBeta1.assign(Ca(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ca(this.beta2,this.iterations_+1))});let e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}ff.className="Adam",Wt(ff);class mf extends ka{constructor(t,e,r,s=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=r,this.epsilon=s,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],wt(()=>{this.iteration=xe(0).variable(),this.accBeta1=xe(e).variable()}),s==null&&(this.epsilon=dt.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);wt(()=>{let r=ne(1,this.accBeta1),s=oe(-this.learningRate,Bt(ht(this.iteration,this.decay),1));e.forEach((a,i)=>{let o=dt.registeredVariables[a];this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:Pe(o).variable(!1)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:Pe(o).variable(!1)});let l=Array.isArray(t)?t[i].tensor:t[a];if(l==null)return;let c=this.accumulatedFirstMoment[i].variable,u=this.accumulatedWeightedInfNorm[i].variable,h=Bt(ht(c,this.beta1),ht(l,1-this.beta1)),p=ht(u,this.beta2),d=Tn(l),f=js(p,d);c.assign(h),u.assign(f);let m=Bt(ht(oe(s,r),oe(h,Bt(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(Bt(this.iteration,1)),this.accBeta1.assign(ht(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&De(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&De(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}mf.className="Adamax",Wt(mf);class uh extends ka{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{let s=Array.isArray(t)?t[r].tensor:t[e];if(s==null)return;let a=dt.registeredVariables[e];wt(()=>{let i=Bt(ht(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Gn(xe(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if((t=await this.extractIterations(t)).length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}uh.className="SGD",Wt(uh);class gf extends uh{constructor(t,e,r=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=r,this.accumulations=[],this.m=xe(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{let s=dt.registeredVariables[e];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${e}/momentum`,variable:wt(()=>Pe(s).variable(!1))});let a=this.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[e];i!=null&&wt(()=>{let o,l=Bt(ht(this.m,a),i);o=this.useNesterov?Bt(ht(this.c,Bt(i,ht(l,this.m))),s):Bt(ht(this.c,l),s),a.assign(l),s.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&De(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}gf.className="Momentum",Wt(gf);class yf extends ka{constructor(t,e=.9,r=0,s=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,s==null&&(this.epsilon=dt.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{let s=dt.registeredVariables[e],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${e}/rms`,variable:wt(()=>Pe(s).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${e}/momentum`,variable:wt(()=>Pe(s).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${e}/mg`,variable:wt(()=>Pe(s).variable(a))});let i=Array.isArray(t)?t[r].tensor:t[e];if(i==null)return;let o=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;wt(()=>{let c=Bt(ht(o,this.decay),ht(Ze(i),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[r].variable,h=Bt(ht(u,this.decay),ht(i,1-this.decay)),p=oe(ht(i,this.learningRate),Qn(ne(c,Bt(Ze(h),this.epsilon)))),d=Bt(ht(l,this.momentum),p);o.assign(c),u.assign(h),l.assign(d);let f=ne(s,d);s.assign(f)}else{let u=Bt(ht(o,this.decay),ht(Ze(i),1-this.decay)),h=Bt(ht(l,this.momentum),oe(ht(i,this.learningRate),Qn(Bt(u,this.epsilon))));o.assign(u),l.assign(h);let p=ne(s,h);s.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&De(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&De(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&De(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,r=!1;this.accumulatedMeanSquares=t.slice(0,e).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=t.slice(e,2*e).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}yf.className="RMSProp",Wt(yf);class pi{static sgd(t){return new uh(t)}static momentum(t,e,r=!1){return new gf(t,e,r)}static rmsprop(t,e=.9,r=0,s=null,a=!1){return new yf(t,e,r,s,a)}static adam(t=.001,e=.9,r=.999,s=null){return new ff(t,e,r,s)}static adadelta(t=.001,e=.95,r=null){return new pf(t,e,r)}static adamax(t=.002,e=.9,r=.999,s=null,a=0){return new mf(t,e,r,s,a)}static adagrad(t,e=.1){return new df(t,e)}}let xo={sgd:pi.sgd,momentum:pi.momentum,adadelta:pi.adadelta,adagrad:pi.adagrad,rmsprop:pi.rmsprop,adamax:pi.adamax,adam:pi.adam},fN=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function F1(){return new Promise(n=>fN(()=>n()))}function bf(n,t){let e=n[0].length;n.forEach((s,a)=>{z(s.length===e,()=>`Error in concat${e}D: rank of tensors[${a}] must be the same as the rank of the rest (${e})`)}),z(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let r=n[0];n.forEach((s,a)=>{for(let i=0;i<e;i++)z(i===t||s[i]===r[i],()=>`Error in concat${e}D: Shape of tensors[${a}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function As(n,t){let e=n[0].slice();for(let r=1;r<n.length;r++)e[t]+=n[r][t];return e}var xs;function D1(n,t,e){let r=new Array;if(e==null&&t==null)return r;if(t==null)for(;r.length<n+e.length;)r.push(-1);else r=t.slice();if(e==null)return r;if(n+e.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${r.length}`);for(let s=1;s<e.length;++s){let a=e[s],i=r[r.length-e.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+n}] = ${a} but shape[${s+n}] = ${o}`)}else r[i]=a}return r}function O1(n){let t={FIRST_DIM_SIZE:xs.FIRST_DIM_SIZE,VALUE_ROWIDS:xs.VALUE_ROWIDS,ROW_LENGTHS:xs.ROW_LENGTHS,ROW_SPLITS:xs.ROW_SPLITS,ROW_LIMITS:xs.ROW_LIMITS,ROW_STARTS:xs.ROW_STARTS},e=[];for(let r of n){if(!(r in t))break;e.push(t[r])}return e}function M1(n){return n.length===0?0:n[0]===xs.FIRST_DIM_SIZE?n.length-1:n.length}function L1(n,t){if(n==null||t==null)return;let e=n.length,r=t.length;if(e>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(e,r-1);++s){let a=n[s],i=t[s+1];if(a>=0&&i>=0&&a!==1&&a!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-n.length}] = ${a} but ragged tensor input.flatValues.shape[${s-n.length}] = ${i}`)}}(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(xs||(xs={}));let xf=30;function lh(n){return n<=xf?n:He(n,Math.floor(Math.sqrt(n)))}function vf(n,t,e){return[e*(typeof n=="number"?n:n[0]),t*(typeof n=="number"?n:n[1])]}function Qu(n,t,e,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(n[0]/e),s=s.concat(n.slice(1));else{s=s.concat(n[0]);let a=t.length;for(let i=0;i<a;++i)s=s.concat([n[i+1]/t[i],t[i]]);s=s.concat(n.slice(a+1))}return s}function tl(n,t,e=!0){let r=[];if(e){r.push(t);for(let s=t+1;s<n;++s)s<=2*t?(r.push(s),r.push(s-(t+1))):r.push(s)}else{let s=[],a=[];for(let i=1;i<n;++i)i>=2*t+1||i%2==1?a.push(i):s.push(i);r.push(...s),r.push(0),r.push(...a)}return r}function el(n,t,e,r=!0){let s=[];r?s.push(n[0]/e):s.push(n[0]*e);for(let a=1;a<n.length;++a)a<=t.length?r?s.push(t[a-1]*n[a]):s.push(n[a]/t[a-1]):s.push(n[a]);return s}function wf(n,t){let e=[0];for(let r=0;r<t;++r)e.push(n[r][0]);return e}function kf(n,t,e){let r=n.slice(0,1);for(let s=0;s<e;++s)r.push(n[s+1]-t[s][0]-t[s][1]);return r}function If(n,t){let e=n.shape.length,r=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${e}`);if(St(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);let s=t.shape,a=s[s.length-1],i=1;for(let h=0;h<s.length-1;++h)i*=s[h];let o=n.shape,l=s.slice();l.pop();let c=1;for(let h=a;h<e;++h)c*=o[h],l.push(o[h]);let u=[...Yt(n.shape).map(h=>h/c),1].slice(0,a);return[l,i,c,u]}let ch=1.7580993408473768,hh=1.0507009873554805,Nf=.3275911,Sf=.254829592,Tf=-.284496736,Cf=1.421413741,$f=-1.453152027,Ef=1.061405429;function Xs(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);let e=new Float32Array(2*n.length);for(let r=0;r<e.length;r+=2)e[r]=n[r/2],e[r+1]=t[r/2];return e}function z1(n){let t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)t[r/2]=n[r],e[r/2]=n[r+1];return{real:t,imag:e}}function P1(n){let t=Math.ceil(n.length/4),e=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<n.length;s+=4)e[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:e,imag:r}}function B1(n){let t=Math.floor(n.length/4),e=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<n.length;s+=4)e[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:e,imag:r}}function _f(n,t){return{real:n[2*t],imag:n[2*t+1]}}function W1(n,t,e,r){n[2*r]=t,n[2*r+1]=e}function V1(n,t){let e=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){let a=(t?2:-2)*Math.PI*(s/n);e[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:e,imag:r}}function U1(n,t,e){let r=(e?2:-2)*Math.PI*(n/t);return{real:Math.cos(r),imag:Math.sin(r)}}let Af="->",mN=/->/g;function Rf(n,t){let e=((n=n.replace(/\s/g,"")).length-n.replace(mN,"").length)/Af.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Af}").`);let[r,s]=n.split(Af);z(r.indexOf("...")===-1,()=>'The ellipsis notation ("...") is not supported yet.');let a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let h=0;h<s.length;++h){let p=s[h];if(!a.some(d=>d.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);o.indexOf(p)===-1&&o.push(p)}for(let h=0;h<r.length;++h){let p=r[h];o.indexOf(p)===-1&&p!==","&&o.push(p)}let l=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let p=0;p<a[h].length;++p)l[h].push(o.indexOf(a[h][p]))}let c=o.length,u=[];for(let h=s.length;h<c;++h)u.push(h);return{allDims:o,summedDims:u,idDims:l}}function Ff(n,t){let e=new Array(n);e.fill(-1);for(let s=0;s<t.length;++s)e[t[s]]=s;let r=[];for(let s=0;s<n;++s)e[s]===-1&&r.push(s);return e=e.filter(s=>s!==-1),{permutationIndices:e,expandDims:r}}function Df(n,t,e){let r=new Array(n);for(let s=0;s<e.length;++s){let a=e[s].shape;for(let i=0;i<t[s].length;++i)r[t[s][i]]===void 0?r[t[s][i]]=a[i]:z(r[t[s][i]]===a[i],()=>`Expected dimension ${r[t[s][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function Of(n,t){let e=n,r=[],s=0;n.length===0&&e.push(-1),s=n.length+1;for(let i=0;i<s;++i)r.push([]);let a=[];for(let i=0;i<e.length;++i){let o=gN(t,e[i]);for(let l of o)a.indexOf(l)===-1&&(r[i].push(l),a.push(l))}return{path:e,steps:r}}function Mf(n){return n.every((t,e)=>t===e)}function gN(n,t){let e=[];for(let r=0;r<n.length;++r)n[r].length!==0&&n[r].indexOf(t)===-1&&t!==-1||e.push(r);return e}function Lf(n,t,e=0){let r=[];if(typeof t=="number")z(n.shape[e]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(n.shape[e]/t);else{let s=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);z(s<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[a]=n.shape[e]-i}z(n.shape[e]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function G1(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function H1(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function j1(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}function q1(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function K1(n,t){return`size ${n} must be non-negative, not ${t}`}function yN(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function X1(n,t){return`Input to reshape is a SparseTensor with ${St(n)}
  dense values, but the requested shape requires a multiple of ${St(t)}. inputShape=${n} outputShape= ${t}`}function Y1(n,t){return`Input to reshape is a tensor with ${St(n)} dense values, but the requested shape has ${St(t)}. inputShape=${n} outputShape=${t}`}function bN(){return"segment ids must be >= 0"}function xN(){return"segment ids are not increasing"}function Z1(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function J1(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}function Q1(n,t){let e,r=!1;for(n<=xf?(e=n,r=!0):e=He(n,Math.floor(Math.sqrt(n)));!r;)e>t||e===n?r=!0:e=He(n,e+1);return e}function ty(n,t,e){let r=[],s=n.length;for(let a=0;a<s;a++)a!==t?r.push(n[a]):r.push(e);return r}function zf(n,t,e,r){let s=t.shape.length,a=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${a}).`);if(e<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${e}).`);for(let h=0;h<r;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=n.shape[e],o=[],l=1,c=1,u=1;for(let h=0;h<r;++h)o.push(n.shape[h]),l*=n.shape[h];for(let h=r;h<e;h++)o.push(n.shape[h]),c*=n.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=e+1;h<a;h++)o.push(n.shape[h]),u*=n.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:o}}function di(n){try{return n.map(t=>ma(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function ey(n){return n.map(t=>fa(t))}let ny={kernelName:aa,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(n,yo(ee(e,"float32"),-1))}}},vN={kernelName:ia,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>{let r=Ze(ee(e,"float32")),s=Qn(ne(xe(1),r));return cn(oe(n,s))}}}},wN={kernelName:Ga,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>{let r=Qn(ne(Ze(ee(e,"float32")),1));return oe(n,r)}}}},kN={kernelName:yr,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,s=Ce(e.shape,r.shape);return{a:()=>{let a=n,i=Sn(e.shape,s);return i.length>0&&(a=ce(a,i)),mt(a,e.shape)},b:()=>{let a=n,i=Sn(r.shape,s);return i.length>0&&(a=ce(a,i)),mt(a,r.shape)}}}},IN={kernelName:Li,saveAllInputs:!0,gradFunc:(n,t)=>{let e={};return t.forEach((r,s)=>{e[s]=()=>n.clone()}),e}},NN={kernelName:Pi,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Pe(e)}}},SN={kernelName:Bi,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>Pe(e)}}},TN={kernelName:Ha,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>oe(n,Qn(ne(xe(1),Ze(ee(e,"float32")))))}}},CN={kernelName:ja,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>{let r=Qn(Bt(xe(1),Ze(ee(e,"float32"))));return oe(n,r)}}}},$N={kernelName:Xa,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,s=Ce(e.shape,r.shape);return{a:()=>{let a=Bt(Ze(e),Ze(r)),i=ht(n,oe(r,a)),o=Sn(e.shape,s);return o.length>0&&(i=ce(i,o)),mt(i,e.shape)},b:()=>{let a=Bt(Ze(e),Ze(r)),i=cn(ht(n,oe(e,a))),o=Sn(r.shape,s);return o.length>0&&(i=ce(i,o)),mt(i,r.shape)}}}},EN={kernelName:qa,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>oe(n,Bt(Ze(ee(e,"float32")),1))}}},_N={kernelName:Ka,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>oe(n,ne(xe(1),Ze(ee(e,"float32"))))}}},AN=ct({avgPool3dGrad_:function(n,t,e,r,s,a){let i=Z(n,"dy","avgPool3dGrad"),o=Z(t,"input","avgPool3dGrad"),l=i,c=o,u=!1;o.rank===4&&(u=!0,l=mt(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=mt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),z(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),ar("avgPool3dGrad",s,a);let h={dy:l,input:c},p={filterSize:e,strides:r,pad:s,dimRoundingMode:a},d=dt.runKernel(Ui,h,p);return u?mt(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),RN={kernelName:Vi,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=e;return{x:()=>AN(n,r,s,a,i,o)}}},FN=ct({avgPoolGrad_:function(n,t,e,r,s){let a=Z(n,"dy","avgPoolGrad"),i=Z(t,"input","avgPoolGrad");z(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,l=a,c=!1;i.rank===3&&(c=!0,o=mt(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=mt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),z(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let u={dy:l,input:o},h={filterSize:e,strides:r,pad:s},p=dt.runKernel(Zo,u,h);return c?mt(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),DN={kernelName:Wi,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{filterSize:s,strides:a,pad:i}=e;return{x:()=>FN(n,r,s,a,i)}}},ON={kernelName:Gi,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{let[r,s]=t,{transposeA:a,transposeB:i}=e;return a||i?!a&&i?{a:()=>Oe(n,s,!1,!1),b:()=>Oe(n,r,!0,!1)}:a&&!i?{a:()=>Oe(s,n,!1,!0),b:()=>Oe(r,n,!1,!1)}:{a:()=>Oe(s,n,!0,!0),b:()=>Oe(n,r,!0,!0)}:{a:()=>Oe(n,s,!1,!0),b:()=>Oe(r,n,!0,!1)}}},MN={kernelName:Hi,gradFunc:(n,t,e)=>{let{blockShape:r,crops:s}=e;return{x:()=>Zc(n,r,s)}}},LN={kernelName:"BroadcastTo",gradFunc:(n,t,e)=>{let r=e,s=r.inputShape,a=r.shape,i=Array.from(a);for(let l=s.length-1;l>=0;l--)if(s[l]===a[l])i[l]=1;else if(s[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>ce(n,o,!0)}}},zN={kernelName:Ya,gradFunc:n=>({x:()=>n.clone()})},PN={kernelName:Za,gradFunc:n=>({x:()=>Pe(n)})},BN={kernelName:Ja,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{clipValueMin:s,clipValueMax:a}=e;return{x:()=>xr(Es(ci(r,s),hi(r,a)),n,Pe(n))}}},WN={kernelName:ji,inputsToSave:["x"],gradFunc:ny.gradFunc},VN={kernelName:qi,saveAllInputs:!0,gradFunc:(n,t,e)=>{let r=t.map(o=>o.shape),{axis:s}=e,a=ge(s,t[0].shape)[0],i=r.map(o=>o[a]);return Rr(n,i,a).map(o=>()=>o)}},UN={kernelName:Ki,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{let[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=e;return z(Na(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>_d(r.shape,n,s,i,o,l),filter:()=>af(r,n,s.shape,i,o,l)}}},GN={kernelName:Xi,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{let[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=e;return{dy:()=>Sa(n,s,a,i,o,1,l),filter:()=>af(n,r,s.shape,a,i,o,l)}}},HN=ct({conv3DBackpropFilter_:function(n,t,e,r,s){let a=n;n.rank===4&&(a=mt(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;i.rank===4&&(i=mt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),z(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),z(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),z(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),z(a.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${e[3]}.`),z(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);let o={x:a,dy:i},l={strides:r,pad:s,filterShape:e};return dt.runKernel(nu,o,l)}}),jN={kernelName:Yi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{let{dilations:r,strides:s,pad:a}=e;z(Na(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>V0(i.shape,n,o,s,a),filter:()=>HN(i,n,o.shape,s,a)}}},qN={kernelName:hs,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(cn(Yd(ee(e,"float32"))),n)}}},KN={kernelName:oa,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(Zd(ee(e,"float32")),n)}}},XN={kernelName:Ji,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{axis:s,exclusive:a,reverse:i}=e;return{x:()=>{let o=mn([s],r.rank),l=Fd(n,s,a,!i);return o!=null&&(l=Le(l,o)),l}}}},YN={kernelName:Qi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{let{dilations:r,strides:s,pad:a,dimRoundingMode:i}=e,o=r??[1,1];z(Na(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,c]=t;return z(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),z(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),z(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),z(Hn(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),ar("depthwiseConv2d",a,i),{x:()=>S1(l.shape,n,c,s,a,o,i),filter:()=>N1(l,n,c.shape,s,a,o,i)}}},ZN={kernelName:J,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{let[r,s]=t,a={x:r,filter:s,dy:n},i={x:r,filter:s,dy:n};return{x:()=>dt.runKernel(it,a,e),filter:()=>dt.runKernel(ut,i,e)}}},JN={kernelName:Nt,outputsToSave:[!0],gradFunc:(n,t)=>{let[e]=t,r={dy:n,y:e};return{x:()=>dt.runKernel(Dt,r)}}},QN={kernelName:Vt,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t,r=ht(Wr(cn(Ze(e))),2/Math.sqrt(Math.PI));return{x:()=>ht(n,r)}}},tS={kernelName:qt,outputsToSave:[!0],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(n,e)}}},eS={kernelName:ae,inputsToSave:["input"],gradFunc:(n,t)=>{let[e]=t;return{input:()=>mt(n,e.shape)}}},nS={kernelName:de,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(n,Wr(e))}}},rS={kernelName:on,gradFunc:n=>({x:()=>Pe(n)})},sS={kernelName:br,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,s=Ce(e.shape,r.shape);return{a:()=>{let a=oe(n,ee(r,"float32")),i=Sn(e.shape,s);return i.length>0?mt(ce(a,i),e.shape):a},b:()=>{let a=ht(n,ee(e,"float32")),i=Sn(r.shape,s);i.length>0&&(a=mt(ce(a,i),r.shape));let o=Ze(r);return cn(oe(a,ee(o,"float32")))}}}},aS={kernelName:la,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{let{varianceEpsilon:r}=e,[s,a,i,o]=t,l=o??xe(1),c=Sn(a.shape,s.shape),u=[];if(a.rank===1){for(let m=0;m<s.shape.length-1;++m)u.push(s.shape[m]);u.push(1)}let h=ne(s,a),p=ht(n,l),d=qd(Bt(i,xe(r))),f=ht(ht(ht(d,d),d),xe(-.5));return{x:()=>a.rank===1?mt(ht(ht(n,Qr(mt(d,[1,1,1,a.shape[0]]),u)),l),s.shape):mt(ht(ht(n,d),l),s.shape),mean:()=>{let m=ht(ht(d,xe(-1)),p);return a.rank===1&&(m=ce(m,c)),mt(m,a.shape)},variance:()=>{let m=ht(ht(f,h),p);return a.rank===1&&(m=ce(m,c)),mt(m,a.shape)},scale:()=>{let m=ht(h,d),g=ht(n,m);return a.rank===1&&(g=ce(g,c)),mt(g,a.shape)},offset:()=>{let m=n;return a.rank===1&&(m=ce(m,c)),mt(m,a.shape)}}}},iS={kernelName:ca,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{let[r,s]=t,{axis:a}=e,i=ge(a,r.shape)[0];return{x:()=>{let o=r.shape,l=s.size,c=o.slice(0,i),u=c.length,h=o.slice(a,o.length).slice(1),p=h.length,d=ry(0,u),f=ry(u+1,u+1+p),m=sy([c,[l],h]),g=mt(n,m),y=mt(s,[l]),b=sy([[u],d,f]),$=Le(g,b),_=nf($,y,r.shape[i]),M=Ta(b);return _=Le(_,M),_},indices:()=>s}}};function ry(n,t){let e=[];for(let r=n;r<t;++r)e.push(r);return e}function sy(n){let t=[];for(let e=0;e<n.length;++e)for(let r=0;r<n[e].length;++r)t.push(n[e][r]);return t}let oS={kernelName:ha,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t;return{a:()=>Pe(e),b:()=>Pe(r)}}},uS={kernelName:ou,gradFunc:n=>({x:()=>ee(n,"float32")})},lS={kernelName:uu,gradFunc:n=>({x:()=>Pe(n)})},cS={kernelName:lu,gradFunc:n=>({x:()=>Pe(n)})},hS={kernelName:cu,gradFunc:n=>({x:()=>Pe(n)})},pS={kernelName:Hl,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{alpha:s}=e,a=Vr(r,0);return{x:()=>xr(a,n,ht(n,s))}}},dS={kernelName:pu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>oe(n,Bt(e,1))}}},fS={kernelName:hu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>oe(n,ee(e,"float32"))}}},mS={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r]=t,{axis:s}=e;return{logits:()=>{let a=Wr(r);return ne(n,ht(ce(n,s,!0),a))}}}},gS=ct({localResponseNormalizationBackprop_:function(n,t,e,r=5,s=1,a=1,i=.5){let o={x:n,y:t,dy:e},l={depthRadius:r,bias:s,alpha:a,beta:i};return dt.runKernel(kp,o,l)}}),yS={kernelName:Zl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=e;return{x:()=>gS(r,s,n,a,i,o,l)}}};function ay(n,t,e,r){return t.rank<e.rank&&(t=mt(t,xn(t.shape,r))),n.rank<e.rank&&(n=mt(n,xn(n.shape,r))),{x:()=>ht(n,ee(ms(e,t),n.dtype))}}let iy={kernelName:Jl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let r=e,{reductionIndices:s}=r,a=t[0],i=ay(n,t[1],a,ge(s,a.shape));return{x:()=>i.x()}}},bS={kernelName:du,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t;return{a:()=>ht(n,ee(ci(e,r),"float32")),b:()=>ht(n,ee(Ld(e,r),"float32"))}}},xS=ct({maxPool3dGrad_:function(n,t,e,r,s,a,i){let o=Z(n,"dy","maxPool3dGrad"),l=Z(t,"input","maxPool3dGrad"),c=Z(e,"output","maxPool3dGrad"),u=o,h=l,p=c,d=!1;l.rank===4&&(d=!0,u=mt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=mt(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=mt(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),z(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),z(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),z(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),ar("maxPool3dGrad",a,i);let f={dy:u,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=dt.runKernel(Np,f,m);return d?mt(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),vS={kernelName:tc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=e;return{x:()=>xS(n,r,s,a,i,o,l)}}},wS=ct({maxPoolGrad_:function(n,t,e,r,s,a,i){let o=Z(n,"dy","maxPoolGrad"),l=Z(t,"input","maxPoolGrad"),c=Z(e,"output","maxPoolGrad");z(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),z(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),z(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ar("maxPoolGrad",a,i);let u={dy:o,input:l,output:c},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return dt.runKernel(Ip,u,h)}}),kS={kernelName:Ql,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r,s]=t,{filterSize:a,strides:i,pad:o}=e;return{x:()=>wS(n,r,s,a,i,o)}}},IS={kernelName:ec,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{axis:s}=e,a=ge(s,r.shape),i=St(On(r.shape,a)[1]);return{x:()=>{let o=r.shape.slice();a.forEach(c=>{o[c]=1});let l=mt(n,o);return oe(ht(l,Gr(r.shape,"float32")),i)}}}},NS={kernelName:nc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{let r=e,{axis:s}=r,[a,i]=t,o=ay(n,i,a,ge(s,a.shape));return{x:()=>o.x()}}},SS={kernelName:rc,inputsToSave:["x"],gradFunc:(n,t,e)=>{let r=t[0],{paddings:s}=e,a=s.map(i=>i[0]);return{x:()=>ve(n,a,r.shape)}}},TS={kernelName:uc,saveAllInputs:!0,gradFunc:(n,t,e)=>{let{axis:r}=e;return ys(n,r).map(s=>()=>s)}},oy={kernelName:lc,inputsToSave:["x"],gradFunc:(n,t,e)=>{let r=t[0],{paddings:s}=e,a=s.map(i=>i[0]);return{x:()=>ve(n,a,r.shape)}}},CS={kernelName:yu,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{let[e,r,s]=t,a=e,i=r,o=Ce(a.shape,i.shape);return{a:()=>{let l=ee(i,"float32"),c=ht(n,ht(l,Ca(a,ne(l,xe(1))))),u=Sn(a.shape,o);return u.length>0&&(c=ce(c,u)),mt(c,a.shape)},b:()=>{let l=Vr(a,0),c=xr(l,Ur(a),Pe(a)),u=ht(n,ht(s,c)),h=Sn(i.shape,o);return h.length>0&&(u=ce(u,h)),mt(u,i.shape)}}}},$S={kernelName:cc,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{let[e,r]=t,s=Vr(e,0);return{x:()=>xr(s,n,ht(n,r)),alpha:()=>{let a=xr(s,Pe(n),ht(n,e)),i=Sn(r.shape,n.shape);return i.length>0&&(a=ce(a,i)),mt(a,r.shape)}}}};function ES(n,t,e){let r=n.shape.length,s=r-e.length,a=mn(e,r),i=n;a!=null&&(i=Le(n,a));let o=i.shape.slice(),l=o.splice(r-e.length,e.length).reduce((u,h)=>u*h,1);o.push(l);let c=function(u,h,p){let d=u.shape.slice();d[p]=1;let f=mt(h,d),m=Uc(u,p,!0,!1),g=Uc(u,p,!0,!0),y=ht(m,g);return ht(f,y)}(i.reshape(o),t,s);if(c=c.reshape(i.shape),a!=null){let u=Ta(a);c=Le(c,u)}return c}let _S={kernelName:hc,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{axis:s}=e,a=[];return a=s==null?r.shape.map((i,o)=>o):typeof s=="number"?[s]:s,{x:()=>ES(r,n,a)}}},AS={kernelName:bu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>oe(n,cn(Ze(e)))}}},RS={kernelName:vu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t,r=ht(hi(e,6),yo(e));return{x:()=>ht(n,ee(r,"float32"))}}},FS={kernelName:xu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(n,ee(yo(e),"float32"))}}},DS={kernelName:pc,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>mt(n,e.shape)}}},OS={kernelName:ku,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>cn(oe(n,ht(Ca(e,1.5),2)))}}},MS={kernelName:Iu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>{let r=Vr(e,xe(0)),s=xe(ch),a=xe(hh),i=ht(n,a),o=ht(ht(n,s),Wr(ee(e,"float32")));return xr(r,i,o)}}}},LS={kernelName:Nu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(Vc(ee(e,"float32")),n)}}},zS={kernelName:Su,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(Rd(ee(e,"float32")),n)}}},PS={kernelName:yc,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{begin:s,size:a}=e,i=r.shape,[o,l]=Mc(r,s,a),c=[];for(let u=0;u<n.rank;u++)c.push([o[u],i[u]-o[u]-l[u]]);return{x:()=>$a(n,c)}}},BS={kernelName:$u,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(n,fs(e))}}},uy={kernelName:xc,gradFunc:(n,t,e)=>{let{blockShape:r,paddings:s}=e;return{x:()=>Bc(n,r,s)}}},ly={kernelName:vc,gradFunc:(n,t,e)=>{let{axis:r}=e;return{x:()=>un(n,r)}}},WS={kernelName:Eu,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>oe(n,ht(Qn(ee(e,"float32")),2))}}},VS={kernelName:Up,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(n,ht(ee(e,"float32"),2))}}},US={kernelName:bc,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,s=r.shape.slice(),{axis:a}=e;ge(a,r.shape).forEach(l=>{s[l]=1});let i=mt(n,s),o=ht(i,Gr(r.shape,"float32"));return{x:()=>o}}},GS={kernelName:Ru,inputsToSave:["x"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>oe(n,Ze(Vc(e)))}}},HS={kernelName:Du,inputsToSave:["x"],gradFunc:(n,t,e)=>{let[r]=t,{reps:s}=e;return{x:()=>{let a=Pe(r);if(r.rank===1)for(let i=0;i<s[0];++i)a=Bt(a,ve(n,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<s[0];++i)for(let o=0;o<s[1];++o)a=Bt(a,ve(n,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<s[0];++i)for(let o=0;o<s[1];++o)for(let l=0;l<s[2];++l)a=Bt(a,ve(n,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(r.rank!==4)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let i=0;i<s[0];++i)for(let o=0;o<s[1];++o)for(let l=0;l<s[2];++l)for(let c=0;c<s[3];++c)a=Bt(a,ve(n,[i*r.shape[0],o*r.shape[1],l*r.shape[2],c*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return a}}}},jS={kernelName:Ic,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{let[e]=t;return{x:()=>function(r,s){let a=js(s,Pe(s)),i=Hu(r,a),o=ci(s,xe(0,"int32")),l=i.rank-o.rank;for(let u=0;u<l;++u)o=vr(o,u+1);o=Es(o,Gr(i.shape,"bool"));let c=Pe(i);return xr(o,i,c)}(n,e)}}};let qS=[ny,vN,wN,kN,IN,NN,SN,TN,CN,$N,EN,_N,RN,DN,ON,MN,LN,zN,PN,BN,WN,VN,GN,UN,jN,qN,KN,XN,YN,ZN,{kernelName:vt,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,s=Ce(e.shape,r.shape);return{a:()=>{let a=oe(n,ee(r,"float32")),i=Sn(e.shape,s);return i.length>0?mt(ce(a,i),e.shape):a},b:()=>{let a=ht(n,ee(e,"float32")),i=Sn(r.shape,s);i.length>0&&(a=mt(ce(a,i),r.shape));let o=Ze(r);return cn(oe(a,ee(o,"float32")))}}}},JN,QN,tS,eS,nS,sS,rS,aS,iS,oS,uS,lS,cS,hS,pS,dS,fS,mS,yS,iy,iy,bS,vS,kS,IS,NS,{kernelName:fu,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t;return{a:()=>ht(n,ee(hi(e,r),"float32")),b:()=>ht(n,ee(Vr(e,r),"float32"))}}},SS,{kernelName:mu,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,s=Ce(e.shape,r.shape);return{a:()=>{let a=Sn(e.shape,s);return a.length>0?mt(ce(n,a),e.shape):n},b:()=>{let a=ht(n,cn(Gu(oe(e,r)))),i=Sn(r.shape,s);return i.length>0?mt(ce(a,i),r.shape):a}}}},{kernelName:gu,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,s=Ce(e.shape,r.shape);return{a:()=>{let a=ht(n,ee(r,"float32")),i=Sn(e.shape,s);return i.length>0?mt(ce(a,i),e.shape):a},b:()=>{let a=ht(n,ee(e,"float32")),i=Sn(r.shape,s);return i.length>0?mt(ce(a,i),r.shape):a}}}},{kernelName:sc,gradFunc:n=>({x:()=>cn(n)})},{kernelName:oc,inputsToSave:["indices"],gradFunc:(n,t)=>{let e=t[0];return{indices:()=>Cn(e.shape,"float32")}}},{kernelName:ic,gradFunc:n=>({x:()=>Pe(n)})},TS,oy,oy,CS,$S,_S,AS,RS,FS,DS,{kernelName:fc,inputsToSave:["images"],gradFunc:(n,t,e)=>{let[r]=t,s={dy:n,images:r};return{images:()=>dt.runKernel(Op,s,e)}}},{kernelName:dc,inputsToSave:["images"],gradFunc:(n,t,e)=>{let[r]=t,s={dy:n,images:r};return{images:()=>dt.runKernel(Dp,s,e)}}},{kernelName:mc,gradFunc:(n,t,e)=>{let{dims:r}=e,s=ge(r,n.shape);return{x:()=>ts(n,s)}}},{kernelName:wu,gradFunc:n=>({x:()=>Pe(n)})},OS,{kernelName:gc,inputsToSave:["condition"],gradFunc:(n,t)=>{let[e]=t;return{condition:()=>ee(Pe(e),"float32"),t:()=>ht(n,ee(e,n.dtype)),e:()=>ht(n,ee(Kc(e),n.dtype))}}},MS,{kernelName:Cu,outputsToSave:[!0],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(n,ht(e,ne(xe(1),e)))}}},{kernelName:Tu,gradFunc:n=>({x:()=>Pe(n)})},LS,zS,PS,{kernelName:wc,outputsToSave:[!0],gradFunc:(n,t,e)=>{let[r]=t,{dim:s}=e,a=ht(n,r);return{logits:()=>ne(a,ht(ce(a,[s],!0),r))}}},BS,uy,uy,ly,ly,WS,{kernelName:_u,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,s=xe(2);return{a:()=>ht(n,ht(s,ne(e,r))),b:()=>ht(n,ht(s,ne(r,e)))}}},VS,{kernelName:Ou,gradFunc:n=>({x:()=>Pe(n)})},{kernelName:Au,inputsToSave:["a","b"],gradFunc:(n,t)=>{let[e,r]=t,s=Ce(e.shape,r.shape);return{a:()=>{let a=n,i=Sn(e.shape,s);return i.length>0&&(a=ce(a,i)),mt(a,e.shape)},b:()=>{let a=n,i=Sn(r.shape,s);return i.length>0&&(a=ce(a,i)),mt(cn(a),r.shape)}}}},US,GS,{kernelName:Fu,outputsToSave:[!0],gradFunc:(n,t)=>{let[e]=t;return{x:()=>ht(ne(xe(1),Ze(e)),n)}}},HS,{kernelName:eo,gradFunc:(n,t,e)=>{let r=e,{perm:s}=r,a=Ta(s);return{x:()=>Le(n,a)}}},{kernelName:kc,gradFunc:(n,t,e)=>{let r=e,{axis:s}=r;return{value:()=>jr(n,s)}}},jS,{kernelName:Nc,gradFunc:n=>({x:()=>Pe(n)})}];for(let n of qS)nk(n);Rt().prototype.abs=function(){return this.throwIfDisposed(),Tn(this)},Rt().prototype.acos=function(){return this.throwIfDisposed(),N0(this)},Rt().prototype.acosh=function(){return this.throwIfDisposed(),S0(this)},Rt().prototype.add=function(n){return this.throwIfDisposed(),Bt(this,n)},Rt().prototype.all=function(n,t){return this.throwIfDisposed(),Td(this,n,t)},Rt().prototype.any=function(n,t){return this.throwIfDisposed(),Lc(this,n,t)},Rt().prototype.argMax=function(n){return this.throwIfDisposed(),uo(this,n)},Rt().prototype.argMin=function(n){return this.throwIfDisposed(),T0(this,n)},Rt().prototype.asScalar=function(){return this.throwIfDisposed(),z(this.size===1,()=>"The array must have only 1 element."),mt(this,[])},Rt().prototype.asType=function(n){return this.throwIfDisposed(),ee(this,n)},Rt().prototype.as1D=function(){return this.throwIfDisposed(),mt(this,[this.size])},Rt().prototype.as2D=function(n,t){return this.throwIfDisposed(),mt(this,[n,t])},Rt().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),mt(this,[n,t,e])},Rt().prototype.as4D=function(n,t,e,r){return this.throwIfDisposed(),mt(this,[n,t,e,r])},Rt().prototype.as5D=function(n,t,e,r,s){return this.throwIfDisposed(),mt(this,[n,t,e,r,s])},Rt().prototype.asin=function(){return this.throwIfDisposed(),C0(this)},Rt().prototype.asinh=function(){return this.throwIfDisposed(),$0(this)},Rt().prototype.atan=function(){return this.throwIfDisposed(),E0(this)},Rt().prototype.atan2=function(n){return this.throwIfDisposed(),_0(this,n)},Rt().prototype.atanh=function(){return this.throwIfDisposed(),A0(this)},Rt().prototype.avgPool=function(n,t,e,r){return this.throwIfDisposed(),Pc(this,n,t,e,r)},Rt().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),Bc(this,n,t)},Rt().prototype.batchNorm=function(n,t,e,r,s){return this.throwIfDisposed(),Bu(this,n,t,e,r,s)},Rt().prototype.broadcastTo=function(n){return this.throwIfDisposed(),ho(this,n)},Rt().prototype.cast=function(n){return this.throwIfDisposed(),ee(this,n)},Rt().prototype.ceil=function(){return this.throwIfDisposed(),L0(this)},Rt().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),Ar(this,n,t)},Rt().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Me&&(n=[n]),un([this,...n],t)},Rt().prototype.conv1d=function(n,t,e,r,s,a){return this.throwIfDisposed(),Ed(this,n,t,e,r,s,a)},Rt().prototype.conv2dTranspose=function(n,t,e,r,s){return this.throwIfDisposed(),Ad(this,n,t,e,r,s)},Rt().prototype.conv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),Sa(this,n,t,e,r,s,a)},Rt().prototype.cos=function(){return this.throwIfDisposed(),Vc(this)},Rt().prototype.cosh=function(){return this.throwIfDisposed(),Rd(this)},Rt().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),Uc(this,n,t,e)},Rt().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),Fd(this,n,t,e)},Rt().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),G0(this,n,t)},Rt().prototype.depthwiseConv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),Wu(this,n,t,e,r,s,a)},Rt().prototype.dilation2d=function(n,t,e,r,s){return this.throwIfDisposed(),H0(this,n,t,e,r,s)},Rt().prototype.divNoNan=function(n){return this.throwIfDisposed(),j0(this,n)},Rt().prototype.div=function(n){return this.throwIfDisposed(),oe(this,n)},Rt().prototype.dot=function(n){return this.throwIfDisposed(),q0(this,n)},Rt().prototype.elu=function(){return this.throwIfDisposed(),Vu(this)},Rt().prototype.equal=function(n){return this.throwIfDisposed(),ms(this,n)},Rt().prototype.erf=function(){return this.throwIfDisposed(),K0(this)},Rt().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),Z0(this,n,t)},Rt().prototype.exp=function(){return this.throwIfDisposed(),Wr(this)},Rt().prototype.expandDims=function(n){return this.throwIfDisposed(),vr(this,n)},Rt().prototype.expm1=function(){return this.throwIfDisposed(),J0(this)},Rt().prototype.fft=function(){return this.throwIfDisposed(),nh(this)},Rt().prototype.flatten=function(){return this.throwIfDisposed(),mt(this,[this.size])},Rt().prototype.floor=function(){return this.throwIfDisposed(),Gu(this)},Rt().prototype.floorDiv=function(n){return this.throwIfDisposed(),Dd(this,n)},Rt().prototype.gather=function(n,t){return this.throwIfDisposed(),Hu(this,n,t)},Rt().prototype.greaterEqual=function(n){return this.throwIfDisposed(),ci(this,n)},Rt().prototype.greater=function(n){return this.throwIfDisposed(),Vr(this,n)},Rt().prototype.ifft=function(){return this.throwIfDisposed(),Zu(this)},Rt().prototype.irfft=function(){return this.throwIfDisposed(),Qd(this)},Rt().prototype.isFinite=function(){return this.throwIfDisposed(),Q0(this)},Rt().prototype.isInf=function(){return this.throwIfDisposed(),t1(this)},Rt().prototype.isNaN=function(){return this.throwIfDisposed(),e1(this)},Rt().prototype.leakyRelu=function(n){return this.throwIfDisposed(),jc(this,n)},Rt().prototype.lessEqual=function(n){return this.throwIfDisposed(),hi(this,n)},Rt().prototype.less=function(n){return this.throwIfDisposed(),Ld(this,n)},Rt().prototype.localResponseNormalization=function(n,t,e,r){return this.throwIfDisposed(),n1(this,n,t,e,r)},Rt().prototype.logSigmoid=function(){return this.throwIfDisposed(),r1(this)},Rt().prototype.logSoftmax=function(n){return this.throwIfDisposed(),zd(this,n)},Rt().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),Pd(this,n,t)},Rt().prototype.log=function(){return this.throwIfDisposed(),Ur(this)},Rt().prototype.log1p=function(){return this.throwIfDisposed(),qc(this)},Rt().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Es(this,n)},Rt().prototype.logicalNot=function(){return this.throwIfDisposed(),Kc(this)},Rt().prototype.logicalOr=function(n){return this.throwIfDisposed(),Bd(this,n)},Rt().prototype.logicalXor=function(n){return this.throwIfDisposed(),s1(this,n)},Rt().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Oe(this,n,t,e)},Rt().prototype.maxPool=function(n,t,e,r){return this.throwIfDisposed(),Xc(this,n,t,e,r)},Rt().prototype.max=function(n,t){return this.throwIfDisposed(),gs(this,n,t)},Rt().prototype.maximum=function(n){return this.throwIfDisposed(),js(this,n)},Rt().prototype.mean=function(n,t){return this.throwIfDisposed(),bn(this,n,t)},Rt().prototype.min=function(n,t){return this.throwIfDisposed(),Gc(this,n,t)},Rt().prototype.minimum=function(n){return this.throwIfDisposed(),ju(this,n)},Rt().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),o1(this,n,t)},Rt().prototype.mod=function(n){return this.throwIfDisposed(),u1(this,n)},Rt().prototype.mul=function(n){return this.throwIfDisposed(),ht(this,n)},Rt().prototype.neg=function(){return this.throwIfDisposed(),cn(this)},Rt().prototype.norm=function(n,t,e){return this.throwIfDisposed(),Uu(this,n,t,e)},Rt().prototype.notEqual=function(n){return this.throwIfDisposed(),mo(this,n)},Rt().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Vd(this,n,t,e)},Rt().prototype.onesLike=function(){return this.throwIfDisposed(),Hr(this)},Rt().prototype.pad=function(n,t){return this.throwIfDisposed(),$a(this,n,t)},Rt().prototype.pool=function(n,t,e,r,s,a){return this.throwIfDisposed(),l1(this,n,t,e,r,s,a)},Rt().prototype.pow=function(n){return this.throwIfDisposed(),Ca(this,n)},Rt().prototype.prelu=function(n){return this.throwIfDisposed(),Jc(this,n)},Rt().prototype.prod=function(n,t){return this.throwIfDisposed(),c1(this,n,t)},Rt().prototype.reciprocal=function(){return this.throwIfDisposed(),h1(this)},Rt().prototype.relu=function(){return this.throwIfDisposed(),_s(this)},Rt().prototype.relu6=function(){return this.throwIfDisposed(),Hd(this)},Rt().prototype.reshapeAs=function(n){return this.throwIfDisposed(),mt(this,n.shape)},Rt().prototype.reshape=function(n){return this.throwIfDisposed(),mt(this,n)},Rt().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),E1(this,n,t,e)},Rt().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),_1(this,n,t,e)},Rt().prototype.reverse=function(n){return this.throwIfDisposed(),ts(this,n)},Rt().prototype.rfft=function(){return this.throwIfDisposed(),rh(this)},Rt().prototype.round=function(){return this.throwIfDisposed(),jd(this)},Rt().prototype.rsqrt=function(){return this.throwIfDisposed(),qd(this)},Rt().prototype.selu=function(){return this.throwIfDisposed(),Kd(this)},Rt().prototype.separableConv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),Xd(this,n,t,e,r,s,a)},Rt().prototype.sigmoid=function(){return this.throwIfDisposed(),fs(this)},Rt().prototype.sign=function(){return this.throwIfDisposed(),p1(this)},Rt().prototype.sin=function(){return this.throwIfDisposed(),Yd(this)},Rt().prototype.sinh=function(){return this.throwIfDisposed(),Zd(this)},Rt().prototype.slice=function(n,t){return this.throwIfDisposed(),ve(this,n,t)},Rt().prototype.softmax=function(n){return this.throwIfDisposed(),eh(this,n)},Rt().prototype.softplus=function(){return this.throwIfDisposed(),fo(this)},Rt().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Zc(this,n,t)},Rt().prototype.split=function(n,t){return this.throwIfDisposed(),Rr(this,n,t)},Rt().prototype.sqrt=function(){return this.throwIfDisposed(),Qn(this)},Rt().prototype.square=function(){return this.throwIfDisposed(),Ze(this)},Rt().prototype.squaredDifference=function(n){return this.throwIfDisposed(),tf(this,n)},Rt().prototype.squeeze=function(n){return this.throwIfDisposed(),Fr(this,n)},Rt().prototype.stack=function(n,t){this.throwIfDisposed();let e=n instanceof Me?[this,n]:[this,...n];return jr(e,t)},Rt().prototype.step=function(n){return this.throwIfDisposed(),yo(this,n)},Rt().prototype.stridedSlice=function(n,t,e,r,s,a,i,o){return this.throwIfDisposed(),d1(this,n,t,e,r,s,a,i,o)},Rt().prototype.sub=function(n){return this.throwIfDisposed(),ne(this,n)},Rt().prototype.sum=function(n,t){return this.throwIfDisposed(),ce(this,n,t)},Rt().prototype.tan=function(){return this.throwIfDisposed(),f1(this)},Rt().prototype.tanh=function(){return this.throwIfDisposed(),co(this)},Rt().prototype.tile=function(n){return this.throwIfDisposed(),Qr(this,n)},Rt().prototype.toBool=function(){return this.throwIfDisposed(),ee(this,"bool")},Rt().prototype.toFloat=function(){return this.throwIfDisposed(),ee(this,"float32")},Rt().prototype.toInt=function(){return this.throwIfDisposed(),ee(this,"int32")},Rt().prototype.topk=function(n,t){return this.throwIfDisposed(),m1(this,n,t)},Rt().prototype.transpose=function(n){return this.throwIfDisposed(),Le(this,n)},Rt().prototype.unique=function(n){return this.throwIfDisposed(),g1(this,n)},Rt().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),nf(this,n,t)},Rt().prototype.unstack=function(n){return this.throwIfDisposed(),ys(this,n)},Rt().prototype.where=function(n,t){return this.throwIfDisposed(),xr(n,this,t)},Rt().prototype.zerosLike=function(){return this.throwIfDisposed(),Pe(this)};class Rs extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Rs.prototype)}}class es extends Error{constructor(t){super(t),Object.setPrototypeOf(this,es.prototype)}}class gt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,gt.prototype)}}class $e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,$e.prototype)}}class Pf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Pf.prototype)}}class cy extends Error{constructor(t){super(t),Object.setPrototypeOf(this,cy.prototype)}}class hy{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=t}}function fi(n,t){if(Array.isArray(n)){let e=[];for(let r=0;r<t;r++)e=e.concat(n);return e}{let e=new Array(t);return e.fill(n),e}}function Fs(n,t){if(!n)throw new Pf(t)}function py(n,t){let e=0;for(let r of n)r===t&&e++;return e}function kr(n){return n.length===1?n[0]:n}function ln(n){return Array.isArray(n)?n:[n]}function Ys(n){let t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function mi(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let ns={};function Bf(n){if(n==null)return null;let t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function Wf(n){if(n!=null&&typeof n=="object")if(Array.isArray(n))n.forEach(t=>Wf(t));else{let t=Object.keys(n);for(let e of t){let r=n[e];r!=null&&typeof r=="object"&&(Array.isArray(r)||r.type!=="ndarray"||typeof r.value!="number"?Wf(r):n[e]=r.value)}}}function nl(n,t={},e={},r="object",s=!1){if(typeof n=="string"){let a=n,i;if(a in e)i=e[a];else if(a in ns)i=ns[a];else if(i=t[a],i==null)throw new gt(`Unknown ${r}: ${n}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{let a=n;if(a.className==null||a.config==null)throw new gt(`${r}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let i=a.className,o,l;if(i in e?[o,l]=e[i]:i in ns?[o,l]=ns.className:i in t&&([o,l]=t[i]),o==null)throw new gt(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let p of Object.keys(ns))c[p]=ns[p];for(let p of Object.keys(e))c[p]=e[p];a.config.customObjects=c;let u=Object.assign({},ns);for(let p of Object.keys(e))ns[p]=e[p];Wf(a.config);let h=l(o,a.config,e,s);return ns=Object.assign({},u),h}{let c=Object.assign({},ns);for(let h of Object.keys(e))ns[h]=e[h];let u=new o(a.config);return ns=Object.assign({},c),u}}}function ph(n,t){return-1*function(e,r){return e<r?-1:e>r?1:0}(n,t)}function Ea(n){if(n==null)return n;let t=[];for(let e of n)t.indexOf(e)===-1&&t.push(e);return t}function KS(n){if(n==null)throw new gt(`Invalid value in obj: ${JSON.stringify(n)}`);for(let t in n)if(n.hasOwnProperty(t))return!1;return!0}function gi(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new gt(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Vf(n,t,e=0,r=1/0){return Fs(e>=0),Fs(r>=e),Array.isArray(n)&&n.length>=e&&n.length<=r&&n.every(s=>typeof s===t)}function Mn(n,t){Array.isArray(n)?(z(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,r)=>Mn(e,`element ${r+1} of ${t}`))):z(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${dy(n)}.`)}function dy(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>dy(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function fy(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}let XS=0;function my(){return XS++}let dh={};function fh(n=""){return n in dh||(dh[n]=0),dh[n]+=1,n+dh[n].toString()}let YS=["channelsFirst","channelsLast"],ZS=["nearest","bilinear"],JS=["valid","same","causal"],QS=["max","avg"],tT=["sum","mul","concat","ave"],vo=new Map;function kn(n){gi(YS,"DataFormat",n)}function qr(n){gi(JS,"PaddingMode",n)}function gy(n){gi(QS,"PoolMode",n)}let rl=[];function yi(n,t){rl.push(n);try{let e=t();return rl.pop(),e}catch(e){throw rl.pop(),e}}function yy(n){if(!xy(n))throw new Error("Not a valid tensor name: '"+n+"'");return(rl.length===0?"":rl.join("/")+"/")+n}function by(n){if(!xy(n))throw new Error("Not a valid tensor name: '"+n+"'");vo.has(n)||vo.set(n,0);let t=vo.get(n);if(vo.set(n,vo.get(n)+1),t>0){let e=`${n}_${t}`;return vo.set(e,1),e}return n}let eT=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function xy(n){return!!n.match(eT)}function nT(n){return n===parseInt(n.toString(),10)}function _a(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let r=1;for(let s=t;s<e;++s)r*=n[s];return r}function wo(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){let r=n[e];r<t&&(t=r)}return t}function Aa(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){let r=n[e];r>t&&(t=r)}return t}function vs(n,t){if(t<n)throw new gt(`end (${t}) < begin (${n}) is forbidden.`);let e=[];for(let r=n;r<t;++r)e.push(r);return e}let Uf;function $n(){return Uf==null&&(Uf=dt.backend.epsilon()),Uf}function sl(n,t){return ee(n,t)}function al(n,t=-1){let e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),mt(n,e)}function bi(n,t,e){return wt(()=>{switch(n.rank){case 1:return Qc(n,t,e);case 2:return Jd(n,[t,0],[e,n.shape[1]]);case 3:return th(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return Yu(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ve(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ve(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new gt(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Gf(n,t,e){return wt(()=>{switch(n.rank){case 1:return Qc(n,t,e);case 2:return Jd(n,[0,t],[n.shape[0],e]);case 3:return th(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return Yu(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new gt(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function mh(n,t,e,r){return wt(()=>{switch(n.rank){case 1:return Qc(n,t,e);case 2:switch(r){case 1:return bi(n,t,e);case 2:return Gf(n,t,e);default:throw new gt(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return bi(n,t,e);case 2:return th(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Gf(n,t,e);default:throw new gt(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return bi(n,t,e);case 2:return Yu(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return Yu(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Gf(n,t,e);default:throw new gt(`The axis is not within the rank of the tensor ${r}`)}default:throw new gt(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Hf(n,t=-1){let e;return t<0&&(e=n[0].rank,t=e!==0?e:0),t===n[0].rank&&(t=-1),un(n,t)}function vy(n,t){switch(n.rank){case 1:return z0([n,t]);case 2:return Wc([n,t],0);case 3:return P0([n,t],0);case 4:return B0([n,t],0);default:throw new gt(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function jf(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new gt(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Qr(n,t)}function gh(n,t=0,e=1,r,s){return Gd(n,t,e,r,s)}function Zs(n,t,e,r){if(n.rank<2||t.rank<2)throw new $e(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3&&n.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new $e(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`);if(n.rank===2&&t.rank===2)return of({a:n,b:t,transposeA:!1,transposeB:!1,bias:r?qf(n.rank,r,"channelsLast"):null,activation:e});{let s=n.shape.slice(),a=s.pop();n=mt(n,[-1,a]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),c=[...i,o],u=Array.from({length:t.rank},(p,d)=>d===0?t.rank-2:d<=t.rank-2?d-1:d);t=mt(Le(t,u),[l,-1]);let h=[...s,...c];return mt(of({a:n,b:t,transposeA:!1,transposeB:!1,bias:r?qf(n.rank,r,"channelsLast"):null,activation:e}),h)}}function wy(n,t,e){return wt(()=>(t=Array.isArray(t)?wn(t,"int32"):ee(t,"int32"),Hu(n,t,e)))}function il(n){return ht(n,n)}function qf(n,t,e){let r=t.shape;if(t.rank!==1&&t.rank!==n)throw new gt(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return r.length===1?mt(t,[1,r[0],1,1,1]):mt(t,[1,r[3],r[0],r[1],r[2]]);if(e==="channelsLast")return r.length===1?mt(t,[1,1,1,1,r[0]]):mt(t,[1].concat(r))}else if(n===4){if(e==="channelsFirst")return r.length===1?mt(t,[1,r[0],1,1]):mt(t,[1,r[2],r[0],r[1]]);if(e==="channelsLast")return r.length===1?mt(t,[1,1,1,r[0]]):mt(t,[1].concat(r))}else if(n===3){if(e==="channelsFirst")return r.length===1?mt(t,[1,r[0],1]):mt(t,[1,r[1],r[0]]);if(e==="channelsLast")return r.length===1?mt(t,[1,1,r[0]]):mt(t,[1].concat(r))}else if(n<3)return t;throw new gt(`Unsupported input rank by biasAdd: ${t.rank}`)}function ws(n,t,e){return wt(()=>(e==null&&(e="channelsLast"),kn(e),Bt(n,qf(n.rank,t,e))))}function ky(n,t,e,r){return wt(()=>w1(n,t,e,r))}function ol(n,t,e=!1){return e?n():t()}let rT=["fanIn","fanOut","fanAvg"],sT=["normal","uniform","truncatedNormal"];class rs extends oo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Iy extends rs{apply(t,e){return Cn(t,e)}}Iy.className="Zeros",Wt(Iy);class Kf extends rs{apply(t,e){return Gr(t,e)}}Kf.className="Ones",Wt(Kf);class Ny extends rs{constructor(t){if(super(),typeof t!="object")throw new gt(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new gt(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return wt(()=>ht(xe(this.value),Gr(t,e)))}getConfig(){return{value:this.value}}}Ny.className="Constant",Wt(Ny);class Sy extends rs{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return qu(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Sy.className="RandomUniform",Wt(Sy);class Ty extends rs{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if((e=e||"float32")!=="float32"&&e!=="int32")throw new $e(`randomNormal does not support dType ${e}.`);return gh(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ty.className="RandomNormal",Wt(Ty);class Cy extends rs{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if((e=e||"float32")!=="float32"&&e!=="int32")throw new $e(`truncatedNormal does not support dType ${e}.`);return ef(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Cy.className="TruncatedNormal",Wt(Cy);class $y extends rs{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return wt(()=>{if(t.length!==2||t[0]!==t[1])throw new gt("Identity matrix initializer can only be used for 2D square matrices.");return ht(this.gain,Md(t[0]))})}getConfig(){return{gain:this.gain}}}$y.className="Identity",Wt($y);class Dr extends rs{constructor(t){if(super(),t.scale<0)throw new gt(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,e=this.mode,gi(rT,"FanMode",e),this.distribution=t.distribution==null?"normal":t.distribution,function(r){gi(sT,"Distribution",r)}(this.distribution),this.seed=t.seed}apply(t,e){let r=function(o,l="channelsLast"){let c,u;if(kn(l),o.length===2)c=o[0],u=o[1];else if([3,4,5].indexOf(o.length)!==-1){if(l==="channelsFirst"){let h=_a(o,2);c=o[1]*h,u=o[0]*h}else if(l==="channelsLast"){let h=_a(o,0,o.length-2);c=o[o.length-2]*h,u=o[o.length-1]*h}}else{let h=_a(o);c=Math.sqrt(h),u=Math.sqrt(h)}return[c,u]}(t),s=r[0],a=r[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,s):this.mode==="fanOut"?i/=Math.max(1,a):i/=Math.max(1,(s+a)/2),this.distribution==="normal"){let o=Math.sqrt(i);if((e=e||"float32")!=="float32"&&e!=="int32")throw new $e(`${this.getClassName()} does not support dType ${e}.`);return ef(t,0,o,e,this.seed)}{let o=Math.sqrt(3*i);return qu(t,-o,o,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Dr.className="VarianceScaling",Wt(Dr);class Xf extends Dr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Dr.className}}Xf.className="GlorotUniform",Wt(Xf);class Yf extends Dr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Dr.className}}Yf.className="GlorotNormal",Wt(Yf);class Zf extends Dr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Dr.className}}Zf.className="HeNormal",Wt(Zf);class Jf extends Dr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Dr.className}}Jf.className="HeUniform",Wt(Jf);class Qf extends Dr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Dr.className}}Qf.className="LeCunNormal",Wt(Qf);class tm extends Dr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Dr.className}}tm.className="LeCunNormal",Wt(tm);class Ey extends rs{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new $e("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return wt(()=>{if(t.length<2)throw new $e("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);let r=gh(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32"),s=R1.gramSchmidt(r);return t[0]>t[1]&&(s=Le(s)),ht(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Ey.className="Orthogonal",Wt(Ey);let _y={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ay(n,t={}){return nl(n,Zr.getMap().classNameMap,t,"initializer")}function gn(n){return Bf(n)}function hn(n){if(typeof n=="string"){let t=n in _y?_y[n]:n;if(t==="GlorotNormal")return new Yf;if(t==="GlorotUniform")return new Xf;if(t==="HeNormal")return new Zf;if(t==="HeUniform")return new Jf;if(t==="LeCunNormal")return new Qf;if(t==="LeCunUniform")return new tm;{let e={};return e.className=t,e.config={},Ay(e)}}return n instanceof rs?n:Ay(n)}function em(n){return Array.isArray(n)&&Array.isArray(n[0])}function yh(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ee(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new gt(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function qe(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n[0];throw new gt(`Expected exactly 1 Shape; got ${n.length}`)}return n}function bh(n){let t=0;for(let e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((r,s)=>r*s);return t}let Ry="Variable";class aT{constructor(t,e="float32",r=Ry,s=!0,a=null){this.dtype=e??"float32",this.shape=t.shape,this.id=my(),r=r??Ry,this.originalName=yy(r),this.name=by(this.originalName),this.trainable_=s,this.constraint=a,this.val=y1(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(e,r){if(e.shape.toString()!==r.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(r.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function nm(n){return n.map(t=>t.read())}function rm(n){n.forEach(t=>{t[0].write(t[1])})}class En{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ds{constructor(t,e,r,s,a,i,o){this.dtype=t,this.shape=e,this.sourceLayer=r,this.inputs=s,this.callArgs=a,this.outputTensorIndex=o,this.id=my(),i!=null&&(this.originalName=yy(i),this.name=by(this.originalName)),this.rank=e.length}}let iT=0;class xh{constructor(t,e){this.callArgs=e,this.id=iT++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let r of t.inboundLayers)r?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let oT=0;class Be extends oo{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=oT++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){let r=this.getClassName();e=Ys(r)+"_"+fh(r)}if(this.name=e,this.trainable_=t.trainable==null||t.trainable,t.inputShape!=null||t.batchInputShape!=null){let r;if(t.batchInputShape!=null)r=t.batchInputShape;else if(t.inputShape!=null){let a=null;t.batchSize!=null&&(a=t.batchSize),r=[a].concat(t.inputShape)}this.batchInputShape=r;let s=t.dtype;s==null&&(s=t.inputDType),s==null&&(s="float32"),this.dtype=s}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new es(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new gt(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return kr(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return kr(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Rs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Rs(`Layer ${this.name} is not connected, no input to return.`);return kr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Rs(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Rs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return kr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=ln(t),this.inputSpec==null||this.inputSpec.length===0)return;let e=ln(this.inputSpec);if(t.length!==e.length)throw new gt(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let r=0;r<t.length;r++){let s=t[r],a=e[r];if(a==null)continue;let i=s.rank;if(a.ndim!=null&&i!==a.ndim)throw new gt(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new gt(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new gt(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&s.dtype!==a.dtype)throw new gt(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${s.dtype}.`);if(a.axes){let o=s.shape;for(let l in a.axes){let c=Number(l),u=a.axes[l],h=c>=0?o[c]:o[o.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new gt(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${o}.`)}}if(a.shape!=null)for(let o=0;o<a.shape.length;++o){let l=a.shape[o],c=s.shape[o];if(l!=null&&c!=null&&l!==c)throw new gt(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();let r=ln(t),s=!0;for(let i of r)if(!(i instanceof Ds)){s=!1;break}let a=!0;for(let i of r)if(i instanceof Ds){a=!1;break}if(s===a)throw new gt("Arguments to apply() must be all SymbolicTensors or all Tensors");return yi(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);let i=[];for(let o of ln(t))i.push(o.shape);this.build(kr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let i=this.call(t,e),o=ln(i),l=[];for(let c of o)r.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(i=kr(l),this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}{let i=function(u){u=ln(u);let h=[];for(let p of u)h.push(p.shape);return kr(h)}(t),o=this.computeOutputShape(i),l,c="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),l=o!=null&&o.length>0&&Array.isArray(o[0])?o.map((u,h)=>new Ds(c,u,this,ln(t),e,this.name,h)):new Ds(c,o,this,ln(t),e,this.name),this.addInboundNode(t,l,null,null,i,o,e),this._refCount++,this.activityRegularizer!=null)throw new $e("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((r,s)=>{r!=null&&t[s]!=null&&t[s]!==r&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Rs(`The layer ${this.name} has never been called and thus has no defined output shape.`);let t=[];for(let e of this.inboundNodes){let r=JSON.stringify(e.outputShapes);t.indexOf(r)===-1&&t.push(r)}if(t.length===1){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}throw new Rs(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new es(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return bh(this.weights)}build(t){this.built=!0}getWeights(t=!1){return nm(t?this.trainableWeights:this.weights)}setWeights(t){wt(()=>{let e=this.weights;if(e.length!==t.length)throw new gt(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;let r=[],s=nm(e);for(let a=0;a<s.length;++a){let i=s[a],o=e[a],l=t[a];if(!se(i.shape,l.shape))throw new gt(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);r.push([o,l])}rm(r)})}addWeight(t,e,r,s,a,i,o,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new gt(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(s=l!=null?l():hn("zeros"));let c=s.apply(e,r),u=new aT(c,r,t,i,o);return c.dispose(),a!=null&&this.addLoss(()=>a.apply(u.read())),i==null&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=ln(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,r,s,a,i,o=null){let l=ln(t);e=ln(e),r=ln(r),s=ln(s),a=yh(a),i=yh(i);let c=[],u=[],h=[];for(let p of l)c.push(p.sourceLayer),u.push(p.nodeIndex),h.push(p.tensorIndex);new xh({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:r,outputMasks:s,inputShapes:a,outputShapes:i},o);for(let p=0;p<e.length;p++)e[p].sourceLayer=this,e[p].nodeIndex=this.inboundNodes.length-1,e[p].tensorIndex=p}getConfig(){let t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount==0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Fy(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{let r=t.inboundNodes[e];if(r.inboundLayers.length===0)return r.inputTensors;{let s=[];for(let a=0;a<r.inboundLayers.length;a++){let i=Fy(r.inputTensors[a],r.inboundLayers[a],r.nodeIndices[a]);for(let o of i)s.indexOf(o)===-1&&s.push(o)}return s}}}class ul extends Be{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:fh("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new gt("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new gt("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new gt("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let r=t.dtype||"float32";this.batchInputShape=e,this.dtype=r,this.inputSpec=[{shape:e}];let s=new Ds(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new xh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new gt(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ul.className="InputLayer",Wt(ul);class Ra{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Ra)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,r){if(this.id2Value[t.id]!=null)throw new gt(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(s,a){if(s.dtype==null||s.dtype===a.dtype)return a;try{return ee(a,s.dtype)}catch{throw new gt(`The dtype of the feed (${a.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,r!=null&&(this.id2Mask[t.id]=r),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ds){if(this.id2Value[t.id]==null)throw new gt(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{let e=this.name2Id[t];if(e==null)throw new gt(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Ds){if(this.id2Value[t.id]==null)throw new gt(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{let e=this.name2Id[t];if(e==null)throw new gt(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&De(this.id2Mask)}}let vh=new hy,wh=new hy;function ll(n,t,e,r){let s=e!=null&&e.training,a=Array.isArray(n),i=a?n:[n],o=i.map(f=>f.name),l=[],c=t.names();for(let f of o)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let u=o.join(",")+"|"+t.names().sort().join(","),h,p=vh.get(u);if(p==null){let f=function(m,g){z(m!=null&&m.length>0,()=>"Expected at least one fetch, got none");let y=[],b={};if(m.length===1){let $=Dy(m[0],g);y=$.sorted,b=$.recipientMap}else{let $=new Set;for(let _ of m){let{sorted:M,recipientMap:Y}=Dy(_,g);for(let tt of M)$.has(tt.name)||(y.push(tt),$.add(tt.name));for(let tt in Y)b[tt]==null&&(b[tt]=new Set),Y[tt].forEach(Q=>b[tt].add(Q))}}return{sorted:y,recipientCounts:uT(b)}}(i,t);p=f.sorted,h=f.recipientCounts,vh.put(u,p),wh.put(u,h)}h={},s||Object.assign(h,wh.get(u));let d=new Ra(t);for(let f=0;f<p.length;++f){if(r!=null){let et=Sd().numTensors;et>r.maxNumTensors&&(r.maxNumTensors=et),et<r.minNumTensors&&(r.minNumTensors=et)}let m=p[f],g=m.sourceLayer;if(g instanceof ul)continue;let y=[],b=[],$=[],_=!1;for(let et of m.inputs){let rt=d.getValue(et),lt=d.getMask(et);y.push(rt),b.push(lt),lt!=null&&(_=!0),s||(h[et.name]--,h[et.name]!==0||t.hasKey(et)||o.indexOf(et.name)!==-1||rt.isDisposed||et.sourceLayer.stateful===!0||$.push(rt))}_&&((e=e||{}).mask=b[0]);let M=ln(g.apply(y,e)),Y=null;g.supportsMasking&&(Y=g.computeMask(y,b));let tt=lT(m),Q=Array.isArray(tt)?tt:[tt];for(let et=0;et<Q.length;++et){d.hasKey(Q[et])||d.add(Q[et],M[et],Array.isArray(Y)?Y[0]:Y);let rt=o.indexOf(Q[et].name);rt!==-1&&(l[rt]=M[et])}s||De($)}return d.disposeMasks(),a?l:l[0]}function uT(n){let t={};for(let e in n)t[e]=n[e].size;return t}function Dy(n,t){let e=new Set,r=[],s={};for(let o of t.names())e.add(o);let a=[],i=[];for(a.push(n);a.length>0;){let o=a[a.length-1];if(e.has(o.name)){a.pop();continue}let l=i[i.length-1]===a.length-1;if(o.inputs.length===0||l)a.pop(),r.push(o),e.add(o.name),l&&i.pop();else{i.push(a.length-1);for(let c of o.inputs)s[c.name]==null&&(s[c.name]=new Set),s[c.name].add(o.name),e.has(c.name)||a.push(c)}}return{sorted:r,recipientMap:s}}function lT(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let r=0;r<n.sourceLayer.inboundNodes.length;++r)for(let s of n.sourceLayer.inboundNodes[r].outputTensors)if(s.id===n.id){e=r;break}t=n.sourceLayer.getOutputAt(e)}return t}function sm(n,t){return wt(()=>Qn(ce(ht(n,n),t,!0)))}Ct().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(n){vh?.setMaxEntries(n),wh?.setMaxEntries(n)});class cl extends oo{getConfig(){return{}}}class Oy extends cl{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return wt(()=>{let e=sm(t,this.axis),r=Ar(e,0,this.maxValue);return ht(t,oe(r,Bt($n(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Oy.className="MaxNorm",Wt(Oy);class My extends cl{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return wt(()=>oe(t,Bt($n(),sm(t,this.axis))))}getConfig(){return{axis:this.axis}}}My.className="UnitNorm",Wt(My);class Ly extends cl{apply(t){return _s(t)}}Ly.className="NonNeg",Wt(Ly);class zy extends cl{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return wt(()=>{let e=sm(t,this.axis),r=Bt(ht(this.rate,Ar(e,this.minValue,this.maxValue)),ht(1-this.rate,e));return ht(t,oe(r,Bt($n(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}zy.className="MinMaxNorm",Wt(zy);let Py={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function _n(n){return Bf(n)}function By(n,t={}){return nl(n,Zr.getMap().classNameMap,t,"constraint")}function An(n){return n==null?null:typeof n=="string"?By({className:n in Py?Py[n]:n,config:{}}):n instanceof cl?n:By(n)}async function xi(n){if(n==null)return;let t=[],e=[],r=[];for(let s in n){let a=n[s];if(typeof a!="number"){let i=a;t.push(i.data()),e.push(s),r.push(i)}}if(t.length>0){let s=await Promise.all(t);for(let a=0;a<s.length;++a)n[e[a]]=s[a][0];De(r)}}function Wy(n){if(n!=null)for(let t in n){let e=n[t];typeof e!="number"&&e.dispose()}}var Vy;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Vy||(Vy={}));class hl{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class cT{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(let r of this.callbacks)await r.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(let r of this.callbacks)await r.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(let r of this.callbacks)await r.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(let r of this.callbacks)await r.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainEnd(t)}}class hT extends hl{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});let r=e.size==null?0:e.size;this.seen+=r;for(let s in e){let a=e[s];if(typeof a=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+a*r;else{let i;s in this.totals?i=this.totals[s]:this.totals[s]=0;let o=wt(()=>Bt(this.totals[s],ht(a,r)));this.totals[s]=o,i?.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(let r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?e[r]=this.totals[r]/this.seen:wt(()=>{let s=ht(oe(1,this.seen),this.totals[r]);e[r]=s,this.totals[r].dispose(),Gn(e[r])}))}}class pT extends hl{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(let r in e)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(e[r])}async syncData(){let t=[],e=[],r=[];for(let a in this.history){let i=this.history[a];for(let o=0;o<i.length;++o)if(typeof i[o]!="number"){let l=i[o];t.push(l.data()),e.push(a),r.push(o)}}let s=await Promise.all(t);for(let a=0;a<s.length;++a)this.history[e[a]][r[a]].dispose(),this.history[e[a]][r[a]]=s[a][0]}}class dT extends hl{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||F1,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=125),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Se(this.yieldEvery)&&(this.maybeWait=function(r,s,a){let i,o=a!=null?a():Jn();return(...l)=>{let c=a!=null?a():Jn();return c-o<s||(o=c,i=r(...l)),i}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,r){let s=[];this.yield!=null&&(await xi(r),s.push(this.yield(t,e,r))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await xi(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){let r=[];this.epochEnd!=null&&(await xi(e),r.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(t,e){this.batchBegin!=null&&(await xi(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){let r=[];this.batchEnd!=null&&(await xi(e),r.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?r.push(this.nextFrameFunc()):Se(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(r)}async onTrainBegin(t){this.trainBegin!=null&&(await xi(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await xi(t),await this.trainEnd(t))}}function Uy(n,t){return n==null&&(n={}),n instanceof hl?[n]:Array.isArray(n)&&n[0]instanceof hl?n:ln(n).map(e=>new dT(e,t))}class ss{constructor(){}static registerCallbackConstructor(t,e){z(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),ss.checkForDuplicate(e),ss.constructors[t]==null&&(ss.constructors[t]=[]),ss.constructors[t].push(e)}static checkForDuplicate(t){for(let e in ss.constructors)ss.constructors[+e].forEach(r=>{if(r===t)throw new gt("Duplicate callback constructor.")})}static clear(){ss.constructors={}}static createCallbacks(t){let e=[];for(let r in ss.constructors){let s=+r;t>=s&&e.push(...ss.constructors[s])}return e.map(r=>new r)}}function Gy(n,t,e,r,s,a,i,o,l){let c=new pT,u=[new hT,...ss.createCallbacks(t)];n!=null&&u.push(...n),u.push(c);let h=new cT(u);return h.setParams({epochs:e,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:c}}function Js(n,t={},e=!1){return nl(n,Zr.getMap().classNameMap,t,"layer",e)}function kh(n,t){return wt(()=>{n.dtype!=="float32"&&(n=ee(n,"float32"));let e=ce(il(n),t,!0),r=po(e.shape,$n()),s=Qn(js(e,r));return oe(n,s)})}function Ih(n,t){return wt(()=>bn(il(ne(t,n)),-1))}function am(n,t){return wt(()=>bn(Tn(ne(t,n)),-1))}function im(n,t){return wt(()=>{let e=ne(n,t),r=Ar(Tn(n),$n(),Number.MAX_VALUE),s=Tn(oe(e,r));return ht(100,bn(s,-1))})}function fT(n,t){return wt(()=>{let e=Ar(t,$n(),Number.MAX_VALUE),r=Ur(Bt(1,e)),s=Ar(n,$n(),Number.MAX_VALUE),a=Ur(Bt(1,s));return bn(il(ne(r,a)),-1)})}function pl(n,t,e=!1){return wt(()=>{if(e)t=eh(t);else{let r=ce(t,t.shape.length-1,!0);t=oe(t,r)}return t=Ar(t,$n(),1-$n()),cn(ce(ht(ee(n,"float32"),Ur(t)),t.shape.length-1))})}function Nh(n,t,e=!1){return wt(()=>{let r=ee(Gu(function(a){let i=[_a(a.shape)];return mt(a,i)}(n)),"int32"),s=(t=Ar(t,$n(),1-$n())).shape;return pl(mt(Vd(r,s[s.length-1]),s),t,e)})}function Sh(n,t){return wt(()=>{let e;return e=Ar(t,$n(),1-$n()),e=Ur(oe(e,ne(1,e))),bn(function(r,s){if(!se(r.shape,s.shape))throw new gt(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(s.shape)}`);return wt(()=>{let a=_s(s),i=cn(Tn(s));return Bt(ne(a,ht(s,r)),qc(Wr(i)))})}(n,e),-1)})}function mT(n,t){return wt(()=>{let e=Ar(n,$n(),1),r=Ar(t,$n(),1);return ce(ht(n,Ur(oe(e,r))),-1)})}function Hy(n,t){return wt(()=>{let e=kh(n,-1),r=kh(t,-1),s=ht(e,r);return cn(ce(s,-1))})}ss.constructors={};let Th={meanSquaredError:Ih,meanAbsoluteError:am,meanAbsolutePercentageError:im,meanSquaredLogarithmicError:fT,squaredHinge:function(n,t){return wt(()=>{let e=js(0,ne(1,ht(n,t)));return bn(il(e),-1)})},hinge:function(n,t){return wt(()=>{let e=js(0,ne(1,ht(n,t)));return bn(e,-1)})},categoricalHinge:function(n,t){return wt(()=>{let e=ce(ht(n,t),-1),r=gs(ht(ne(1,n),t),-1);return js(0,Bt(1,ne(r,e)))})},logcosh:function(n,t){return wt(()=>{let e=Math.log(2),r=ne(t,n),s=ne(Bt(r,fo(ht(-2,r))),e);return bn(s,-1)})},categoricalCrossentropy:pl,sparseCategoricalCrossentropy:Nh,binaryCrossentropy:Sh,kullbackLeiblerDivergence:mT,poisson:function(n,t){return wt(()=>{let e=Ur(Bt($n(),t));return bn(ne(t,ht(n,e)),-1)})},cosineProximity:Hy};function om(n){if(typeof n=="string"){if(n in Th)return Th[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new gt(t)}return n}function jy(n,t){return wt(()=>{let e=ht(.5,Hr(t)),r=sl(Vr(t,e),n.dtype);return bn(ms(n,r),-1)})}function qy(n,t){return wt(()=>sl(ms(uo(n,-1),uo(t,-1)),"float32"))}function gT(n,t){return wt(()=>ee(ce(Es(ms(n,1),ms(t,1))),"float32"))}function yT(n,t){return Sh(n,t)}function bT(n,t){return n.rank===t.rank&&(n=Fr(n,[n.rank-1])),(t=uo(t,-1)).dtype!==n.dtype&&(t=ee(t,n.dtype)),ee(ms(n,t),"float32")}let Ky=pl,Xy=Nh,Ch={binaryAccuracy:jy,categoricalAccuracy:qy,precision:function(n,t){return wt(()=>{let e=gT(n,t),r=function(a,i){return wt(()=>ee(ce(Es(ms(a,0),ms(i,1))),"float32"))}(n,t),s=Bt(e,r);return ee(xr(Vr(s,0),oe(e,s),0),"float32")})},categoricalCrossentropy:Ky,sparseCategoricalCrossentropy:Xy,mse:Ih,MSE:Ih,mae:am,MAE:am,mape:im,MAPE:im,cosine:Hy};function xT(n){if(typeof n=="string"&&n in Ch)return Ch[n];if(typeof n!="string"&&n!=null)return n;throw new gt(`Unknown metric ${n}`)}function $h(n){if(Fs(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(let e of Object.keys(Th))if(Th[e]===n){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(Ch))if(Ch[e]===n){t=e;break}return t!==void 0?t:n.name}}let vT=1048576;function Yy(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!um(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let r=JSON.stringify(n);r.length>vT&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function um(n){if(n===null)return!0;if(typeof n=="object"){if(Object.getPrototypeOf(n)===Object.prototype){let t=Object.keys(n);for(let e of t)if(typeof e!="string"||!um(n[e]))return!1;return!0}if(Array.isArray(n)){for(let t of n)if(!um(t))return!1;return!0}return!1}{let t=typeof n;return t==="string"||t==="number"||t==="boolean"}}function wT(n,t,e,r=console.log){let s=function(u){let h=!0,p=[],d=[];for(let f in u.nodesByDepth)p.push(u.nodesByDepth[f]);for(let f of p){if(f.length>1||f.length===1&&f[0].inboundLayers.length>1){h=!1;break}d.push(...f)}if(h)for(let f of u.layers){let m=!1;for(let g of f.inboundNodes)if(d.indexOf(g)!==-1){if(m){h=!1;break}m=!0}if(!h)break}return h}(n),a=["Layer (type)","Input Shape","Output shape","Param #"],i;if(s?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u))),!s){a.push("Receives inputs"),i=[];for(let u in n.nodesByDepth)i.push(...n.nodesByDepth[u])}r("_".repeat(t)),Eh(a,e,r),r("=".repeat(t));let o=n.layers;for(let u=0;u<o.length;++u)s?kT(o[u],e,r):IT(o[u],e,i,r),r((u===o.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();let l=function(u){let h;return h=u.collectedTrainableWeights!=null?bh(u.collectedTrainableWeights):bh(u.trainableWeights),h}(n),c=bh(n.nonTrainableWeights);r(`Total params: ${l+c}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}function Eh(n,t,e=console.log){let r="";for(let s=0;s<n.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=n[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);e(r)}function kT(n,t,e){let r,s;try{s=n.inboundNodes.map(a=>JSON.stringify(a.inputShapes)).join(",")}catch{s="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}Eh([`${n.name} (${n.getClassName()})`,s,r,n.countParams().toString()],t,e)}function IT(n,t,e,r){let s,a;try{a=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}let i=[];for(let u of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(u)===-1))for(let h=0;h<u.inboundLayers.length;++h){let p=u.inboundLayers[h].name,d=u.nodeIndices[h],f=u.tensorIndices[h];i.push(`${p}[${d}][${f}]`)}let o=n.name,l=n.getClassName(),c=i.length===0?"":i[0];Eh([`${o} (${l})`,a,s,n.countParams().toString(),c],t,r);for(let u=1;u<i.length;++u)Eh(["","","","",i[u]],t,r)}function Zy(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function lm(n,t){if(n===null)return null;if(typeof n=="string")return mi(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){let e=[],r=n.length;for(let s=0;s<r;++s){let a=n[s];Zy(t,s,a)?e.push(a):e.push(lm(a,t))}return e}{let e={};for(let r of Object.keys(n)){let s=n[r];if(r==="name"&&typeof s=="string")e[r]=s;else{let a=mi(r);e[a]=lm(s,a)}}return e}}function cm(n,t){if(n==null)return null;if(typeof n=="string")return Ys(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){let e=[],r=n.length;for(let s=0;s<r;++s){let a=n[s];Zy(t,s,a)?e.push(a):e.push(cm(a,t))}return e}{let e={};for(let r of Object.keys(n)){let s=n[r],a=Ys(r);e[a]=r!=="name"&&r!=="className"||typeof s!="string"?cm(s,r):s}return e}}let Jy="3.21.0";class ks extends Be{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=fh(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Ea(this.inputs).length!==this.inputs.length)throw new gt(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Ea(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let $=b.sourceLayer,_=b.nodeIndex,M=b.tensorIndex;this.outputLayers.push($),this.outputLayersNodeIndices.push(_),this.outputLayersTensorIndices.push(M)}for(let b of this.inputs){let $=b.sourceLayer,_=b.nodeIndex,M=b.tensorIndex;Fs(_===0,"input layer has >1 nodes"),Fs(M===0,"input layer has >1 tensors"),this.inputLayers.push($),this.inputLayersNodeIndices.push(_),this.inputLayersTensorIndices.push(M)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let $=this.inputLayers[b];if(!($ instanceof ul))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${$.getClassName()}.`);this.inputNames.push($.name),this.feedInputShapes.push($.batchInputShape),this.feedInputNames.push($.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let e={},r={},s={},a={},i={},o=[],l=(b,$,_,M,Y,tt)=>{M!=null&&Y!=null&&tt!=null||(M=b.sourceLayer,Y=b.nodeIndex,tt=b.tensorIndex);let Q=M.inboundNodes[Y];if(_.indexOf(Q)!==-1)throw new es(`The tensor ${b.name} at layer "${M.name}" is part of a cycle.`);if($.indexOf(Q)!==-1)return;this.containerNodes.add(ks.nodeKey(M,Y)),M.id in i||(i[M.id]=Object.keys(i).length),_.indexOf(Q)===-1&&_.push(Q);let et=Q.inboundLayers.length;for(let rt=0;rt<et;rt++){let lt=Q.inputTensors[rt],ft=Q.inboundLayers[rt],yt=Q.nodeIndices[rt],kt=Q.tensorIndices[rt];l(lt,$,_,ft,yt,kt)}for($.push(Q);_.indexOf(Q)>=0;)_.splice(_.indexOf(Q),1);o.push(Q)},c=[],u=[];for(let b of this.outputs)l(b,c,u);let h=o.slice().reverse();for(let b of h){r[b.id]=b,b.id in e||(e[b.id]=0);let $=e[b.id],_=s[b.outboundLayer.id]==null?0:s[b.outboundLayer.id];$=Math.max($,_),s[b.outboundLayer.id]=$,a[b.outboundLayer.id]=b.outboundLayer,e[b.id]=$;for(let M=0;M<b.inboundLayers.length;M++){let Y=b.inboundLayers[M],tt=b.nodeIndices[M],Q=Y.inboundNodes[tt],et=e[Q.id]==null?0:e[Q.id];e[Q.id]=Math.max($+1,et),r[Q.id]=Q}}let p={};for(let b in e){let $=e[b];$ in p||(p[$]=[]),p[$].push(r[b])}let d={};for(let b in s){let $=s[b];$ in d||(d[$]=[]),d[$].push(a[b])}let f=Object.keys(d).map(b=>parseInt(b,10)).sort(ph);this.layers=[];for(let b of f){let $=d[b];$.sort((_,M)=>{let Y=i[_.id],tt=i[M.id];return Y<tt?-1:Y>tt?1:0});for(let _ of $)_ instanceof ks&&this.internalContainerRefs.push(_),this.layers.push(_)}this.layersByDepth=d,f=Object.keys(p).map(b=>parseInt(b,10)).sort(ph);let m=this.inputs.slice(),g=[];for(let b of f)for(let $ of p[b]){let _=$.outboundLayer;if(_!=null){for(let M of $.inputTensors)if(m.indexOf(M)===-1)throw new es(`Graph disconnected: cannot obtain value for tensor ${M} at layer "${_.name}". The following previous layers were accessed without issue: ${g}`);for(let M of $.outputTensors)m.push(M);g.push(_.name)}}this.nodesByDepth=p;let y=this.layers.map(b=>b.name);for(let b of y){let $=y.filter(_=>_===b).length;if($!==1)throw new es(`The name "${b}" is used ${$} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new xh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(let e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new gt("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let r of this.layers)e.push(...r.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){let r={},s=0;for(let i of this.layers)for(let o of i.weights){if(r[o.originalName]!=null)throw new gt(`Duplicate weight name: ${o.originalName}`);r[o.originalName]=o,s++}let a=[];for(let i in t){let o=i;if(r[i]==null){let l=i.split("/");o=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(r[o]!=null)a.push([r[o],t[i]]);else if(e)throw new gt(`Provided weight data has no target variable: ${i}`);delete r[o]}if(e){let i=[];for(let o in r)i.push(o);if(i.length>0)throw new gt(`${i.length} of ${s} weights are not set: ${i}`)}rm(a)}updatedConfig(){let t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Jy}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){let r=cm(this.updatedConfig());return e?JSON.stringify(r):r}call(t,e){return wt(()=>{t=ln(t);let r=new Ra;for(let s=0;s<this.inputs.length;++s)r.add(this.inputs[s],t[s]);return ll(this.outputs,r,e)})}computeMask(t,e){return wt(()=>{let r;return t=ln(t),r=e==null?fi(null,t.length):ln(e),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){let e=yh(t);if(e.length!==this.inputLayers.length)throw new gt(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let o=0;o<e.length;o++){let l=this.inputLayers[o],c=e[o];r[l.name+"_0_0"]=c}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(ph);if(s.length>1)for(let o of s){let l=this.nodesByDepth[o];for(let c of l){let u=c.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let h=[];for(let f=0;f<c.inboundLayers.length;f++){let m=c.inboundLayers[f],g=c.nodeIndices[f],y=c.tensorIndices[f],b=r[`${m.name}_${g}_${y}`];h.push(b)}let p=yh(u.computeOutputShape(kr(h))),d=u.inboundNodes.indexOf(c);for(let f=0;f<p.length;f++)r[`${u.name}_${d}_${f}`]=p[f]}}let a=[],i=[];for(let o=0;o<this.outputLayers.length;o++){let l=this.outputLayers[o],c=this.outputLayersNodeIndices[o],u=this.outputLayersTensorIndices[o],h=`${l.name}_${c}_${u}`;i.push(h)}for(let o=0;o<i.length;o++){let l=i[o];Fs(l in r),a.push(r[l])}return kr(a)}runInternalGraph(t,e){e==null&&(e=fi(null,t.length));let r={};for(let l=0;l<this.inputs.length;++l){let c=this.inputs[l],u=t[l],h=e[l];r[c.id]=[u,h]}let s=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(ph);for(let l of s){let c=this.nodesByDepth[l];for(let u of c){let h=u.outboundLayer,p=u.inputTensors,d=u.outputTensors,f=new Array;for(let m of p)m.id in r&&f.push(r[m.id]);if(f.length===p.length){let m,g,y,b,$={};if(u.callArgs!=null&&($=u.callArgs),f.length===1){let[_,M]=f[0];$.mask==null&&($.mask=M),y=ln(h.call(_,$)),b=ln(h.computeMask(_,M)),m=[_],g=[M]}else m=f.map(_=>_[0]),g=f.map(_=>_[1]),$.mask==null&&($.mask=g),y=ln(h.call(m,$)),b=ln(h.computeMask(m,g));if(h.activityRegularizer)throw new $e("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let _=0;_<d.length;++_){let M=d[_],Y=y[_],tt=b[_];r[M.id]=[Y,tt]}}}}let a=[],i=[],o=[];for(let l of this.outputs){Fs(l.id in r,`Could not compute output ${l.name} : ${l.id}`);let[c,u]=r[l.id];o.push(c.shape),a.push(c),i.push(u)}return[a,i,o]}buildNodeConversionMap(t){let e={},r;for(let s of this.layers){r=s instanceof ks?1:0;for(let a=0;a<s.inboundNodes.length;a++){let i=ks.nodeKey(s,a);this.containerNodes.has(i)&&(e[i]=r,r+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new gt(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(t==null)throw new gt("Provide either a layer name or layer index");for(let r of this.layers)if(r.name===t)return r;throw new gt(`No such layer: ${t}`)}calculateLosses(){return wt(()=>{let t=[];for(let e of this.layers)for(let r=0;r<e.inboundNodes.length;++r){let s=ks.nodeKey(e,r);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t})}getConfig(){let t={name:this.name},e=this.buildNodeConversionMap(this.layers),r=[];for(let i of this.layers){let o=i.getClassName(),l=i.getConfig(),c=[];for(let h=0;h<i.inboundNodes.length;h++){let p=i.inboundNodes[h],d=ks.nodeKey(i,h),f={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),f=p.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(p.inboundLayers.length>0){let m=[];for(let g=0;g<p.inboundLayers.length;g++){let y=p.inboundLayers[g],b=p.nodeIndices[g],$=p.tensorIndices[g],_=e[ks.nodeKey(y,b)];_==null&&(_=0),m.push([y.name,_,$,f])}c.push(m)}}}let u={};u.name=i.name,u.className=o,u.config=l,u.inboundNodes=c,r.push(u)}t.layers=r;let s=[];for(let i=0;i<this.inputLayers.length;i++){let o=this.inputLayers[i],l=this.inputLayersNodeIndices[i],c=ks.nodeKey(o,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);let h=this.inputLayersTensorIndices[i];s.push([o.name,u,h])}t.inputLayers=s;let a=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=ks.nodeKey(o,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);let h=this.outputLayersTensorIndices[i];a.push([o.name,u,h])}return t.outputLayers=a,t}static fromConfig(t,e,r={},s=!1){let a={},i={};function o(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){let b=[],$;for(let _ of y){let M=_[0],Y=_[1],tt=_[2];if($=_[3]==null?{}:_[3],!(M in a))return void o(g,y);let Q=a[M];if(Q.inboundNodes.length<=Y)return void o(g,y);let et=Q.inboundNodes[Y];b.push(et.outputTensors[tt])}b.length>0&&g.apply(kr(b),$)}function c(g){let y=g.name,b=Js(g,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(s),a[y]=b,g.inboundNodes.forEach($=>{if(!($ instanceof Array))throw new gt(`Corrupted configuration, expected array for nodeData: ${$}`);o(b,$)})}let u=e.name,h=e.layers;for(let g of h)c(g);for(;!KS(i);)for(let g of h){let y=a[g.name];if(y.name in i){let b=i[y.name];delete i[y.name];for(let $ of b)l(y,$)}}let p=[],d=[],f=e.inputLayers;for(let g of f){let y=g[0],b=g[1],$=g[2];Fs(y in a);let _=a[y].inboundNodes[b].outputTensors;p.push(_[$])}let m=e.outputLayers;for(let g of m){let y=g[0],b=g[1],$=g[2];Fs(y in a);let _=a[y].inboundNodes[b].outputTensors;d.push(_[$])}return new t({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new gt("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){wt(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function NT(n,t,e){let r=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>null);if(r===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return n}if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){let s=[];return t.forEach(a=>{a in n?s.push(n[a]):s.push(null)}),s}throw new Error(`The model has multiple (${r}) outputs, so ${e} must be either an array with ${r} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function Qy(n,t){return NT(n,t,"classWeight")}async function tb(n,t,e,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let s=wt(()=>{if(n.shape.length===1)return Vs(n);if(n.shape.length===2){if(n.shape[1]>1)return uo(n,1);if(n.shape[1]===1)return mt(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await s.data());De(s);let i=[];return a.forEach(o=>{if(e[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(e[o])}),wn(i,"float32")}return null}function ST(n,t){return ht(n,t)}function eb(n,t){let e,r,s=t;e=s.xs,r=s.ys,z(e!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=nb("input",n.inputNames,e),i=nb("output",n.outputNames,r),o=a[0].shape[0];z(a.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),z(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<a.length;l++)z(a[l].shape[0]===o,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)z(i[l].shape[0]===o,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);return{xs:a,ys:i}}function nb(n,t,e){if(e instanceof Me)return[e];if(Array.isArray(e))return z(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{let r=[];for(let s of t){if(e[s]==null)throw new gt(`The feature data generated by the dataset lacks the required ${n} key '${s}'.`);r.push(e[s])}return r}}async function TT(n,t,e){let r=e.batchesPerEpoch!=null;if(z(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),z(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),z(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),z(!r||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),z(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{let s=e.validationData!=null,a,i;if(s)if(rb(e.validationData))z(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=function(y){if(y.length===3)throw new $e("Validation with sample weights is not implemented yet.");return{xs:y[0],ys:y[1]}}(e.validationData);a=g.xs,i=g.ys}let o=n.makeTrainFunction(),l=n.getDedupedMetricsNames(),c;c=s?l.slice().concat(l.map(g=>"val_"+g)):l.slice();let u=Uy(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:p,history:d}=Gy(u,h,e.epochs,null,null,function(g,y){let b=null;return y.batchesPerEpoch!=null?b=y.batchesPerEpoch:Number.isFinite(g.size)&&(b=g.size),b}(t,e),null,s,c);p.setModel(n),n.history=d,await p.onTrainBegin(),n.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,m=await t.iterator();for(;f<e.epochs;){let g={};await p.onEpochBegin(f);let y=0,b=0;for(r||(m=await t.iterator());!r||y<e.batchesPerEpoch;){let $=await m.next();if(r&&$.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+e.batchesPerEpoch*e.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if($.value!=null){let{xs:_,ys:M}=eb(n,$.value),Y={};Y.batch=b,Y.size=_[0].shape[0],await p.onBatchBegin(b,Y);let tt=[];if(e.classWeight!=null){let rt=Qy(e.classWeight,n.outputNames);for(let lt=0;lt<rt.length;++lt)tt.push(await tb(M[lt],null,rt[lt]))}let Q=_.concat(M).concat(tt),et=o(Q);De(Q);for(let rt=0;rt<l.length;++rt){let lt=l[rt],ft=et[rt];Y[lt]=ft,Gn(ft)}await p.onBatchEnd(b,Y),Wy(Y),b++,y++}if(r?y>=e.batchesPerEpoch:$.done){if(s){let _;_=rb(e.validationData)?ln(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):ln(n.evaluate(a,i,{batchSize:e.validationBatchSize==null?32:e.validationBatchSize,verbose:0}));for(let M=0;M<n.metricsNames.length;++M)g[`val_${n.metricsNames[M]}`]=_[M]}break}if(n.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,n.stopTraining_)break}return await p.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function rb(n){return typeof n.iterator=="function"}function hm(n){z(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function dl(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(r=>bi(r,t,e-t)):bi(n,t,e-t)}function pm(n,t){return wt(()=>n==null?null:Array.isArray(n)?n.map(e=>pm(e,t)):wy(n,t.dtype==="int32"?t:ee(t,"int32")))}function dm(n,t){let e=[],r=0,s=null;for(;r<n;)s=r+t,s>=n&&(s=n),e.push([r,s]),r=s;return e}async function CT(n,t,e,r={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,l,c,u,h,p;n.isTraining=!0;try{let d=r.batchSize==null?32:r.batchSize;hm(d);let f=!1,m=await n.standardizeUserData(t,e,r.sampleWeight,r.classWeight,f,d);s=m[0],a=m[1],p=m[2];let g,y=!1;if(r.validationData!=null&&r.validationData.length>0){if(y=!0,r.validationData.length!==2)throw r.validationData.length===3?new $e("validationData including sample weights is not supported yet."):new gt(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],c=r.validationData[1];let et=!0,rt=await n.standardizeUserData(l,c,null,null,et,d);u=rt[0],h=rt[1],g=u.concat(h)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){y=!0;let et=Math.floor(s[0].shape[0]*(1-r.validationSplit)),rt=s[0].shape[0];u=dl(s,et,rt),i=s,s=dl(s,0,et),h=dl(a,et,rt),o=a,a=dl(a,0,et),g=u.concat(h)}else r.validationSteps!=null&&(y=!0);let b=s.concat(a).concat(p);n.checkTrainableWeightsConsistency();let $=n.makeTrainFunction(),_=n.getDedupedMetricsNames(),M,Y;y?(n.makeTestFunction(),M=n.testFunction,Y=_.slice().concat(_.map(et=>"val_"+et))):(M=null,g=[],Y=_.slice());let tt=Uy(r.callbacks,r.yieldEvery);return await async function(et,rt,lt,ft,yt,kt,Tt,It,Et,_t,At,Mt,Ot,Lt,Pt){yt==null&&(yt=32),kt==null&&(kt=1),At==null&&(At=!0),Ot==null&&(Ot=0);let jt=!1;if(Et!=null&&_t!=null&&(jt=!0),Pt!=null&&(jt=!0,Lt==null))throw new gt("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let Kt=et.checkNumSamples(lt,yt,Lt,"steps_per_epoch"),Qt;Kt!=null&&(Qt=vs(0,Kt)),Tt==null&&(Tt=1);let{callbackList:te,history:be}=Gy(It,Tt,kt,Ot,Kt,Lt,yt,jt,Mt);te.setModel(et),et.history=be,await te.onTrainBegin(),et.stopTraining_=!1;for(let me=Ot;me<kt;++me){await te.onEpochBegin(me);let we={};if(Lt!=null)throw new $e("stepsPerEpoch mode is not implemented yet.");{if(At==="batch")throw new $e("batch shuffling is not implemneted yet");At&&Xt(Qt);let pe=wn(Qt),Ie=dm(Kt,yt);for(let ke=0;ke<Ie.length;++ke){let Te={};if(await te.onBatchBegin(ke,Te),wt(()=>{let Ne=Ie[ke][0],_e=Ie[ke][1],ze=bi(pe,Ne,_e-Ne);Te.batch=ke,Te.size=_e-Ne;let In=pm(lt,ze),tr=rt(In);for(let dn=0;dn<ft.length;++dn){let Ye=ft[dn],zr=tr[dn];Te[Ye]=zr,Gn(zr)}if(ke===Ie.length-1&&jt){let dn=et.testLoop(Et,_t,yt);for(let Ye=0;Ye<ft.length;++Ye){let zr=ft[Ye],Yn=dn[Ye];Gn(Yn),we["val_"+zr]=Yn}}}),await te.onBatchEnd(ke,Te),Wy(Te),et.stopTraining_)break}pe.dispose()}if(await te.onEpochEnd(me,we),et.stopTraining_)break}return await te.onTrainEnd(),await et.history.syncData(),et.history}(n,$,b,_,d,r.epochs,r.verbose,tt,M,g,r.shuffle,Y,r.initialEpoch,null,null)}finally{n.isTraining=!1,Is(s,t),Is(a,e),Is(i,t),Is(o,e),Is(u,l),Is(h,c),p!=null&&De(p)}}function sb(n){let t=[];n instanceof Me&&(n=[n]);for(let e=0;e<n.length;++e){let r=n[e];if(r.rank===1)t.push(al(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Is(n,t){if(n==null)return;let e=[];if(t instanceof Me)e.push(t.id);else if(Array.isArray(t))t.forEach(s=>e.push(s.id));else if(t!=null)for(let s in t){let a=t[s];e.push(a.id)}let r=[];if(n instanceof Me)e.indexOf(n.id)===-1&&r.push(n);else if(Array.isArray(n))n.forEach(s=>{e.indexOf(s.id)===-1&&r.push(s)});else if(n!=null)for(let s in n){let a=n[s];e.indexOf(a.id)===-1&&r.push(a)}r.forEach(s=>{s.isDisposed||s.dispose()})}function fm(n){return Array.isArray(n)}function ab(n){return!function(t){return t instanceof Me}(n)&&!fm(n)}function ib(n,t,e,r=!0,s=""){if(t==null||t.length===0){if(n!=null){let i=!1;if(fm(n)&&n.length>0)i=!0;else if(ab(n)){for(let o in n)if(n.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new gt(`Error when checking model ${s} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(i=>null);let a;if(ab(n)){a=[];for(let i of t){if(n[i]==null)throw new gt(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(n[i])}}else if(fm(n)){if(n.length!==t.length)throw new gt(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);a=n}else{if(t.length>1)throw new gt(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);a=[n]}if(a=sb(a),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let o=a[i];if(o.shape.length!==e[i].length)throw new gt(`Error when checking ${s}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<e[i].length;++l){if(l===0&&!r)continue;let c=o.shape[l],u=e[i][l];if(u!=null&&u>=0&&c!==u)throw new gt(`${s} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${s} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return a}function ob(n,t,e,r=!0,s=""){let a;if(Array.isArray(n)){if(n.length!==t.length)throw new gt(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);a=n}else{if(t.length>1)throw new gt(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);a=[n]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let o=a[i];if(o.shape.length!==e[i].length)throw new gt(`Error when checking ${s}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<e[i].length;++l){if(l===0&&!r)continue;let c=o.shape[l],u=e[i][l];if(u!=null&&u!==c)throw new gt(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}class ko extends ks{constructor(t){super(t),this.isTraining=!1}summary(t,e,r=console.log){if(!this.built)throw new gt("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");wT(this,t,e,r)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=function(i){let o={Adagrad:()=>xo.adagrad(.01),Adadelta:()=>xo.adadelta(1,.95,$n()),Adam:()=>xo.adam(.001,.9,.999,$n()),Adamax:()=>xo.adamax(.002,.9,.999,$n(),0),RMSProp:()=>xo.rmsprop(.001,.9,0,$n()),SGD:()=>xo.sgd(.01)};if(o.adagrad=o.Adagrad,o.adadelta=o.Adadelta,o.adam=o.Adam,o.adamax=o.Adamax,o.rmsprop=o.RMSProp,o.sgd=o.SGD,i in o)return o[i]();throw new gt(`Unknown Optimizer ${i}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof ka))throw new gt("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||typeof t.loss=="string"||typeof t.loss=="function")if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new gt(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(o=>om(o))}else{let i=om(t.loss);this.outputs.forEach(o=>{e.push(i)})}else{t.loss=t.loss;for(let i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new gt(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(om(t.loss[i]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let o=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[i])}let r=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],yi("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(r.indexOf(i)!==-1)continue;let o=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([o,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let s=function(i,o){if(i==null||Array.isArray(i)&&i.length===0)return o.map(c=>[]);let l;if(typeof i=="string"||typeof i=="function")l=[i];else{if(!Array.isArray(i)&&typeof i!="object")throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${i}`);l=i}if(Array.isArray(l))return o.map(c=>l);{let c=[];for(let u of o){let h=l.hasOwnProperty(u)?l[u]:[];Array.isArray(h)||(h=[h]),c.push(h)}return c}}(t.metrics,this.outputNames),a=(i,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[i]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,i])};yi("metric",()=>{for(let i=0;i<this.outputs.length;++i)r.indexOf(i)===-1&&(o=>{let l,c,u;for(let h of o){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let d=this.internalOutputShapes[i],f;d[d.length-1]===1||this.lossFunctions[i]===Sh?["accuracy","acc"].indexOf(h)!==-1?c=jy:["crossentropy","ce"].indexOf(h)!==-1&&(c=yT):this.lossFunctions[i]===Nh?["accuracy","acc"].indexOf(h)!==-1?c=bT:["crossentropy","ce"].indexOf(h)!==-1&&(c=Xy):["accuracy","acc"].indexOf(h)!==-1?c=qy:["crossentropy","ce"].indexOf(h)!==-1&&(c=Ky),["accuracy","acc"].indexOf(h)!==-1?f="acc":["crossentropy","ce"].indexOf(h)!==-1&&(f="ce"),u=c,l=""+f}else u=xT(h),l=""+$h(h);let p;yi(l,()=>{p=u}),a(i,l,p)}})(s[i])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,r={}){let s=r.batchSize==null?32:r.batchSize;hm(s);let a=this.standardizeUserDataXY(t,e,!0,s);try{let i=a[0].concat(a[1]);this.makeTestFunction();let o=this.testFunction;return kr(this.testLoop(o,i,s,r.verbose,r.steps))}finally{Is(a[0],t),Is(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(r,s,a){let i=(a=a||{}).batches!=null,o=r.testFunction,l=[];if(a.verbose>0)throw new $e("Verbose mode is not implemented yet.");z(!i||a.batches>0&&Number.isInteger(a.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(a.batches)}`);let c=typeof s.next=="function"?s:await s.iterator(),u=0,h=0;for(;!i||h<a.batches;){let p=await c.next();if(l=wt(()=>{if(p.value){let{xs:d,ys:f}=eb(r,p.value),m=d.concat(f),g=wt(()=>o(m));if(De(m),h===0)for(let b=0;b<g.length;++b)l.push(xe(0));let y=m[0].shape[0];for(let b=0;b<g.length;++b){let $=g[b],_=l[b];l[b]=wt(()=>Bt(l[b],ht(y,$))),h>0&&De(_)}De(g),u+=y,++h}return l}),p.done){i&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${a.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let p=0;p<l.length;++p){let d=l[p];l[p]=oe(l[p],u),De(d)}return kr(l)}(this,t,e)}checkNumSamples(t,e,r,s="steps"){let a;if(r!=null){if(a=null,e!=null)throw new gt(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(t==null)throw new gt(`Either the input data should have a defined shape, or ${s} shoud be specified.`);a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new gt("`outputs` is an empty Array, which is not allowed.");let r=Array.isArray(e),s=r?e:[e],a=this.retrieveSymbolicTensors(s),i=new Ra;if(t instanceof Me&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new gt(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],t[l])}else for(let l of this.inputs){let c=t[l.name];if(c==null)throw new gt(`No value is provided for the model's input ${l.name}`);i.add(l,c)}let o=ll(a,i);return r?o:o[0]}retrieveSymbolicTensors(t){let e=fi(null,t.length),r=t.length;for(let s of this.layers){let a=Array.isArray(s.output)?s.output:[s.output],i=a.map(o=>o.name);for(let o=0;o<t.length;++o){let l=i.indexOf(t[o]);if(l!==-1&&(e[o]=a[l],r--),r===0)break}if(r===0)break}if(r>0){let s=[];throw e.forEach((a,i)=>{a==null&&s.push(t[i])}),new gt(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return e}predictLoop(t,e=32,r=!1){return wt(()=>{let s=this.checkNumSamples(t);if(r)throw new $e("Verbose predictLoop() is not implemented yet.");let a=dm(s,e),i=this.outputs.map(o=>[]);for(let o=0;o<a.length;++o)wt(()=>{let l=a[o][0],c=a[o][1],u=dl(t,l,c),h=[];if(Array.isArray(u))for(let d=0;d<u.length;++d)h.push({key:this.inputs[d],value:u[d]});else h.push({key:this.inputs[0],value:u});let p=new Ra(h);return ll(this.outputs,p)}).forEach((l,c)=>i[c].push(l));return kr(i.map(o=>un(o,0)))})}predict(t,e={}){let r=sb(t);ob(r,this.inputNames,this.feedInputShapes,!1);try{let s=e.batchSize==null?32:e.batchSize;return hm(s),this.predictLoop(r,s)}finally{Is(r,t)}}predictOnBatch(t){ob(t,this.inputNames,this.feedInputShapes,!0);let e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,r=!0,s){if(this.optimizer_==null)throw new es("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let i=0;i<this.feedOutputShapes.length;++i){let o=this.feedOutputShapes[i];this.feedLossFns[i]===Nh?a.push(o.slice(0,o.length-1).concat([1])):a.push(o)}if(function(i,o,l){let c=Ea(i.map(h=>h.shape[0]));c.sort();let u=Ea(o.map(h=>h.shape[0]));if(u.sort(),c.length>1)throw new gt(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(i.map(h=>h.shape))}`);if(u.length>1)throw new gt(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(o.map(h=>h.shape))}`);if(c.length>0&&u.length>0&&!se(c,u))throw new gt(`Input Tensors should have the same number of samples as target Tensors. Found ${c[0]} input sample(s) and ${u[0]} target sample(s).`)}(t=ib(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=ib(e,this.feedOutputNames,a,!1,"target")),function(i,o,l){let c=[Ih,Sh,pl];for(let u=0;u<i.length;++u){let h=i[u],p=o[u],d=l[u];if(p!=null){if(p===pl&&h.shape[h.shape.length-1]===1)throw new gt(`You are passing a target array of shape ${h.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(c.indexOf(p)!==-1){let f=h.shape.slice(1),m=d.slice(1);for(let g=0;g<f.length;++g){let y=f[g],b=m[g];if(b!=null&&y!==b)throw new gt(`A target Tensor with shape ${h.shape} was passed for an output of shape ${d}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&t[0].shape[0]%s!=0)throw new gt(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,r,s,a=!0,i){let[o,l]=this.standardizeUserDataXY(t,e,a,i);if(r!=null)throw new Error("sample weight is not supported yet.");let c=null;if(s!=null){let u=Qy(s,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await tb(l[h],null,u[h]))}return[o,l,c]}testLoop(t,e,r,s=0,a){return wt(()=>{let i=this.checkNumSamples(e,r,a,"steps"),o=[];if(s>0)throw new $e("Verbose mode is not implemented yet.");if(a!=null)throw new $e("steps mode in testLoop() is not implemented yet");{let l=dm(i,r),c=wn(vs(0,i));for(let u=0;u<l.length;++u){let h=l[u][0],p=l[u][1],d=bi(c,h,p-h),f=pm(e,d),m=t(f);if(u===0)for(let g=0;g<m.length;++g)o.push(xe(0));for(let g=0;g<m.length;++g){let y=m[g];o[g]=Bt(o[g],ht(p-h,y))}}for(let u=0;u<o.length;++u)o[u]=oe(o[u],i)}return o})}getDedupedMetricsNames(){let t=this.metricsNames,e=[];for(let r=0;r<t.length;++r){let s=t[r],a=s;py(t,s)>1&&(a+=`_${py(t.slice(0,r),s)}`),e.push(a)}return e}makeTrainFunction(){return t=>{let e=[],r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map(l=>l.read());return[this.optimizer_.minimize(()=>{let l=[];for(let p=0;p<this.inputs.length;++p)l.push({key:this.inputs[p],value:r[p]});let c=new Ra(l),u=ll(this.outputs,c,{training:!0}),h;for(let p=0;p<this.lossFunctions.length;++p){let d=(0,this.lossFunctions[p])(s[p],u[p]);a[p]!=null&&(d=ST(d,a[p]));let f=bn(d);e.push(f),h=p===0?d:Bt(h,d)}for(let p=0;p<this.metricsTensors.length;++p){let d;if(this.outputs.length>1&&p<this.outputs.length)d=e[p];else{let f=this.metricsTensors[p][0],m=this.metricsTensors[p][1];d=bn(f(s[m],u[m]))}Gn(d),i.push(d)}return h=bn(h),this.calculateLosses().forEach(p=>{h=Bt(h,p)}),h},!0,o)].concat(i)}}makeTestFunction(){this.testFunction=t=>wt(()=>{let e=[],r,s=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:s[c]});let o=new Ra(i),l=ll(this.outputs,o);for(let c=0;c<this.lossFunctions.length;++c){let u=this.lossFunctions[c],h=bn(u(a[c],l[c]));r=c===0?h:Bt(r,h),e.push(r)}for(let c=0;c<this.metricsTensors.length;++c){let u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],p=bn(u(a[h],l[h]));e.push(p)}return e})}async fit(t,e,r={}){return CT(this,t,e,r)}async fitDataset(t,e){return TT(this,t,e)}async trainOnBatch(t,e){let r=await this.standardizeUserData(t,e),s=r[0],a=r[1],i=this.makeTrainFunction()(s.concat(a)),o=[];for(let l of i){let c=await l.data();o.push(c[0])}return De(i),Is(r[0],t),Is(r[1],e),kr(o)}getNamedWeights(t){let e=[],r=t!=null&&t.trainableOnly,s=r?this.trainableWeights:this.weights,a=this.getWeights(r);for(let i=0;i<s.length;++i)r&&!s[i].trainable||e.push({name:s[i].originalName,tensor:a[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){let t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let e=Sd().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Sd().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Ys(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Ys(e))}else{let e=Object.keys(this.loss);t={};let r=this.loss;for(let s of e){if(typeof r[s]!="string")throw new Error("Serialization of non-string loss is not supported.");t[s]=Ys(r[s])}}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ys($h(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ys($h(t)));{let t={};for(let e in this.metrics)t[e]=Ys($h(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let e=Js(lm(t.optimizer_config)),r,s;if(typeof t.loss=="string")r=mi(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(a=>mi(a));else if(t.loss!=null){r={};for(let a in t.loss)r[a]=mi(t.loss[a])}if(Array.isArray(t.metrics))s=t.metrics.map(a=>mi(a));else if(t.metrics!=null){s={};for(let a in t.metrics)s[a]=mi(t.metrics[a])}this.compile({loss:r,metrics:s,optimizer:e})}async save(t,e){if(typeof t=="string"){let a=Yg(t);if(a.length===0)throw new gt(`Cannot find any save handlers for URL '${t}'`);if(a.length>1)throw new gt(`Found more than one (${a.length}) save handlers for URL '${t}'`);t=a[0]}if(t.save==null)throw new gt("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let r=await cd(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Jy}`,convertedBy:null};if(e!=null&&e.includeOptimizer&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let a="optimizer",{data:i,specs:o}=await cd(await this.optimizer.getWeights(),a);r.specs.push(...o),r.data=Dc([r.data,i])}return this.userDefinedMetadata!=null&&(Yy(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){Yy(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}ko.className="Model",Wt(ko);class ub extends ko{}ub.className="Functional",Wt(ub);class fl extends ko{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:fh("sequential_"),t.layers!=null)for(let e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new gt(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let e=t instanceof fl||t instanceof ko,r;if(e){if(r=t,r.outputs.length!==1)throw new gt("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new gt("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new gt("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=function(a){if(a.batchShape==null&&a.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(a.batchShape!=null&&a.shape!=null)throw new gt("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let i=a.batchShape;a.shape!=null&&i==null&&(i=[null].concat(a.shape));let o=a.dtype;return o==null&&(o="float32"),new ul({batchInputShape:i,name:a.name,dtype:o,sparse:a.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(s)}if(e)this.outputs=r.outputs,this.inputs=r.inputs;else{if(t.inboundNodes.length!==1)throw new gt(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new gt("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Fy(this.outputs[0])}this.inboundNodes=[],new xh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:fi(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=t.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(qe(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ko({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,r=console.log){this.built||this.build(),super.summary(t,e,r)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,r={}){if(!this.built)throw new es("The model needs to be compiled before being used.");return this.model.evaluate(t,e,r)}async evaluateDataset(t,e){if(!this.built)throw new es("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,r={}){if(!this.built)throw new es("The model needs to be compiled before being used.");return this.model.fit(t,e,r)}async fitDataset(t,e){if(!this.built)throw new es("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,r={},s=!1){let a,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new gt("Legacy serialization format not supported yet.");a=e}else z(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=e.layers,delete e.layers,i=e;let o=new t(i);if(!(o instanceof fl))throw new $e(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let l of a){let c=Js(l,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(t){if(this.model==null)throw new gt("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new gt("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let e of this.layers){let r={};r.className=e.getClassName(),r.config=e.getConfig(),t.push(r)}return{name:this.name,layers:t}}}fl.className="Sequential",Wt(fl);class Ir extends oo{getConfig(){return{}}}class lb extends Ir{apply(t,e=1){return function(r,s=1){if(s!==1)throw new $e(`Support for alpha values other than 1 (${s}) is not implemented yet.`);return Vu(r)}(t,e)}}lb.className="elu",Wt(lb);class cb extends Ir{apply(t){return Kd(t)}}cb.className="selu",Wt(cb);class hb extends Ir{apply(t){return _s(t)}}hb.className="relu",Wt(hb);class pb extends Ir{apply(t){return wt(()=>ju(6,_s(t)))}}pb.className="relu6",Wt(pb);class db extends Ir{apply(t){return t}}db.className="linear",Wt(db);class fb extends Ir{apply(t){return fs(t)}}fb.className="sigmoid",Wt(fb);class mb extends Ir{apply(t){return function(e){return wt(()=>{let r=Bt(.5,ht(.2,e));return Ar(r,0,1)})}(t)}}mb.className="hardSigmoid",Wt(mb);class gb extends Ir{apply(t){return fo(t)}}gb.className="softplus",Wt(gb);class yb extends Ir{apply(t){return function(e){return wt(()=>oe(e,Bt(Tn(e),1)))}(t)}}yb.className="softsign",Wt(yb);class bb extends Ir{apply(t){return co(t)}}bb.className="tanh",Wt(bb);class mm extends Ir{apply(t,e=-1){return eh(t,e)}}mm.className="softmax",Wt(mm);class xb extends Ir{apply(t,e=-1){return zd(t,e)}}xb.className="logSoftmax",Wt(xb);class vb extends Ir{apply(t,e=1){return wt(()=>ht(fs(ht(t,e)),t))}}vb.className="swish",Wt(vb);class wb extends Ir{apply(t){return wt(()=>ht(t,co(fo(t))))}}function Fa(n){return n.getClassName()}function gm(n,t={}){return nl(n,Zr.getMap().classNameMap,t,"activation")}function Da(n){if(n==null)return gm({className:"linear",config:{}});if(typeof n=="string"){let t={};return t.className=n,t.config={},gm(t)}return n instanceof Ir?n:gm(n)}function $T(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}wb.className="mish",Wt(wb);class kb extends oo{}class Ib extends kb{constructor(t){super(),$T(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return wt(()=>{let e=Cn([1]);return this.hasL1&&(e=Bt(e,ce(ht(this.l1,Tn(t))))),this.hasL2&&(e=Bt(e,ce(ht(this.l2,il(t))))),mt(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Ib.className="L1L2",Wt(Ib);let Nb={l1l2:"L1L2"};function Je(n){return Bf(n)}function Sb(n,t={}){return nl(n,Zr.getMap().classNameMap,t,"regularizer")}function pn(n){return n==null?null:typeof n=="string"?Sb({className:n in Nb?Nb[n]:n,config:{}}):n instanceof kb?n:Sb(n)}class Tb extends Be{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Ee(t);let r=_s(t);return this.maxValue!=null&&(r=Ar(r,0,this.maxValue)),r}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Tb.className="ReLU",Wt(Tb);class Cb extends Be{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let r=Ee(t);return jc(r,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Cb.className="LeakyReLU",Wt(Cb);class $b extends Be{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=hn(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=pn(t.alphaRegularizer),this.alphaConstraint=An(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if(typeof t.sharedAxes!="number")throw new gt(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){let e=(t=qe(t)).slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)e[s-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let r={};if(this.sharedAxes!=null)for(let s=1;s<t.length;++s)r[s]=t[s];this.inputSpec=[new En({ndim:t.length,axes:r})],this.built=!0}call(t,e){return t=Ee(t),Jc(t,this.alpha.read())}getConfig(){let t={alphaInitializer:gn(this.alphaInitializer),alphaRegularizer:Je(this.alphaRegularizer),alphaConstraint:_n(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}$b.className="PReLU",Wt($b);class Eb extends Be{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new $e(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let r=Ee(t);return Vu(r)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Eb.className="ELU",Wt(Eb);class _b extends Be{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){let r=Ee(t);return ht(r,ee(Vr(r,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}_b.className="ThresholdedReLU",Wt(_b);class Ab extends Be{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new mm().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){let r=Ee(t);return this.softmax(r,this.axis)}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Io(n,t,e){if(typeof n=="number")return fi(n,t);if(n.length!==t)throw new gt(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let r=0;r<t;++r){let s=n[r];if(!nT(s))throw new gt(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${s}`)}return n}function Ns(n,t,e,r,s=1){if(n==null)return n;let a;return a=e==="same"?n:n-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Os(n,t,e,r){if(n==null)return null;if(r==="valid")n=n*t+Aa([e-t,0]);else{if(r!=="same")throw new gt(`Unsupport padding mode: ${r}.`);n*=t}return n}function ym(n,t){return wt(()=>(kn(t),t==="channelsFirst"?Le(n,[0,2,3,1]):n))}function Rb(n,t){return wt(()=>(kn(t),t==="channelsFirst"?Le(n,[0,2,3,4,1]):n))}function ET(n,t,e,r=1,s="valid",a,i=1){return wt(()=>{if(a==null&&(a="channelsLast"),kn(a),n.shape.length!==3)throw new gt(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new gt(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new gt(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(n=Le(n,[0,2,1])),s==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ed(n,t,r,s==="same"?"same":"valid","NWC",i);return e!=null&&(o=ws(o,e)),o})}function Fb(n,t,e,r=[1,1],s="valid",a,i,o=null){return wt(()=>{if(a==null&&(a="channelsLast"),kn(a),n.rank!==3&&n.rank!==4)throw new gt(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new gt(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=ym(n,a);if(s==="causal")throw new $e("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=I1({x:l,filter:t,strides:r,pad:s==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:o}),a==="channelsFirst"&&(l=Le(l,[0,3,1,2])),l})}function _T(n,t,e,r=[1,1,1],s="valid",a,i){return wt(()=>{if(a==null&&(a="channelsLast"),kn(a),n.rank!==4&&n.rank!==5)throw new gt(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new gt(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let o=Rb(n,a);if(s==="causal")throw new $e("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=W0(o,t,r,s==="same"?"same":"valid","NDHWC",i),e!=null&&(o=ws(o,e)),a==="channelsFirst"&&(o=Le(o,[0,4,1,2,3])),o})}Ab.className="Softmax",Wt(Ab);class _h extends Be{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",_h.verifyArgs(e),this.rank=t,Mn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new $e(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Io(e.kernelSize,t,"kernelSize"),this.strides=Io(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,qr(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kn(this.dataFormat),this.activation=Da(e.activation),this.useBias=e.useBias==null||e.useBias,this.biasInitializer=hn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=An(e.biasConstraint),this.biasRegularizer=pn(e.biasRegularizer),this.activityRegularizer=pn(e.activityRegularizer),this.dilationRate=Io(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new gt(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new gt(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new gt(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Fs("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Vf(t.kernelSize,"number",1,3))throw new gt(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Fa(this.activation),useBias:this.useBias,biasInitializer:gn(this.biasInitializer),biasRegularizer:Je(this.biasRegularizer),activityRegularizer:Je(this.activityRegularizer),biasConstraint:_n(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class No extends _h{constructor(t,e){super(t,e),this.kernel=null,No.verifyArgs(e),this.filters=e.filters,Mn(this.filters,"filters"),this.kernelInitializer=hn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=An(e.kernelConstraint),this.kernelRegularizer=pn(e.kernelRegularizer)}build(t){t=qe(t);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new gt(`The channel dimension of the input should be defined. Found ${t[e]}`);let r=t[e],s=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:r}}],this.built=!0}call(t,e){return wt(()=>{let r;t=Ee(t);let s=this.bias==null?null:this.bias.read(),a=fy(this.activation.getClassName());if(a!=null&&this.rank===2)r=Fb(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)r=ET(t,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=Fb(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(this.rank!==3)throw new $e("convolutions greater than 3D are not implemented yet.");r=_T(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate)}this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=qe(t);let e=[],r=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<r.length;++a){let i=Ns(r[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);e.push(i)}let s=[t[0]];return this.dataFormat==="channelsLast"?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){let t={filters:this.filters,kernelInitializer:gn(this.kernelInitializer),kernelRegularizer:Je(this.kernelRegularizer),kernelConstraint:_n(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new gt(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class ml extends No{constructor(t){super(2,t),ml.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Vf(t.kernelSize,"number",1,2))throw new gt(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ml.className="Conv2D",Wt(ml);class gl extends No{constructor(t){super(3,t),gl.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&(!Array.isArray(t.kernelSize)||t.kernelSize.length!==1&&t.kernelSize.length!==3))throw new gt(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}gl.className="Conv3D",Wt(gl);class Db extends ml{constructor(t){if(super(t),this.inputSpec=[new En({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new gt(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if((t=qe(t)).length!==4)throw new gt("Input should have rank 4; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new gt("The channel dimension of the inputs should be defined. Found `None`.");let r=t[e],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new En({ndim:4,axes:{[e]:r}})],this.built=!0}call(t,e){return wt(()=>{let r=Ee(t);if(r.shape.length!==4)throw new gt(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let s=r.shape,a=s[0],i,o;this.dataFormat==="channelsFirst"?(i=2,o=3):(i=1,o=2);let l=s[i],c=s[o],u=this.kernelSize[0],h=this.kernelSize[1],p=this.strides[0],d=this.strides[1],f=[a,Os(l,p,u,this.padding),Os(c,d,h,this.padding),this.filters];this.dataFormat!=="channelsLast"&&(r=Le(r,[0,2,3,1]));let m=Ad(r,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(m=Le(m,[0,3,1,2])),this.bias!=null&&(m=ws(m,this.bias.read(),this.dataFormat)),this.activation!=null&&(m=this.activation.apply(m)),m})}computeOutputShape(t){let e=(t=qe(t)).slice(),r,s,a;this.dataFormat==="channelsFirst"?(r=1,s=2,a=3):(r=3,s=1,a=2);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[r]=this.filters,e[s]=Os(e[s],l,i,this.padding),e[a]=Os(e[a],c,o,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}}Db.className="Conv2DTranspose",Wt(Db);class Ob extends gl{constructor(t){if(super(t),this.inputSpec=[new En({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new gt(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if((t=qe(t)).length!==5)throw new gt("Input should have rank 5; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new gt("The channel dimension of the inputs should be defined. Found `None`.");let r=t[e],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new En({ndim:5,axes:{[e]:r}})],this.built=!0}call(t,e){return wt(()=>{let r=Ee(t);if(r.shape.length!==5)throw new gt(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let s=r.shape,a=s[0],i,o,l;this.dataFormat==="channelsFirst"?(l=2,i=3,o=4):(l=1,i=2,o=3);let c=s[l],u=s[i],h=s[o],p=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],y=this.strides[2],b=[a,Os(c,m,p,this.padding),Os(u,g,d,this.padding),Os(h,y,f,this.padding),this.filters];this.dataFormat!=="channelsLast"&&(r=Le(r,[0,2,3,4,1]));let $=U0(r,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&($=Le($,[0,4,1,2,3])),this.bias!==null&&($=ws($,this.bias.read(),this.dataFormat)),this.activation!==null&&($=this.activation.apply($)),$})}computeOutputShape(t){let e=(t=qe(t)).slice(),r,s,a,i;this.dataFormat==="channelsFirst"?(r=1,s=2,a=3,i=4):(r=4,s=1,a=2,i=3);let o=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],p=this.strides[2];return e[r]=this.filters,e[s]=Os(e[s],u,o,this.padding),e[a]=Os(e[a],h,l,this.padding),e[i]=Os(e[i],p,c,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}}Ob.className="Conv3DTranspose",Wt(Ob);class Mb extends No{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new gt("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new gt("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new gt(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=hn(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=pn(e.depthwiseRegularizer),this.depthwiseConstraint=An(e.depthwiseConstraint),this.pointwiseInitializer=hn(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=pn(e.pointwiseRegularizer),this.pointwiseConstraint=An(e.pointwiseConstraint)}build(t){if((t=qe(t)).length<this.rank+2)throw new gt(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new gt(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);let r=t[e],s=this.kernelSize.concat([r,this.depthMultiplier]),a=[];for(let o=0;o<this.rank;++o)a.push(1);a.push(r*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new En({ndim:this.rank+2,axes:{[e]:r}})],this.built=!0}call(t,e){return wt(()=>{let r;if(t=Ee(t),this.rank===1)throw new $e("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Le(t,[0,2,3,1])),r=Xd(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=ws(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Le(r,[0,3,1,2])),r})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=gn(this.depthwiseInitializer),t.pointwiseInitializer=gn(this.pointwiseInitializer),t.depthwiseRegularizer=Je(this.depthwiseRegularizer),t.pointwiseRegularizer=Je(this.pointwiseRegularizer),t.depthwiseConstraint=_n(this.depthwiseConstraint),t.pointwiseConstraint=_n(this.pointwiseConstraint),t}}Mb.className="SeparableConv";class Lb extends Mb{constructor(t){super(2,t)}}Lb.className="SeparableConv2D",Wt(Lb);class Ah extends No{constructor(t){super(1,t),Ah.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Vf(t.kernelSize,"number",1,1))throw new gt(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Ah.className="Conv1D",Wt(Ah);class zb extends Be{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return wt(()=>{if(t=Ee(t),this.dataFormat==="channelsLast"){let r=mh(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return mh(r,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let r=mh(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return mh(r,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}zb.className="Cropping2D",Wt(zb);class Pb extends Be{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,e=this.interpolation,gi(ZS,"InterpolationFormat",e)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let e=t[2]==null?null:this.size[0]*t[2],r=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,r]}{let e=t[1]==null?null:this.size[0]*t[1],r=t[2]==null?null:this.size[1]*t[2];return[t[0],e,r,t[3]]}}call(t,e){return wt(()=>{let r=Ee(t),s=r.shape;if(this.dataFormat==="channelsFirst"){r=Le(r,[0,2,3,1]);let a=this.size[0]*s[2],i=this.size[1]*s[3],o=this.interpolation==="nearest"?bs.resizeNearestNeighbor(r,[a,i]):bs.resizeBilinear(r,[a,i]);return Le(o,[0,3,1,2])}{let a=this.size[0]*s[1],i=this.size[1]*s[2];return this.interpolation==="nearest"?bs.resizeNearestNeighbor(r,[a,i]):bs.resizeBilinear(r,[a,i])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}Pb.className="UpSampling2D",Wt(Pb);class Bb extends _h{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=hn(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=An(t.depthwiseConstraint),this.depthwiseRegularizer=pn(t.depthwiseRegularizer)}build(t){if((t=qe(t)).length<4)throw new gt(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new gt(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);let r=t[e],s=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return wt(()=>{let r=function(s,a,i=[1,1],o="valid",l,c){return wt(()=>{l==null&&(l="channelsLast"),kn(l);let u=ym(s,l);if(s.rank!==4)throw new gt(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(a.rank!==4)throw new gt(`depthwiseKernel is required to be 4-D, but is instead ${a.rank}-D`);return u=Wu(u,a,i,o==="same"?"same":"valid","NHWC",c),l==="channelsFirst"&&(u=Le(u,[0,3,1,2])),u})}(t=Ee(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=ws(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(t){t=qe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],s=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=Ns(e,this.kernelSize[0],this.padding,this.strides[0]),i=Ns(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],s,a,i]:[t[0],a,i,s]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=gn(this.depthwiseInitializer),t.depthwiseRegularizer=Je(this.depthwiseRegularizer),t.depthwiseConstraint=_n(this.depthwiseRegularizer),t}}function Wb(n,t,e,r){if(Array.isArray(n)){if(t!=null||e!=null)throw new gt("When inputs is an array, neither initialState or constants should be provided");r!=null&&(e=n.slice(n.length-r,n.length),n=n.slice(0,n.length-r)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function s(a){return a==null||Array.isArray(a)?a:[a]}return{inputs:n,initialState:t=s(t),constants:e=s(e)}}function Vb(n,t,e,r=!1,s,a,i=!1,o=!1){return wt(()=>{let l=t.shape.length;if(l<3)throw new gt(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(vs(2,l));if(t=Le(t,c),a!=null)throw new $e("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),s!=null&&((s=ee(ee(s,"bool"),"float32")).rank===l-1&&(s=vr(s,-1)),s=Le(s,c)),r&&(t=ts(t,0),s!=null&&(s=ts(s,0)));let u=[],h,p=e,d=t.shape[0],f=ys(t),m,g;s!=null&&(m=ys(s));for(let y=0;y<d;++y){let b=f[y],$=wt(()=>n(b,p));if(s==null)h=$[0],p=$[1];else{let _=wt(()=>{let M=m[y],Y=ne(Hr(M),M);return{output:Bt(ht($[0],M),ht(p[0],Y)),newStates:p.map((tt,Q)=>Bt(ht($[1][Q],M),ht(tt,Y)))}});h=_.output,p=_.newStates}o&&u.push(h)}return o&&(g=jr(u,1)),[h,g,p]})}Bb.className="DepthwiseConv2D",Wt(Bb);class Oa extends Be{constructor(t){let e;if(super(t),t.cell==null)throw new gt("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new vm({cells:t.cell}):t.cell,e.stateSize==null)throw new gt("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences!=null&&t.returnSequences,this.returnState=t.returnState!=null&&t.returnState,this.goBackwards=t.goBackwards!=null&&t.goBackwards,this._stateful=t.stateful!=null&&t.stateful,this.unroll=t.unroll!=null&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new En({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return this.states_==null?vs(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null):this.states_}setStates(t){this.states_=t}computeOutputShape(t){em(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);let r=e[0],s;if(s=this.returnSequences?[t[0],t[1],r]:[t[0],r],this.returnState){let a=[];for(let i of e)a.push([t[0],i]);return[s].concat(a)}return s}computeMask(t,e){return wt(()=>{Array.isArray(e)&&(e=e[0]);let r=this.returnSequences?e:null;if(this.returnState){let s=this.states.map(a=>null);return[r].concat(s)}return r})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let r=0;r<t;++r)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new $e("Constants support is not implemented in RNN yet.");em(t)&&(t=t[0]);let e=this.stateful?t[0]:null,r=t.slice(2);this.inputSpec[0]=new En({shape:[e,null,...r]});let s=[t[0]].concat(t.slice(2)),a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],this.stateSpec!=null){if(!se(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new gt(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new En({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){wt(()=>{if(!this.stateful)throw new Rs("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape[0];if(r==null)throw new gt("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Cn([r,s])):this.states_=[Cn([r,this.cell.stateSize])];else if(t==null)De(this.states_),this.keptStates!=null&&(De(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Cn([r,s])):this.states_[0]=Cn([r,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new gt(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):De(this.states_);for(let s=0;s<this.states_.length;++s){let a=t[s],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[r,i];if(!se(a.shape,o))throw new gt(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${a.shape}`);this.states_[s]=a}}this.states_=this.states_.map(s=>Gn(s.clone()))})}apply(t,e){let r=e==null?null:e.initialState,s=e==null?null:e.constants;e==null&&(e={});let a=Wb(t,r,s,this.numConstants);t=a.inputs,r=a.initialState,s=a.constants;let i=[],o=[];if(r!=null){e.initialState=r,i=i.concat(r),this.stateSpec=[];for(let l of r)this.stateSpec.push(new En({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(e.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof Ds){let l=[t].concat(i),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let h=super.apply(l,e);return this.inputSpec=u,h}return super.apply(t,e)}call(t,e){return wt(()=>{let r=e==null?null:e.mask,s=e==null?null:e.training,a=e==null?null:e.initialState;t=Ee(t),a==null&&(a=this.stateful?this.states_:this.getInitialState(t));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new gt(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=Vb((d,f)=>{let m=this.cell.call([d].concat(f),o);return[m[0],m.slice(1)]},t,a,this.goBackwards,r,null,this.unroll,this.returnSequences),c=l[0],u=l[1],h=l[2];this.stateful&&this.resetStates(h,s);let p=this.returnSequences?u:c;return this.returnState?[p].concat(h):p})}getInitialState(t){return wt(()=>{let e=Cn(t.shape);return e=ce(e,[1,2]),e=al(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?jf(e,[1,r]):e):this.cell.stateSize>1?[jf(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===Oa.className&&(e.cell={className:this.cell.getClassName(),config:r}),Object.assign({},r,t,e)}static fromConfig(t,e,r={}){let s=Js(e.cell,r);return new t(Object.assign(e,{cell:s}))}}Oa.className="RNN",Wt(Oa);class Rh extends Be{}class bm extends Rh{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Mn(this.units,"units"),this.activation=Da(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null||t.useBias,this.kernelInitializer=hn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=pn(t.kernelRegularizer),this.recurrentRegularizer=pn(t.recurrentRegularizer),this.biasRegularizer=pn(t.biasRegularizer),this.kernelConstraint=An(t.kernelConstraint),this.recurrentConstraint=An(t.recurrentConstraint),this.biasConstraint=An(t.biasConstraint),this.dropout=wo([1,Aa([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=wo([1,Aa([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=qe(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return wt(()=>{if(t.length!==2)throw new gt(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let r=t[1];t=t[0];let s=e.training!=null&&e.training,a;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ma({ones:()=>Hr(t),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ma({ones:()=>Hr(r),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=this.recurrentDropoutMask;a=Zs(i!=null?ht(t,i):t,this.kernel.read()),this.bias!=null&&(a=ws(a,this.bias.read())),o!=null&&(r=ht(r,o));let l=Bt(a,Zs(r,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Fa(this.activation),useBias:this.useBias,kernelInitializer:gn(this.kernelInitializer),recurrentInitializer:gn(this.recurrentInitializer),biasInitializer:gn(this.biasInitializer),kernelRegularizer:Je(this.kernelRegularizer),recurrentRegularizer:Je(this.recurrentRegularizer),biasRegularizer:Je(this.biasRegularizer),activityRegularizer:Je(this.activityRegularizer),kernelConstraint:_n(this.kernelConstraint),recurrentConstraint:_n(this.recurrentConstraint),biasConstraint:_n(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}bm.className="SimpleRNNCell",Wt(bm);class Ub extends Oa{constructor(t){t.cell=new bm(t),super(t)}call(t,e){return wt(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=e==null?null:e.mask,s=e==null?null:e.training,a=e==null?null:e.initialState;return super.call(t,{mask:r,training:s,initialState:a})})}static fromConfig(t,e){return new t(e)}}Ub.className="SimpleRNN",Wt(Ub);class xm extends Rh{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new gt("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Mn(this.units,"units"),this.activation=Da(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Da(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null||t.useBias,this.kernelInitializer=hn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=pn(t.kernelRegularizer),this.recurrentRegularizer=pn(t.recurrentRegularizer),this.biasRegularizer=pn(t.biasRegularizer),this.kernelConstraint=An(t.kernelConstraint),this.recurrentConstraint=An(t.recurrentConstraint),this.biasConstraint=An(t.biasConstraint),this.dropout=wo([1,Aa([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=wo([1,Aa([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){let e=(t=qe(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return wt(()=>{if(t.length!==2)throw new gt(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let r=e.training!=null&&e.training,s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ma({ones:()=>Hr(t),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ma({ones:()=>Hr(s),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,o,l,c;0<this.dropout&&this.dropout<1&&(t=ht(t,a[0]));let u=Zs(t,this.kernel.read());this.useBias&&(u=ws(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ht(s,i[0]));let h=this.recurrentKernel.read(),[p,d]=Rr(h,[2*this.units,this.units],h.rank-1),f=Zs(s,p),[m,g,y]=Rr(u,3,u.rank-1),[b,$]=Rr(f,2,f.rank-1);o=this.recurrentActivation.apply(Bt(m,b)),l=this.recurrentActivation.apply(Bt(g,$));let _=Zs(ht(l,s),d);c=this.activation.apply(Bt(y,_));let M=Bt(ht(o,s),ht(Bt(1,cn(o)),c));return[M,M]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Fa(this.activation),recurrentActivation:Fa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:gn(this.kernelInitializer),recurrentInitializer:gn(this.recurrentInitializer),biasInitializer:gn(this.biasInitializer),kernelRegularizer:Je(this.kernelRegularizer),recurrentRegularizer:Je(this.recurrentRegularizer),biasRegularizer:Je(this.biasRegularizer),activityRegularizer:Je(this.activityRegularizer),kernelConstraint:_n(this.kernelConstraint),recurrentConstraint:_n(this.recurrentConstraint),biasConstraint:_n(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}xm.className="GRUCell",Wt(xm);class Gb extends Oa{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new xm(t),super(t)}call(t,e){return wt(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=e==null?null:e.mask,s=e==null?null:e.training,a=e==null?null:e.initialState;return super.call(t,{mask:r,training:s,initialState:a})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Gb.className="GRU",Wt(Gb);class Fh extends Rh{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Mn(this.units,"units"),this.activation=Da(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Da(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null||t.useBias,this.kernelInitializer=hn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=pn(t.kernelRegularizer),this.recurrentRegularizer=pn(t.recurrentRegularizer),this.biasRegularizer=pn(t.biasRegularizer),this.kernelConstraint=An(t.kernelConstraint),this.recurrentConstraint=An(t.recurrentConstraint),this.biasConstraint=An(t.biasConstraint),this.dropout=wo([1,Aa([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=wo([1,Aa([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;let r=(t=qe(t))[t.length-1],s;if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,i=this.units;s=new((e=class extends rs{apply(o,l){let c=a.apply([i]),u=new Kf().apply([i]),h=a.apply([2*i]);return vy(vy(c,u),h)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return wt(()=>{let r=e.training!=null&&e.training;if(t.length!==3)throw new gt(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1],a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ma({ones:()=>Hr(t),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ma({ones:()=>Hr(s),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=this.recurrentDropoutMask,l,c,u,h;0<this.dropout&&this.dropout<1&&(t=ht(t,i[0]));let p=Zs(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ht(s,o[0])),p=Bt(p,Zs(s,this.recurrentKernel.read())),this.useBias&&(p=ws(p,this.bias.read()));let[d,f,m,g]=Rr(p,4,p.rank-1);l=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(f),u=Bt(ht(c,a),ht(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);let y=ht(h,this.activation.apply(u));return[y,y,u]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:Fa(this.activation),recurrentActivation:Fa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:gn(this.kernelInitializer),recurrentInitializer:gn(this.recurrentInitializer),biasInitializer:gn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Je(this.kernelRegularizer),recurrentRegularizer:Je(this.recurrentRegularizer),biasRegularizer:Je(this.biasRegularizer),activityRegularizer:Je(this.activityRegularizer),kernelConstraint:_n(this.kernelConstraint),recurrentConstraint:_n(this.recurrentConstraint),biasConstraint:_n(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Fh.className="LSTMCell",Wt(Fh);class Hb extends Oa{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Fh(t),super(t)}call(t,e){return wt(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=e==null?null:e.mask,s=e==null?null:e.training,a=e==null?null:e.initialState;return super.call(t,{mask:r,training:s,initialState:a})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Hb.className="LSTM",Wt(Hb);class vm extends Rh{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return wt(()=>{let r=t.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(r.splice(0,o.stateSize.length)):s.push(r.splice(0,1));s.reverse();let a=[],i;for(let o=0;o<this.cells.length;++o){let l=this.cells[o];r=s[o],i=o===0?[t[0]].concat(r):[i[0]].concat(r),i=l.call(i,e),a.push(i.slice(1))}r=[];for(let o of a.slice().reverse())r.push(...o);return[i[0]].concat(r)})}build(t){let e;em(t)&&(t=t[0]),this.cells.forEach((r,s)=>{yi(`RNNCell_${s}`,()=>{r.build(t),e=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){let t=super.getConfig(),e={cells:this.cells.map(r=>({className:r.getClassName(),config:r.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,r={}){let s=[];for(let a of e.cells)s.push(Js(a,r));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let r of this.cells)e.push(...r.trainableWeights);return e.concat(t)}return t}getWeights(){let t=[];for(let e of this.cells)t.push(...e.weights);return nm(t)}setWeights(t){let e=[];for(let r of this.cells){let s=r.weights.length,a=t.splice(s);for(let i=0;i<r.weights.length;++i)e.push([r.weights[i],a[i]])}rm(e)}}function Ma(n){let{ones:t,rate:e,training:r=!1,count:s=1,dropoutFunc:a}=n,i=()=>a!=null?a(t(),e):ky(t(),e),o=()=>ol(i,t,r);return!s||s<=1?Gn(o().clone()):Array(s).fill(void 0).map(o).map(l=>Gn(l.clone()))}vm.className="StackedRNNCells",Wt(vm);var AT=function(n,t){var e={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&t.indexOf(r)<0&&(e[r]=n[r]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function"){var s=0;for(r=Object.getOwnPropertySymbols(n);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(n,r[s])&&(e[r[s]]=n[r[s]])}return e};class jb extends Oa{constructor(t){if(t.unroll)throw new $e("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new $e("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new En({ndim:5})]}call(t,e){return wt(()=>{if(this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new gt("ConvRNN2D cell does not support constants");let r=e==null?null:e.mask,s=e==null?null:e.training,a=e==null?null:e.initialState;return super.call(t,{mask:r,training:s,initialState:a})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return wt(()=>{let{stateSize:e}=this.cell,r=t.shape,s=this.computeSingleOutputShape(r),a=Cn([s[0],...s.slice(2)]);return Array.isArray(e)?Array(e.length).fill(a):[a]})}resetStates(t,e=!1){wt(()=>{if(!this.stateful)throw new Rs("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape,s=this.computeSingleOutputShape(r),a=[s[0],...s.slice(2)];if(r[0]==null)throw new gt("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Cn(a)):this.states_=[Cn(a)];else if(t==null)De(this.states_),this.keptStates!=null&&(De(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Cn(a)):this.states_[0]=Cn(a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new gt(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):De(this.states_);for(let i=0;i<this.states_.length;++i){let o=t[i],l=a;if(!se(o.shape,l))throw new gt(`State ${i} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${o.shape}`);this.states_[i]=o}}this.states_=this.states_.map(i=>Gn(i.clone()))})}computeSingleOutputShape(t){let{dataFormat:e,filters:r,kernelSize:s,padding:a,strides:i,dilationRate:o}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],h=Ns(c,s[0],a,i[0],o[0]),p=Ns(u,s[1],a,i[1],o[1]);return[...t.slice(0,2),...l?[r,h,p]:[h,p,r]]}}jb.className="ConvRNN2D";class wm extends Fh{constructor(t){let{filters:e,kernelSize:r,strides:s,padding:a,dataFormat:i,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,Mn(this.filters,"filters"),this.kernelSize=Io(r,2,"kernelSize"),this.kernelSize.forEach(l=>Mn(l,"kernelSize")),this.strides=Io(s||1,2,"strides"),this.strides.forEach(l=>Mn(l,"strides")),this.padding=a||"valid",qr(this.padding),this.dataFormat=i||"channelsLast",kn(this.dataFormat),this.dilationRate=Io(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>Mn(l,"dilationRate"))}build(t){var e;t=qe(t);let r=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[r]==null)throw new gt(`The channel dimension of the input should be defined. Found ${t[r]}`);let s=t[r],a=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;o=new((e=class extends rs{apply(u,h){return Hf([l.apply([c]),Gr([c]),l.apply([2*c])])}}).className="CustomInit",e)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return wt(()=>{if(t.length!==3)throw new gt(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=e.training||!1,s=t[0],a=t[1],i=t[2];0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ma({ones:()=>Hr(s),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(_t,At,Mt)=>At&&At[Mt]?ht(At[Mt],_t):_t,c=l(s,o,0),u=l(s,o,1),h=l(s,o,2),p=l(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ma({ones:()=>Hr(a),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,f=l(a,d,0),m=l(a,d,1),g=l(a,d,2),y=l(a,d,3),[b,$,_,M]=Rr(this.kernel.read(),4,3),[Y,tt,Q,et]=this.useBias?Rr(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,b,Y,this.padding),u=this.inputConv(u,$,tt,this.padding),h=this.inputConv(h,_,Q,this.padding),p=this.inputConv(p,M,et,this.padding);let[rt,lt,ft,yt]=Rr(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,rt),m=this.recurrentConv(m,lt),g=this.recurrentConv(g,ft),y=this.recurrentConv(y,yt);let kt=this.recurrentActivation.apply(Bt(c,f)),Tt=this.recurrentActivation.apply(Bt(u,m)),It=Bt(ht(Tt,i),ht(kt,this.activation.apply(Bt(h,g)))),Et=ht(this.recurrentActivation.apply(Bt(p,y)),this.activation.apply(It));return[Et,Et,It]})}getConfig(){let t=super.getConfig(),{units:e}=t,r=AT(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},r,s)}inputConv(t,e,r,s){let a=Sa(t,e,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?ws(a,r,this.dataFormat):a}recurrentConv(t,e){return Sa(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}wm.className="ConvLSTM2DCell",Wt(wm);class qb extends jb{constructor(t){let e=new wm(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}qb.className="ConvLSTM2D",Wt(qb);class km extends Be{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let e=t.shape,r=[];for(let s=0;s<this.noiseShape.length;++s)r.push(this.noiseShape[s]==null?e[s]:this.noiseShape[s]);return r}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t);if(0<this.rate&&this.rate<1){let s=e.training!=null&&e.training,a=this.getNoiseShape(r);return ol(()=>ky(r,this.rate,a,this.seed),()=>r,s)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}km.className="Dropout",Wt(km);class Kb extends km{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}}Kb.className="SpatialDropout1D",Wt(Kb);class Xb extends Be{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Mn(this.units,"units"),this.activation=Da(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=hn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=hn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=An(t.kernelConstraint),this.biasConstraint=An(t.biasConstraint),this.kernelRegularizer=pn(t.kernelRegularizer),this.biasRegularizer=pn(t.biasRegularizer),this.activityRegularizer=pn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){let e=(t=qe(t))[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){let e=(t=qe(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t),s=fy(this.activation.getClassName()),a;return s!=null?a=Zs(r,this.kernel.read(),s,this.bias?this.bias.read():null):(a=Zs(r,this.kernel.read()),this.bias!=null&&(a=ws(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let t={units:this.units,activation:Fa(this.activation),useBias:this.useBias,kernelInitializer:gn(this.kernelInitializer),biasInitializer:gn(this.biasInitializer),kernelRegularizer:Je(this.kernelRegularizer),biasRegularizer:Je(this.biasRegularizer),activityRegularizer:Je(this.activityRegularizer),kernelConstraint:_n(this.kernelConstraint),biasConstraint:_n(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Xb.className="Dense",Wt(Xb);class Yb extends Be{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=qe(t);for(let e of t.slice(1))if(e==null)throw new gt(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],_a(t,1)]}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t);if(this.dataFormat==="channelsFirst"&&r.rank>1){let s=[0];for(let a=2;a<r.rank;++a)s.push(a);s.push(1),r=Le(r,s)}return function(s){if(s.rank<=1)throw new gt(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);let a=[s.shape[0],_a(s.shape,1)];return mt(s,a)}(r)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let e=super.getConfig();return Object.assign(t,e),t}}Yb.className="Flatten",Wt(Yb);class Zb extends Be{constructor(t){super(t),this.supportsMasking=!0,this.activation=Da(t.activation)}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t);return this.activation.apply(r)})}getConfig(){let t={activation:Fa(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Zb.className="Activation",Wt(Zb);class Jb extends Be{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return wt(()=>function(r,s){return wt(()=>{if(r.shape.length!==2)throw new gt(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);return jf(al(r,1),[1,s,1])})}(t=Ee(t),this.n))}getConfig(){let t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Jb.className="RepeatVector",Wt(Jb);class Qb extends Be{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){let r="Total size of new array must be unchanged.",s=e.slice(),a=1,i=null;for(let l=0;l<s.length;++l){let c=s[l];if(this.isUnknown(c)){if(i!==null)throw new gt("Can only specifiy one unknown dimension.");i=l}else a*=c}let o=_a(t);if(i!==null){if(a===0||o%a!=0)throw new gt(r);s[i]=o/a}else if(o!==a)throw new gt(r);return s}computeOutputShape(t){let e=!1;for(let r=0;r<t.length;++r)if(this.isUnknown(t[r])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t),s=r.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return mt(r,a)})}getConfig(){let t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Qb.className="Reshape",Wt(Qb);class tx extends Be{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let e=vs(1,t.dims.length+1);if(!se(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new En({ndim:this.dims.length+1})]}computeOutputShape(t){let e=(t=qe(t)).slice();return this.dims.forEach((r,s)=>{e[s+1]=t[r]}),e}call(t,e){return Le(Ee(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}tx.className="Permute",Wt(tx);class ex extends Be{constructor(t){super(t??{}),this.supportsMasking=!0,this.maskValue=t!=null?t.maskValue==null?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){let r=Ee(t);return Lc(mo(r,this.maskValue),-1)}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t),s=Lc(mo(r,this.maskValue),-1,!0);return ht(r,ee(s,r.dtype))})}}ex.className="Masking",Wt(ex);class nx extends Be{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(ln(t.inputLength))}this.inputDim=t.inputDim,Mn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Mn(this.outputDim,"outputDim"),this.embeddingsInitializer=hn(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=pn(t.embeddingsRegularizer),this.activityRegularizer=pn(t.activityRegularizer),this.embeddingsConstraint=An(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return wt(()=>this.maskZero?(t=Ee(t),mo(t,Pe(t))):null)}computeOutputShape(t){if(t=qe(t),this.inputLength==null)return[...t,this.outputDim];let e=ln(this.inputLength);if(e.length!==t.length-1)throw new gt(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let r=0;for(let s=0;s<e.length;++s){let a=e[s],i=t[s+1];if(a!=null&&i!=null&&a!==i)throw new gt(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);a==null&&(e[r]=i),r++}}return[t[0],...e,this.outputDim]}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t);r.dtype!=="int32"&&(r=sl(r,"int32"));let s=wy(this.embeddings.read(),mt(r,[r.size]));return mt(s,qe(this.computeOutputShape(r.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:gn(this.embeddingsInitializer),embeddingsRegularizer:Je(this.embeddingsRegularizer),activityRegularizer:Je(this.activityRegularizer),embeddingsConstraint:_n(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}nx.className="Embedding",Wt(nx);class vi extends Be{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new $e}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;let r=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){let a=t[t.length-e.length+s],i=e[s];if(a==null||i==null||a<0||i<0)r.push(null);else if(a===1)r.push(i);else if(i===1)r.push(a);else{if(a!==i)throw new gt("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));r.push(a)}}return r}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[qe(t)]),t.length<2)throw new gt(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(let a of t)a!=null&&a[0]!==null&&e.push(a[0]);if(e=Ea(e),e.length>1)throw new gt(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let r=t[0]==null?null:t[0].slice(1);for(let a=1;a<t.length;++a){let i=t[a]==null?null:t[a].slice(1);r=this.computeElementwiseOpOutputShape(r,i)}let s=t.map(a=>a.length);t.indexOf(null)===-1&&Ea(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return wt(()=>{if(this.reshapeRequired){let r=[],s=t.map(a=>a.rank);if(s.indexOf(null)===-1){let a=Aa(s);for(let i of t){let o=i.rank;for(let l=0;l<a-o;++l)i=al(i,1);r.push(i)}return this.mergeFunction(r)}{let a=!1;for(let l of t){let c=l.rank;if(c==null){let u=l.shape,h=u[0],p=u.slice(1).concat([h]),d=mt(l,[h].concat(_a(u.slice(1))));d=Le(d,[1,0]),d=mt(d,p),r.push(d),a=!0}else if(c>1){let u=vs(1,c).concat([0]);r.push(Le(l,u)),a=!0}else r.push(l)}let i=this.mergeFunction(r),o=i.rank;if(a){if(o==null){let l=i.shape,c=l[l.length-1],u=[c].concat(l.slice(0,l.length-1));i=mt(Le(mt(i,[-1,c]),[1,0]),u)}else if(o>1){let l=[o-1].concat(vs(0,o-1));i=Le(i,l)}}return i}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=t[0]==null?null:t[0].slice(1);for(let s=1;s<t.length;++s){let a=t[s]==null?null:t[s].slice(1);e=this.computeElementwiseOpOutputShape(e,a)}let r=[];for(let s of t)s!=null&&s[0]!==null&&r.push(s[0]);return r=Ea(r),e=r.length===1?r.concat(e):[null].concat(e),e}computeMask(t,e){return wt(()=>{if(e==null)return null;if(!Array.isArray(e))throw new gt("`mask` should be an Array");if(!Array.isArray(t))throw new gt("`inputs` should be an Array");if(e.length!==t.length)throw new gt(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(s=>s==null))return null;let r=(e=e.map(s=>s==null?s:vr(s,0)))[0];for(let s=1;s<e.length-1;++s)r=Es(r,e[s]);return r})}}class rx extends vi{constructor(t){super(t)}mergeFunction(t){return wt(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=Bt(e,t[r]);return e})}}rx.className="Add",Wt(rx);class sx extends vi{constructor(t){super(t)}mergeFunction(t){return wt(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=ht(e,t[r]);return e})}}sx.className="Multiply",Wt(sx);class ax extends vi{constructor(t){super(t)}mergeFunction(t){return wt(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=Bt(e,t[r]);return ht(1/t.length,e)})}}ax.className="Average",Wt(ax);class ix extends vi{constructor(t){super(t)}mergeFunction(t){return wt(()=>{let e=t[0];for(let r=1;r<t.length;++r)e=js(e,t[r]);return e})}}ix.className="Maximum",Wt(ix);class ox extends vi{constructor(t){super(t)}mergeFunction(t){return wt(()=>{let e=t[0];for(let r=1;r<t.length;++r)e=ju(e,t[r]);return e})}}ox.className="Minimum",Wt(ox);class ux extends vi{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||t.length===1)throw new gt("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(let s of t)if(s!=null){e=!1;break}if(e)return;let r=[];for(let s=0;s<t.length;++s){let a=t[s].slice();a.splice(this.axis,1);let i=!1;for(let o of r)if(se(o,a)){i=!0;break}i||r.push(a)}if(r.length>1)throw new gt("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return wt(()=>Hf(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new gt("A `Concatenate` layer should be called on a list of inputs.");let e=t,r=e[0].slice(),s=this.axis<0?r.length+this.axis:this.axis;for(let a of e.slice(1)){if(r[s]==null||a[s]==null){r[s]=null;break}r[s]+=a[s]}return r}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new gt("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new gt("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new gt(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return wt(()=>{let r=!0;if(e.forEach(i=>{i==null||(r=!1)}),r)return null;let s=[];for(let i=0;i<t.length;++i)e[i]==null?s.push(ee(Hr(t[i]),"bool")):e[i].rank<t[i].rank?s.push(vr(e[i],-1)):s.push(e[i]);let a=un(s,this.axis);return Td(a,-1,!1)})}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function yl(n,t){for(;n<0;)n+=t;return n}ux.className="Concatenate",Wt(ux);class lx extends vi{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize!=null&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){z(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0],r=t[1];if(e.length>3||r.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(e,r);if(e[s[0]]!==r[s[1]])throw new gt(`Dimension incompatibility: ${e[s[0]]} !== ${r[s[1]]}`)}mergeFunction(t){if(t.length!==2)throw new gt(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,r=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map((a,i)=>yl(a,t[i].shape.length)):[yl(this.axes,r.shape.length),yl(this.axes,s.shape.length)],this.normalize&&(r=kh(r,e[0]),s=kh(s,e[1])),function(a,i,o){if(a.shape.length>3||i.shape.length>3)throw new $e("batchDot is not implemented for tensors of 4D or higher rank yet");if(z(a.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${a.shape.length}`),z(a.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${i.shape.length}`),typeof o=="number"&&(o=[o,o]),a.dtype==="complex64"||i.dtype==="complex64")throw new $e("batchDot is not implemented for complex64-type Tensors yet.");let l=a.shape.length,c=i.shape.length;o==null&&(o=[l-1,c-2]);let u=o;return wt(()=>{let h,p;if(l>c){h=l-c;let d=[];for(let f=0;f<h;++f)d.push(1);i=mt(i,i.shape.concat(d))}else if(c>l){h=c-l;let d=[];for(let f=0;f<h;++f)d.push(1);a=mt(a,a.shape.concat(d))}else h=0;if(a.shape.length===2&&i.shape.length===2)p=u[0]===u[1]?ce(ht(a,i),u[0]):ce(ht(Le(a,[1,0]),i),u[1]);else{let d=u[0]!==a.shape.length-1,f=u[1]===i.shape.length-1;p=Oe(a,i,d,f)}if(h>0){let d;d=l>c?l+c-3:l-1;let f=[];for(let m=d;m<d+h;++m)f.push(m);p=Fr(p,f)}return p.shape.length===1&&(p=vr(p,1)),p})}(r,s,e)}interpretAxes(t,e){let r;return r=Array.isArray(this.axes)?this.axes:[yl(this.axes,t.length),yl(this.axes,e.length)],r}computeOutputShape(t){z(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0].slice(),r=t[1].slice();if(e.length>3||r.length>3)throw new $e("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(e,r);e.splice(s[0],1),r.splice(s[1],1),r.splice(0,1);let a=e.concat(r);return a.length===1&&a.push(1),a}computeMask(t,e){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}lx.className="Dot",Wt(lx);class cx extends Be{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t);return ol(()=>Bt(gh(r.shape,0,this.stddev),r),()=>r,e.training||!1)})}}cx.className="GaussianNoise",Wt(cx);class hx extends Be{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return wt(()=>{this.invokeCallHook(t,e);let r=Ee(t);return this.rate>0&&this.rate<1?ol(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return ht(r,gh(r.shape,1,s))},()=>r,e.training||!1):r})}}hx.className="GaussianDropout",Wt(hx);class px extends Be{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Ee(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return wt(()=>{if(this.rate<1&&this.rate>0){let r=this._getNoiseShape(t);return ol(()=>{let a=Ee(t),i=-1.7580993408473766,o=ci(qu(r),this.rate);o=sl(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,c=-l*i*this.rate,u=Bt(ht(a,o),ht(Bt(o,-1),i));return Bt(ht(u,l),c)},()=>Ee(t),e.training||!1)}return t})}}function bl(n,t,e,r,s,a=.001){let i;if(n.rank===2)i=F0(n,t,e,r,s,a);else if(n.rank===3)i=D0(n,t,e,r,s,a);else{if(n.rank!==4)throw new $e(`batchNormalization is not implemented for array of rank ${n.rank} yet`);i=O0(n,t,e,r,s,a)}return i}function RT(n,t,e,r,s=.001){return se(r.slice().sort(),vs(0,n.rank-1))?function(a,i,o,l,c=.001){return wt(()=>{let u=Yc(a,l),h=u.mean,p=u.variance;return[bl(a,h,p,o,i,c),h,p]})}(n,t,e,r,s):function(a,i,o,l,c=.001){return wt(()=>{let u=Yc(a,l),h=u.mean,p=u.variance,d=[];for(let b of vs(0,a.rank))l.indexOf(b)!==-1?d.push(1):d.push(a.shape[b]);let f=mt(h,d),m=mt(p,d),g=i==null?null:mt(i,d),y=o==null?null:mt(o,d);return[bl(a,f,m,y,g,c),h,p]})}(n,t,e,r,s)}px.className="AlphaDropout",Wt(px);class dx extends Be{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null||t.center,this.scale=t.scale==null||t.scale,this.betaInitializer=hn(t.betaInitializer||"zeros"),this.gammaInitializer=hn(t.gammaInitializer||"ones"),this.movingMeanInitializer=hn(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=hn(t.movingVarianceInitializer||"ones"),this.betaConstraint=An(t.betaConstraint),this.gammaConstraint=An(t.gammaConstraint),this.betaRegularizer=pn(t.betaRegularizer),this.gammaRegularizer=pn(t.gammaRegularizer)}build(t){t=qe(t);let e=this.axis>=0?this.axis:this.axis+t.length,r=t[e];if(r==null)throw new gt(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new En({ndim:t.length,axes:{[e]:r}})];let s=[r];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return wt(()=>{let r=e.training!=null&&e.training,s=Ee(t),a=s.shape,i=a.length,o=vs(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);let c=fi(1,i);c[l]=a[l];let u=o.slice();u.sort();let h=!se(u,vs(0,i).slice(0,i-1));if(!r)return(()=>{if(h){let g=mt(this.movingMean.read(),c),y=mt(this.movingVariance.read(),c),b=this.center?mt(this.beta.read(),c):null,$=this.scale?mt(this.gamma.read(),c):null;return bl(s,g,y,b,$,this.epsilon)}return bl(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)})();let[p,d,f]=RT(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(g,y,b)=>{wt(()=>{let $=1-b,_=g.read(),M=ht(ne(_,y),$);g.write(ne(_,M))})};return m(this.movingMean,d,this.momentum),m(this.movingVariance,f,this.momentum),p})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:gn(this.betaInitializer),gammaInitializer:gn(this.gammaInitializer),movingMeanInitializer:gn(this.movingMeanInitializer),movingVarianceInitializer:gn(this.movingVarianceInitializer),betaRegularizer:Je(this.betaRegularizer),gammaRegularizer:Je(this.gammaRegularizer),betaConstraint:_n(this.betaConstraint),gammaConstraint:_n(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}dx.className="BatchNormalization",Wt(dx);class fx extends Be{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null||t.center,this.scale=t.scale==null||t.scale,this.betaInitializer=hn(t.betaInitializer||"zeros"),this.gammaInitializer=hn(t.gammaInitializer||"ones"),this.betaRegularizer=pn(t.betaRegularizer),this.gammaRegularizer=pn(t.gammaRegularizer),this.supportsMasking=!0}build(t){let e=(t=qe(t)).length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(let s of this.axis)if(s<0||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Ea(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let r=this.axis.map(s=>t[s]);this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){let r=Ee(t),s=r.shape,a=s.length;return wt(()=>{let{mean:i,variance:o}=Yc(r,this.axis,!0),l=fi(1,a);for(let f of this.axis)l[f]=s[f];let c=f=>f!=null&&f.shape.length!==a?mt(f,l):f,u=this.scale?c(this.gamma.read()):null,h=this.center?c(this.beta.read()):null,p=[],d=[];for(let f=0;f<a;++f)this.axis.indexOf(f)!==-1?(p.push(s[f]),d.push(1)):(p.push(1),d.push(s[f]));return i=Qr(i,p),o=Qr(o,p),u!=null&&(u=Qr(u,d)),h!=null&&(h=Qr(h,d)),bl(r,i,o,h,u,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:gn(this.betaInitializer),gammaInitializer:gn(this.gammaInitializer),betaRegularizer:Je(this.betaRegularizer),gammaRegularizer:Je(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}fx.className="LayerNormalization",Wt(fx);class mx extends Be{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new gt(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,r;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],r=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new gt(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new gt(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);r=t.padding[1]}this.padding=[e,r]}this.inputSpec=[new En({ndim:4})]}computeOutputShape(t){let e,r;return t=qe(t),this.dataFormat==="channelsFirst"?(e=t[2]!=null&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,r=t[3]!=null&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,r]):(e=t[1]!=null&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,r=t[2]!=null&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,r,t[3]])}call(t,e){return wt(()=>function(r,s,a){return wt(()=>{if(r.rank!==4)throw new gt(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(s==null&&(s=[[1,1],[1,1]]),s.length!==2||s[0].length!==2||s[1].length!==2)throw new gt("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(a==null&&(a="channelsLast"),a!=="channelsLast"&&a!=="channelsFirst")throw new gt(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let i;return i=a==="channelsFirst"?[[0,0],[0,0],s[0],s[1]]:[[0,0],s[0],s[1],[0,0]],$a(r,i)})}(Ee(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Dh(n,t,e,r,s,a){return wt(()=>{let i;kn(s),gy(a),qr(r),e==null&&(e=[1,1]),r==null&&(r="valid"),s==null&&(s="channelsLast"),a==null&&(a="max"),n=ym(n,s);let o=r==="same"?"same":"valid";return i=a==="max"?Xc(n,t,e,o):Pc(n,t,e,o),s==="channelsFirst"&&(i=Le(i,[0,3,1,2])),i})}function gx(n,t,e,r,s,a){return wt(()=>{let i;kn(s),gy(a),qr(r),e==null&&(e=[1,1,1]),r==null&&(r="valid"),s==null&&(s="channelsLast"),a==null&&(a="max"),n=Rb(n,s);let o=r==="same"?"same":"valid";return i=a==="max"?i1(n,t,e,o):R0(n,t,e,o),s==="channelsFirst"&&(i=Le(i,[0,4,1,2,3])),i})}mx.className="ZeroPadding2D",Wt(mx);class yx extends Be{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||t.poolSize.length!==1||typeof t.poolSize[0]!="number")throw new gt(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Mn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else{if(!Array.isArray(t.strides)||t.strides.length!==1||typeof t.strides[0]!="number")throw new gt(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Mn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,qr(this.padding),this.inputSpec=[new En({ndim:3})]}computeOutputShape(t){let e=Ns((t=qe(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return wt(()=>{this.invokeCallHook(t,e),t=al(Ee(t),2);let r=this.poolingFunction(Ee(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Fr(r,[2])})}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class bx extends yx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return kn(a),qr(s),Dh(t,e,r,s,a,"max")}}bx.className="MaxPooling1D",Wt(bx);class xx extends yx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return kn(a),qr(s),Dh(t,e,r,s,a,"avg")}}xx.className="AveragePooling1D",Wt(xx);class vx extends Be{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new gt(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Mn(this.poolSize,"poolSize"),Mn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kn(this.dataFormat),qr(this.padding),this.inputSpec=[new En({ndim:4})]}computeOutputShape(t){t=qe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Ns(e,this.poolSize[0],this.padding,this.strides[0]),r=Ns(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,r]:[t[0],e,r,t[3]]}call(t,e){return wt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Ee(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class wx extends vx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return kn(a),qr(s),Dh(t,e,r,s,a,"max")}}wx.className="MaxPooling2D",Wt(wx);class kx extends vx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return kn(a),qr(s),Dh(t,e,r,s,a,"avg")}}kx.className="AveragePooling2D",Wt(kx);class Ix extends Be{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new gt(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Mn(this.poolSize,"poolSize"),Mn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kn(this.dataFormat),qr(this.padding),this.inputSpec=[new En({ndim:5})]}computeOutputShape(t){t=qe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],s=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Ns(e,this.poolSize[0],this.padding,this.strides[0]),r=Ns(r,this.poolSize[1],this.padding,this.strides[1]),s=Ns(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,r,s]:[t[0],e,r,s,t[4]]}call(t,e){return wt(()=>(this.invokeCallHook(t,e),this.poolingFunction(Ee(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Nx extends Ix{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return kn(a),qr(s),gx(t,e,r,s,a,"max")}}Nx.className="MaxPooling3D",Wt(Nx);class Sx extends Ix{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return kn(a),qr(s),gx(t,e,r,s,a,"avg")}}Sx.className="AveragePooling3D",Wt(Sx);class Tx extends Be{constructor(t){super(t),this.inputSpec=[new En({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new $e}}class Cx extends Tx{constructor(t){super(t||{})}call(t,e){return wt(()=>{let r=Ee(t);return bn(r,1)})}}Cx.className="GlobalAveragePooling1D",Wt(Cx);class $x extends Tx{constructor(t){super(t||{})}call(t,e){return wt(()=>{let r=Ee(t);return gs(r,1)})}}$x.className="GlobalMaxPooling1D",Wt($x);class Ex extends Be{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kn(this.dataFormat),this.inputSpec=[new En({ndim:4})]}computeOutputShape(t){return this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new $e}getConfig(){let t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class _x extends Ex{call(t,e){return wt(()=>{let r=Ee(t);return this.dataFormat==="channelsLast"?bn(r,[1,2]):bn(r,[2,3])})}}_x.className="GlobalAveragePooling2D",Wt(_x);class Ax extends Ex{call(t,e){return wt(()=>{let r=Ee(t);return this.dataFormat==="channelsLast"?gs(r,[1,2]):gs(r,[2,3])})}}Ax.className="GlobalMaxPooling2D",Wt(Ax);class Rx extends Be{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null&&this.layer.trainable}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){let t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,r={}){let s=Js(e.layer,r);delete e.layer;let a={layer:s};return Object.assign(a,e),new t(a)}}class Fx extends Rx{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=qe(t)).length<3)throw new gt(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){let e=[(t=qe(t))[0]].concat(t.slice(2)),r=this.layer.computeOutputShape(e),s=t[1];return[r[0],s].concat(r.slice(1))}call(t,e){return wt(()=>Vb((r,s)=>[Ee(this.layer.call(r,e)),[]],t=Ee(t),[],!1,null,null,!1,!0)[1])}}Fx.className="TimeDistributed",Wt(Fx);class Dx extends Rx{constructor(t){super(t);let e=t.layer.getConfig(),r={};r.className=t.layer.getClassName(),r.config=e,this.forwardLayer=Js(r),e.goBackwards=e.goBackwards!==!0;let s={};var a;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=Js(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?"concat":t.mergeMode,a=this.mergeMode,gi(tT,"BidirectionalMergeMode",a),t.weights)throw new $e("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){let e=t.length,r=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,r)),this.backwardLayer.setWeights(t.slice(r))}computeOutputShape(t){let e,r,s,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(s=a.slice(1)),e=a[0],this.mergeMode==="concat"?(e[e.length-1]*=2,r=[e]):r=this.mergeMode==null?[e,e.slice()]:[e],this.returnState?this.mergeMode==null?r.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):kr(r)}apply(t,e){let r=e==null?null:e.initialState,s=e==null?null:e.constants;e==null&&(e={});let a=Wb(t,r,s,this.numConstants);if(t=a.inputs,r=a.initialState,s=a.constants,Array.isArray(t)&&(r=t.slice(1),t=t[0]),(r==null||r.length===0)&&s==null)return super.apply(t,e);let i=[],o=[];if(r!=null){let c=r.length;if(c%2>0)throw new gt("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=r,i.push(...r);let u=r.map(h=>new En({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),o.push(...u)}if(s!=null)throw new $e("Support for constants in Bidirectional layers is not implemented yet.");let l=i[0]instanceof Ds;for(let c of i)if(c instanceof Ds!==l)throw new gt("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let c=[t].concat(i),u=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=u;let p=super.apply(c,e);return this.inputSpec=h,p}return super.apply(t,e)}call(t,e){return wt(()=>{let r=e.initialState,s,a,i,o;if(r==null)s=this.forwardLayer.call(t,e),a=this.backwardLayer.call(t,e);else{let l=r.slice(0,r.length/2),c=r.slice(r.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),a=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=ts(a,1)),this.mergeMode==="concat"?o=Hf([s,a]):this.mergeMode==="sum"?o=Bt(s,a):this.mergeMode==="ave"?o=ht(.5,Bt(s,a)):this.mergeMode==="mul"?o=ht(s,a):this.mergeMode==null&&(o=[s,a]),this.returnState?this.mergeMode==null?o.concat(i):[o].concat(i):o})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){yi(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),yi(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let r;if(Array.isArray(e)&&(e=e[0]),r=this.returnSequences?this.mergeMode==null?[e,e]:e:this.mergeMode==null?[null,null]:null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(r)?r.concat(s).concat(s):[r].concat(s).concat(s)}return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){let t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){let r=Js(e.layer);if(delete e.layer,e.numConstants!=null)throw new $e("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=e;return s.layer=r,new t(s)}}Dx.className="Bidirectional",Wt(Dx);class Ox extends Be{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return wt(()=>((t=Ee(t)).dtype!=="float32"&&(t=sl(t,"float32")),Bt(ht(t,this.scale),this.offset)))}}Ox.className="Rescaling",Wt(Ox);var as,Mx;Ct().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"}(as||(as={})),function(n){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))}(Mx||(Mx={}));let FT={};function Lx(n){return FT[n]}function F(n,t,e,r,s){let a=t.inputParams[n];if(a&&a.inputIndexStart!==void 0){let o=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?o+1:a.inputIndexEnd;if(a.type==="tensor")return ir(t.inputNames[a.inputIndexStart],e,r,s);if(a.type==="tensors")return t.inputNames.slice(o,l).map(h=>ir(h,e,r,s));let c=ir(t.inputNames.slice(o)[0],e,r,s),u=c.dataSync();return a.type==="number"?u[0]:tn(c.shape,u)}let i=t.attrParams[n];return i&&i.value}function ir(n,t,e,r){let[s,a]=Or(n);if(r!=null){let o=r.getHashTableHandleByName(s);if(o!=null)return o}let i=e.currentContextIds.find(o=>!!t[Oh(s,o)]);return i!==void 0?t[Oh(s,i)][a]:void 0}function Ms(n,t){let[e,r,s]=Or(n);return[Oh(e,t&&t.currentContextId),r,s]}function Oh(n,t){return t?`${n}-${t}`:n}function Or(n){let t=n.split(":");if(t.length===1)return[n,0,void 0];let e=t[0],r=t.length===3?t[1]:void 0;return[e,Number(t[t.length-1]),r]}function Mh(n,t,e){let r=F("pad",n,t,e);if(r==="explicit"){r=F("explicitPaddings",n,t,e);let s=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)s[a][0]=r[2*a],s[a][1]=r[2*a+1];return s}return r}function La(n){return n.kept?n:Vs(n)}let DT=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],OT=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],MT=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],LT=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],zT=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],PT=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],BT=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],WT=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],VT=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],UT=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],GT=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],HT=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],jT=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],qT=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],KT=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],XT=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],YT=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],ZT=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],JT=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class zx{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[].concat(...[N,R,E,L,V,P,D,O,G,W,X,U,j,K,st,H,at,nt,pt].map(e=>e.json));this.opMappers=t.reduce((e,r)=>(e[r.tfOpName]=r,e),{})}transformGraph(t,e={}){let r=t.node,s=[],a=[],i=[],o=r.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?s.push(m[g.name]):g.op==="Const"?a.push(m[g.name]):g.input!=null&&g.input.length!==0||i.push(m[g.name]),m),{}),l=[],c=[],u={},h={};e!=null&&(u=this.mapSignatureEntries(e.inputs),h=this.mapSignatureEntries(e.outputs));let p=Object.keys(o);p.forEach(m=>{let g=o[m];g.inputNames.forEach((y,b)=>{let[$,,_]=Ms(y),M=o[$];if(M.outputs!=null){let Y=M.outputs.indexOf(_);if(Y!==-1){let tt=`${$}:${Y}`;g.inputNames[b]=tt}}g.inputs.push(M),M.children.push(g)})}),Object.keys(h).length===0?p.forEach(m=>{let g=o[m];g.children.length===0&&c.push(g)}):Object.keys(h).forEach(m=>{let[g]=Ms(m),y=o[g];y!=null&&(y.signatureKey=h[m],c.push(y))}),Object.keys(u).length>0?Object.keys(u).forEach(m=>{let[g]=Ms(m),y=o[g];y&&(y.signatureKey=u[m],l.push(y))}):l=s;let d={};t.library!=null&&t.library.function!=null&&(d=t.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));let f={nodes:o,inputs:l,outputs:c,weights:a,placeholders:s,signature:e,functions:d};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,r)=>(e[t[r].name]=r,e),{})}mapNode(t){let e=Lx(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let r={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(r.inputParams=e.inputs.reduce((s,a)=>(s[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},s),{})),e.attrs!=null&&(r.attrParams=e.attrs.reduce((s,a)=>{let i=a.type,o;switch(a.type){case"string":o=Im(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=Im(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":o=Am(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=Am(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":o=Sm(t.attr,a.tfName,a.defaultValue||0),o===void 0&&a.tfDeprecatedName&&(o=Sm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":o=_m(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=_m(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":o=Nm(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=Nm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":o=Fm(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=Fm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":o=Em(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=Em(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":o=Rm(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=Rm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":o=Cm(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=Cm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":o=$m(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=$m(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":o=Bx(t.attr,a.tfName,a.defaultValue),o===void 0&&a.tfDeprecatedName&&(o=Bx(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${t.op}`)}return s[a.name]={value:o,type:i},s},{})),r}mapFunction(t){let e=t.nodeDef,r=[],s={};e!=null&&(s=e.reduce((c,u)=>(c[u.name]=this.mapNode(u),u.op==="Const"&&r.push(c[u.name]),c),{}));let a=[],i=[];t.signature.inputArg.forEach(c=>{let[u]=Ms(c.name),h={name:u,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Tm(c.type),type:"dtype"}},children:[]};h.signatureKey=c.name,a.push(h),s[u]=h}),Object.keys(s).forEach(c=>{let u=s[c];u.inputNames.forEach((h,p)=>{let[d,,f]=Ms(h),m=s[d];if(m.outputs!=null){let g=m.outputs.indexOf(f);if(g!==-1){let y=`${d}:${g}`;u.inputNames[p]=y}}u.inputs.push(m),m.children.push(u)})});let o=t.ret;t.signature.outputArg.forEach(c=>{let[u,h]=Ms(o[c.name]),p=s[u];p!=null&&(p.defaultOutput=h,i.push(p))});let l=this.mapArgsToSignature(t);return{nodes:s,inputs:a,outputs:i,weights:r,placeholders:[],signature:l}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,r)=>(e[r.name]=this.mapArgToTensorInfo(r),e),{}),outputs:t.signature.outputArg.reduce((e,r)=>(e[r.name]=this.mapArgToTensorInfo(r,t.ret),e),{})}}mapArgToTensorInfo(t,e){let r=t.name;return e!=null&&(r=e[r]),{name:r,dtype:t.type}}}function Px(n,t){let e=Array.isArray(n)?String.fromCharCode.apply(null,n):function(r){let s=Ct().global;if(s.atob!==void 0)return s.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(n);return t?e:e.toLowerCase()}function Im(n,t,e,r=!1){let s=n[t];return s!=null?Px(s.s,r):e}function Nm(n,t,e){let r=n[t];return r?r.b:e}function Sm(n,t,e){let r=n[t]||{},s=r.i!=null?r.i:r.f!=null?r.f:e;return typeof s=="number"?s:parseInt(s,10)}function Tm(n){switch(typeof n=="string"&&(n=as[n]),n){case as.DT_FLOAT:case as.DT_HALF:return"float32";case as.DT_INT32:case as.DT_INT64:case as.DT_INT8:case as.DT_UINT8:return"int32";case as.DT_BOOL:return"bool";case as.DT_DOUBLE:return"float32";case as.DT_STRING:return"string";default:return null}}function Bx(n,t,e){let r=n[t];return r&&r.func?r.func.name:e}function Cm(n,t,e){let r=n[t];return r&&r.type?Tm(r.type):e}function $m(n,t,e){let r=n[t];return r&&r.list&&r.list.type?r.list.type.map(s=>Tm(s)):e}function Wx(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Em(n,t,e){let r=n[t];return r&&r.shape?Wx(r.shape):e}function _m(n,t,e){let r=n[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):e}function Am(n,t,e,r=!1){let s=n[t];return s&&s.list&&s.list.s?s.list.s.map(a=>Px(a,r)):e}function Rm(n,t,e){let r=n[t];return r&&r.list&&r.list.shape?r.list.shape.map(s=>Wx(s)):e}function Fm(n,t,e){let r=n[t];return r&&r.list&&r.list.b?r.list.b:e}class QT{constructor(t,e,r){this.node=t,this.tensorMap=e,this.context=r,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(s=>this.getInput(s)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((s,a)=>(s[a]=this.getAttr(a),s),{}))}getInput(t){return ir(t,this.tensorMap,this.context)}getAttr(t,e){let r=this.node.rawAttrs[t];if(r.tensor!=null)return ir(t,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return Sm(this.node.rawAttrs,t,e);if(r.s!=null)return Im(this.node.rawAttrs,t,e);if(r.b!=null)return Nm(this.node.rawAttrs,t,e);if(r.shape!=null)return Em(this.node.rawAttrs,t,e);if(r.type!=null)return Cm(this.node.rawAttrs,t,e);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return _m(this.node.rawAttrs,t,e);if(r.list.s!=null)return Am(this.node.rawAttrs,t,e);if(r.list.shape!=null)return Rm(this.node.rawAttrs,t,e);if(r.list.b!=null)return Fm(this.node.rawAttrs,t,e);if(r.list.type!=null)return $m(this.node.rawAttrs,t,e)}return e}}function is(n,t,e=""){if(typeof n!="number"&&typeof t!="number"){z(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let r=0;r<n.length;r++){let s=n[r],a=t[r];z(s<0||a<0||s===a,()=>e+` Shapes ${n} and ${t} must match`)}}}function Vx(n){return typeof n!="number"&&!n.some(t=>t<0)}function xl(n,t,e){let r=Dm(n,e),s=!Vx(r);if(s&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(a=>{r=Dm(a.shape,r)}),!Vx(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Dm(n,t){if(typeof n=="number")return t;if(typeof t=="number")return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);let e=[];for(let r=0;r<n.length;++r){let s=n[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[r]=s>=0?s:a}return e}class t3{constructor(t,e,r,s,a,i,o){this.name=t,this.dtype=e,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=xe(0),Gn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{t!=null&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let r=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()!==0||this.elementShape!=null&&this.elementShape.length!==0||(this.elementShape=e.shape),is(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);r.tensor=e,Gn(e),r.written=!0,this.tensors[t]=r}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((r,s)=>this.write(r,e[s]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let s=0;s<this.size();s++)t.push(s)}if(t.length===0)return ds([],[0].concat(this.elementShape));let r=this.readMany(t);return is(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),jr(r,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return ds([],[0].concat(this.elementShape));let e=[];for(let s=0;s<this.size();s++)e.push(s);let r=this.readMany(e);return is(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),un(r,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(t,ys(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let r=0,s=t.map(l=>(r+=l,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let a=r===0?0:e.size/r,i=[];wt(()=>{e=mt(e,[1,r,a]);for(let l=0;l<t.length;++l){let c=[0,l===0?0:s[l-1],0],u=[1,t[l],a];i[l]=mt(ve(e,c,u),this.elementShape)}return i});let o=[];for(let l=0;l<t.length;l++)o[l]=l;this.writeMany(o,i)}}class wi{constructor(t,e,r,s=-1){this.tensors=t,this.elementShape=e,this.elementDtype=r,t?.forEach(a=>{if(r!==a.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${a.dtype}`);is(e,a.shape,"TensorList shape mismatch: "),Gn(a)}),this.idTensor=xe(0),this.maxNumElements=s,Gn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new wi([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{t!=null&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,r=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);is(t,this.elementShape,"TensorList shape mismatch: ");let s=xl(this.elementShape,this.tensors,t);return wt(()=>{let a=this.tensors.map(i=>mt(i,s));return jr(a,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let r=xl(this.elementShape,this.tensors,t),s=this.tensors.pop();return s.kept=!1,is(s.shape,t,"TensorList shape mismatch: "),mt(s,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(is(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Gn(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new wi([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let r=0;r<Math.min(this.tensors.length,t);++r)e.tensors[r]=this.tensors[r];return e}getItem(t,e,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);is(this.tensors[t].shape,e,"TensorList shape mismatch: ");let s=xl(this.elementShape,this.tensors,e);return mt(this.tensors[t],s)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);is(this.elementShape,e.shape,"TensorList shape mismatch: "),Gn(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,r){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);is(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());let s=xl(this.elementShape,this.tensors,r);return t.length===0?ds([],[0].concat(s)):wt(()=>{let a=t.map(i=>mt(this.tensors[i],s));return jr(a,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);is(this.elementShape,e,"TensorList shape mismatch: ");let r=xl(this.elementShape,this.tensors,e);return this.size()===0?ds([],[0].concat(r)):wt(()=>{let s=this.tensors.map(a=>mt(a,r));return un(s,0)})}}let e3=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{let r=F("thenBranch",n,t,e),s=F("elseBranch",n,t,e),a=F("cond",n,t,e),i=F("args",n,t,e);return(await a.data())[0]?e.functionMap[r].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[s].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let r=F("body",n,t,e),s=F("cond",n,t,e),a=F("args",n,t,e),i=await e.functionMap[s].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap),o=a.map(u=>u.id),l=await i[0].data();i.forEach(u=>{u.kept||o.indexOf(u.id)!==-1||u.dispose()});let c=a;for(;l[0];){let u=c;c=await e.functionMap[r].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap);let h=c.map(d=>d.id);u.forEach(d=>{d.kept||o.indexOf(d.id)!==-1||h.indexOf(d.id)!==-1||d.dispose()});let p=await e.functionMap[s].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap);l=await p[0].data(),p.forEach(d=>{d.kept||o.indexOf(d.id)!==-1||h.indexOf(d.id)!==-1||d.dispose()})}return c}case"LoopCond":return[La(F("pred",n,t,e))];case"Switch":{let r=F("pred",n,t,e),s=F("data",n,t,e);return s.kept||(s=La(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{let r=n.inputNames.find(s=>ir(s,t,e)!==void 0);return r?[La(ir(r,t,e))]:void 0}case"Enter":{let r=F("frameName",n,t,e),s=F("tensor",n,t,e);return e.enterFrame(r),[La(s)]}case"Exit":{let r=F("tensor",n,t,e);return e.exitFrame(),[La(r)]}case"NextIteration":{let r=F("tensor",n,t,e);return e.nextIteration(),[La(r)]}case"TensorArrayV3":{let r=F("size",n,t,e),s=F("dtype",n,t,e),a=F("elementShape",n,t,e),i=F("dynamicSize",n,t,e),o=F("clearAfterRead",n,t,e),l=F("identicalElementShapes",n,t,e),c=F("name",n,t,e),u=new t3(c,s,r,a,l,i,o);return e.addTensorArray(u),[u.idTensor,xe(1)]}case"TensorArrayWriteV3":{let r=F("tensorArrayId",n,t,e),s=F("index",n,t,e),a=F("tensor",n,t,e),i=e.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{let r=F("tensorArrayId",n,t,e),s=F("index",n,t,e);return[e.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{let r=F("tensorArrayId",n,t,e),s=F("indices",n,t,e),a=F("dtype",n,t,e);return[e.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{let r=F("tensorArrayId",n,t,e),s=F("indices",n,t,e),a=F("tensor",n,t,e),i=e.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{let r=F("tensorArrayId",n,t,e),s=e.getTensorArray(r.id),a=F("dtype",n,t,e);return[s.concat(a)]}case"TensorArraySplitV3":{let r=F("tensorArrayId",n,t,e),s=F("tensor",n,t,e),a=F("lengths",n,t,e),i=e.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{let r=F("tensorArrayId",n,t,e);return[xe(e.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=F("tensorArrayId",n,t,e),s=e.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{let r=F("tensorListId",n,t,e),s=F("index",n,t,e),a=F("tensor",n,t,e),i=e.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{let r=F("tensorListId",n,t,e),s=F("index",n,t,e),a=F("elementShape",n,t,e),i=F("elementDType",n,t,e);return[e.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=F("indices",n,t,e),s=function(a,i,o,l){if(i.length!==a.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${i.length} vs. ${a.shape[0]}`);let c=Math.max(...i);if(l!=null&&l!==-1&&c>=l)throw new Error(`Max index must be < array size (${c}  vs. ${l})`);let u=new wi([],o,a.dtype,l),h=ys(a,0);return i.forEach((p,d)=>{u.setItem(p,h[d])}),u}(F("tensor",n,t,e),r,F("elementShape",n,t,e),F("numElements",n,t,e));return e.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=F("elementShape",n,t,e),s=F("elementDType",n,t,e),a;a=n.op==="TensorListReserve"?"numElements":"maxNumElements";let i=F(a,n,t,e),o=function(l,c,u,h){return new wi([],l,c,h)}(r,s,0,n.op==="TensorListReserve"?-1:i);return e.addTensorList(o),[o.idTensor]}case"TensorListGather":{let r=F("tensorListId",n,t,e),s=F("indices",n,t,e),a=F("elementShape",n,t,e),i=F("elementDType",n,t,e);return[e.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{let r=F("tensorListId",n,t,e),s=F("elementShape",n,t,e),a=F("elementDType",n,t,e),i=F("numElements",n,t,e);return[e.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{let r=function(s,a,i){let o=s.dtype;if(s.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${s.shape}`);if(s.dtype!==i)throw new Error(`Invalid data types; op elements ${s.dtype}, but list elements ${i}`);is(s.shape.slice(1),a,"TensorList shape mismatch: ");let l=ys(s);return new wi(l,a,o)}(F("tensor",n,t,e),F("elementShape",n,t,e),F("elementDType",n,t,e));return e.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=F("tensorListId",n,t,e),s=e.getTensorList(r.id),a=F("dtype",n,t,e),i=F("elementShape",n,t,e);return[s.concat(a,i)]}case"TensorListPushBack":{let r=F("tensorListId",n,t,e),s=F("tensor",n,t,e),a=e.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{let r=F("tensorListId",n,t,e),s=F("elementShape",n,t,e),a=F("elementDType",n,t,e);return[e.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{let r=F("tensor",n,t,e),s=F("elementShape",n,t,e),a=function(i,o,l){let c=0,u=o.map(m=>(c+=m,c));if(c!==i.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${c}, and tensor's shape is: ${i.shape}`);let h=Dm(i.shape.slice(1),l),p=c===0?0:i.size/c,d=wt(()=>{let m=[];i=mt(i,[1,c,p]);for(let g=0;g<o.length;++g){let y=[0,g===0?0:u[g-1],0],b=[1,o[g],p];m[g]=mt(ve(i,y,b),h)}return i.dispose(),m}),f=new wi([],l,i.dtype,o.length);for(let m=0;m<d.length;m++)f.setItem(m,d[m]);return f}(r,F("lengths",n,t,e),s);return e.addTensorList(a),[a.idTensor]}case"TensorListLength":{let r=F("tensorListId",n,t,e);return[xe(e.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=F("tensorListId",n,t,e),s=F("size",n,t,e),a=e.getTensorList(r.id).resize(s);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};function Ux(n,t,e){let[r,s]=F("fusedOps",n,t,e),a=r==="biasadd",i=!a,o=s==="prelu",l=r==="fusedbatchnorm",c=F("numArgs",n,t,e);if(a){if(o&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=F("strides",n,t,e),h=Mh(n,t,e),p=F("dataFormat",n,t,e).toUpperCase(),d=F("dilations",n,t,e),[f,m]=F("args",n,t,e);return i&&(m=f,f=void 0),{stride:u,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:F("leakyreluAlpha",n,t,e)}}function Om(n,t,e){return{boxes:F("boxes",n,t,e),scores:F("scores",n,t,e),maxOutputSize:F("maxOutputSize",n,t,e),iouThreshold:F("iouThreshold",n,t,e),scoreThreshold:F("scoreThreshold",n,t,e),softNmsSigma:F("softNmsSigma",n,t,e)}}class n3{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=xe(0),this.tensorMap=new Map,Gn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return xe(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);let r=await t.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),wt(()=>{let s=ys(e),a=r.length,i=s.length;z(a===i,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${i} elements.`);for(let o=0;o<a;o++){let l=r[o],c=s[o];Gn(c),this.tensorMap.set(l,c)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let r=await t.data();return wt(()=>{let s=[];for(let a=0;a<r.length;a++){let i=r[a],o=this.findWithDefault(i,e);s.push(o)}return jr(s)})}findWithDefault(t,e){let r=this.tensorMap.get(t);return r??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function Gx(n,t,e,r,s=wt){let a=((i,o,l)=>{switch(i.category){case"arithmetic":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"BiasAdd":case"AddV2":case"Add":return[d.add(F("a",u,h,p),F("b",u,h,p))];case"AddN":return[d.addN(F("tensors",u,h,p))];case"FloorMod":case"Mod":return[d.mod(F("a",u,h,p),F("b",u,h,p))];case"Mul":return[d.mul(F("a",u,h,p),F("b",u,h,p))];case"RealDiv":case"Div":return[d.div(F("a",u,h,p),F("b",u,h,p))];case"DivNoNan":return[d.divNoNan(F("a",u,h,p),F("b",u,h,p))];case"FloorDiv":return[d.floorDiv(F("a",u,h,p),F("b",u,h,p))];case"Sub":return[d.sub(F("a",u,h,p),F("b",u,h,p))];case"Minimum":return[d.minimum(F("a",u,h,p),F("b",u,h,p))];case"Maximum":return[d.maximum(F("a",u,h,p),F("b",u,h,p))];case"Pow":return[d.pow(F("a",u,h,p),F("b",u,h,p))];case"SquaredDifference":return[d.squaredDifference(F("a",u,h,p),F("b",u,h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"basic_math":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"Abs":case"ComplexAbs":return[d.abs(F("x",u,h,p))];case"Acos":return[d.acos(F("x",u,h,p))];case"Acosh":return[d.acosh(F("x",u,h,p))];case"Asin":return[d.asin(F("x",u,h,p))];case"Asinh":return[d.asinh(F("x",u,h,p))];case"Atan":return[d.atan(F("x",u,h,p))];case"Atan2":return[d.atan2(F("x",u,h,p),F("y",u,h,p))];case"Atanh":return[d.atanh(F("x",u,h,p))];case"Ceil":return[d.ceil(F("x",u,h,p))];case"Complex":return[d.complex(F("real",u,h,p),F("imag",u,h,p))];case"Cos":return[d.cos(F("x",u,h,p))];case"Cosh":return[d.cosh(F("x",u,h,p))];case"Elu":return[d.elu(F("x",u,h,p))];case"Erf":return[d.erf(F("x",u,h,p))];case"Exp":return[d.exp(F("x",u,h,p))];case"Expm1":return[d.expm1(F("x",u,h,p))];case"Floor":return[d.floor(F("x",u,h,p))];case"Log":return[d.log(F("x",u,h,p))];case"Log1p":return[d.log1p(F("x",u,h,p))];case"Imag":return[d.imag(F("x",u,h,p))];case"Neg":return[d.neg(F("x",u,h,p))];case"Reciprocal":return[d.reciprocal(F("x",u,h,p))];case"Real":return[d.real(F("x",u,h,p))];case"Relu":return[d.relu(F("x",u,h,p))];case"Round":return[d.round(F("x",u,h,p))];case"Selu":return[d.selu(F("x",u,h,p))];case"Sigmoid":return[d.sigmoid(F("x",u,h,p))];case"Sin":return[d.sin(F("x",u,h,p))];case"Sign":return[d.sign(F("x",u,h,p))];case"Sinh":return[d.sinh(F("x",u,h,p))];case"Softplus":return[d.softplus(F("x",u,h,p))];case"Sqrt":return[d.sqrt(F("x",u,h,p))];case"Square":return[d.square(F("x",u,h,p))];case"Tanh":return[d.tanh(F("x",u,h,p))];case"Tan":return[d.tan(F("x",u,h,p))];case"ClipByValue":return[d.clipByValue(F("x",u,h,p),F("clipValueMin",u,h,p),F("clipValueMax",u,h,p))];case"Relu6":return[d.relu6(F("x",u,h,p))];case"Rsqrt":return[d.rsqrt(ir(u.inputNames[0],h,p))];case"Prod":return[d.prod(F("x",u,h,p),F("axes",u,h,p))];case"LeakyRelu":return[d.leakyRelu(F("x",u,h,p),F("alpha",u,h,p))];case"Prelu":return[d.prelu(F("x",u,h,p),F("alpha",u,h,p))];case"IsNan":return[d.isNaN(ir(u.inputNames[0],h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"control":return e3(i,o,l);case"convolution":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"Conv1D":{let f=F("stride",u,h,p),m=F("pad",u,h,p),g=F("dataFormat",u,h,p).toUpperCase(),y=F("dilation",u,h,p);return[d.conv1d(F("x",u,h,p),F("filter",u,h,p),f,m,g,y)]}case"Conv2D":{let f=F("strides",u,h,p),m=Mh(u,h,p),g=F("dataFormat",u,h,p).toUpperCase(),y=F("dilations",u,h,p);return[d.conv2d(F("x",u,h,p),F("filter",u,h,p),[f[1],f[2]],m,g,[y[1],y[2]])]}case"_FusedConv2D":{let{stride:f,pad:m,dataFormat:g,dilations:y,biasArg:b,preluArg:$,activationFunc:_,leakyreluAlpha:M}=Ux(u,h,p);return[d.fused.conv2d({x:F("x",u,h,p),filter:F("filter",u,h,p),strides:[f[1],f[2]],pad:m,dataFormat:g,dilations:[y[1],y[2]],bias:b,activation:_,preluActivationWeights:$,leakyreluAlpha:M})]}case"FusedDepthwiseConv2dNative":{let{stride:f,pad:m,dataFormat:g,dilations:y,biasArg:b,preluArg:$,activationFunc:_,leakyreluAlpha:M}=Ux(u,h,p);return[d.fused.depthwiseConv2d({x:F("x",u,h,p),filter:F("filter",u,h,p),strides:[f[1],f[2]],pad:m,dataFormat:g,dilations:[y[1],y[2]],bias:b,activation:_,preluActivationWeights:$,leakyreluAlpha:M})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let f=F("outputShape",u,h,p),m=F("strides",u,h,p),g=Mh(u,h,p);return[d.conv2dTranspose(F("x",u,h,p),F("filter",u,h,p),f,[m[1],m[2]],g)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let f=F("strides",u,h,p),m=Mh(u,h,p),g=F("dilations",u,h,p),y=F("dataFormat",u,h,p).toUpperCase();return[d.depthwiseConv2d(F("input",u,h,p),F("filter",u,h,p),[f[1],f[2]],m,y,[g[1],g[2]])]}case"Conv3D":{let f=F("strides",u,h,p),m=F("pad",u,h,p),g=F("dataFormat",u,h,p).toUpperCase(),y=F("dilations",u,h,p);return[d.conv3d(F("x",u,h,p),F("filter",u,h,p),[f[1],f[2],f[3]],m,g,[y[1],y[2],y[3]])]}case"AvgPool":{let f=F("strides",u,h,p),m=F("pad",u,h,p),g=F("kernelSize",u,h,p);return[d.avgPool(F("x",u,h,p),[g[1],g[2]],[f[1],f[2]],m)]}case"MaxPool":{let f=F("strides",u,h,p),m=F("pad",u,h,p),g=F("kernelSize",u,h,p);return[d.maxPool(F("x",u,h,p),[g[1],g[2]],[f[1],f[2]],m)]}case"MaxPoolWithArgmax":{let f=F("strides",u,h,p),m=F("pad",u,h,p),g=F("kernelSize",u,h,p),y=F("includeBatchInIndex",u,h,p),{result:b,indexes:$}=d.maxPoolWithArgmax(F("x",u,h,p),[g[1],g[2]],[f[1],f[2]],m,y);return[b,$]}case"AvgPool3D":{let f=F("strides",u,h,p),m=F("pad",u,h,p),g=F("kernelSize",u,h,p);return[d.avgPool3d(F("x",u,h,p),[g[1],g[2],g[3]],[f[1],f[2],f[3]],m)]}case"MaxPool3D":{let f=F("strides",u,h,p),m=F("pad",u,h,p),g=F("kernelSize",u,h,p);return[d.maxPool3d(F("x",u,h,p),[g[1],g[2],g[3]],[f[1],f[2],f[3]],m)]}case"Dilation2D":{let f=F("strides",u,h,p),m=F("pad",u,h,p),g=F("dilations",u,h,p),y=f[1],b=f[2],$=g[1],_=g[2];return[d.dilation2d(F("x",u,h,p),F("filter",u,h,p),[y,b],m,[$,_],"NHWC")]}default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"creation":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"Fill":{let f=F("shape",u,h,p),m=F("dtype",u,h,p),g=F("value",u,h,p);return[d.fill(f,g,m)]}case"LinSpace":{let f=F("start",u,h,p),m=F("stop",u,h,p),g=F("num",u,h,p);return[d.linspace(f,m,g)]}case"Multinomial":{let f=F("logits",u,h,p),m=F("numSamples",u,h,p),g=F("seed",u,h,p);return[d.multinomial(f,m,g)]}case"OneHot":{let f=F("indices",u,h,p),m=F("depth",u,h,p),g=F("onValue",u,h,p),y=F("offValue",u,h,p),b=F("dtype",u,h,p);return[d.oneHot(f,m,g,y,b)]}case"Ones":return[d.ones(F("shape",u,h,p),F("dtype",u,h,p))];case"OnesLike":return[d.onesLike(F("x",u,h,p))];case"RandomStandardNormal":return[d.randomStandardNormal(F("shape",u,h,p),F("dtype",u,h,p),F("seed",u,h,p))];case"RandomUniform":return[d.randomUniform(F("shape",u,h,p),F("minval",u,h,p),F("maxval",u,h,p),F("dtype",u,h,p))];case"Range":{let f=F("start",u,h,p),m=F("stop",u,h,p),g=F("step",u,h,p);return[d.range(f,m,g,F("dtype",u,h,p))]}case"TruncatedNormal":{let f=F("shape",u,h,p),m=F("mean",u,h,p),g=F("stdDev",u,h,p),y=F("seed",u,h,p);return[d.truncatedNormal(f,m,g,F("dtype",u,h,p),y)]}case"Zeros":return[d.zeros(F("shape",u,h,p),F("dtype",u,h,p))];case"ZerosLike":return[d.zerosLike(F("x",u,h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"dynamic":return(async(u,h,p,d,f=ot)=>{switch(u.op){case"NonMaxSuppressionV5":{let{boxes:m,scores:g,maxOutputSize:y,iouThreshold:b,scoreThreshold:$,softNmsSigma:_}=Om(u,h,p),M=await f.image.nonMaxSuppressionWithScoreAsync(m,g,y,b,$,_);return[M.selectedIndices,M.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:m,scores:g,maxOutputSize:y,iouThreshold:b,scoreThreshold:$}=Om(u,h,p),_=F("padToMaxOutputSize",u,h,p),M=await f.image.nonMaxSuppressionPaddedAsync(m,g,y,b,$,_);return[M.selectedIndices,M.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:m,scores:g,maxOutputSize:y,iouThreshold:b,scoreThreshold:$}=Om(u,h,p);return[await f.image.nonMaxSuppressionAsync(m,g,y,b,$)]}case"Where":{let m=f.cast(F("condition",u,h,p),"bool"),g=[await f.whereAsync(m)];return m.dispose(),g}case"ListDiff":return f.setdiff1dAsync(F("x",u,h,p),F("y",u,h,p));default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l);case"evaluation":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"LowerBound":{let f=F("sortedSequence",u,h,p),m=F("values",u,h,p);return[d.lowerBound(f,m)]}case"TopKV2":{let f=F("x",u,h,p),m=F("k",u,h,p),g=F("sorted",u,h,p),y=d.topk(f,m,g);return[y.values,y.indices]}case"UpperBound":{let f=F("sortedSequence",u,h,p),m=F("values",u,h,p);return[d.upperBound(f,m)]}case"Unique":{let f=F("x",u,h,p),m=d.unique(f);return[m.values,m.indices]}case"UniqueV2":{let f=F("x",u,h,p),m=F("axis",u,h,p),g=d.unique(f,m);return[g.values,g.indices]}default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"image":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"ResizeBilinear":{let f=F("images",u,h,p),m=F("size",u,h,p),g=F("alignCorners",u,h,p),y=F("halfPixelCenters",u,h,p);return[d.image.resizeBilinear(f,[m[0],m[1]],g,y)]}case"ResizeNearestNeighbor":{let f=F("images",u,h,p),m=F("size",u,h,p),g=F("alignCorners",u,h,p),y=F("halfPixelCenters",u,h,p);return[d.image.resizeNearestNeighbor(f,[m[0],m[1]],g,y)]}case"CropAndResize":{let f=F("image",u,h,p),m=F("boxes",u,h,p),g=F("boxInd",u,h,p),y=F("cropSize",u,h,p),b=F("method",u,h,p),$=F("extrapolationValue",u,h,p);return[d.image.cropAndResize(f,m,g,y,b,$)]}case"ImageProjectiveTransformV3":{let f=F("images",u,h,p),m=F("transforms",u,h,p),g=F("outputShape",u,h,p),y=F("fillValue",u,h,p),b=F("interpolation",u,h,p),$=F("fillMode",u,h,p);return[d.image.transform(f,m,b.toLowerCase(),$.toLowerCase(),y,g)]}default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"graph":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"Const":return h[u.name];case"PlaceholderWithDefault":let f=F("default",u,h,p);return[ir(u.name,h,p)||f];case"Placeholder":return[ir(u.name,h,p)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[La(F("x",u,h,p))];case"IdentityN":return F("x",u,h,p).map($=>La($));case"Shape":return[d.tensor1d(F("x",u,h,p).shape,"int32")];case"ShapeN":return F("x",u,h,p).map($=>d.tensor1d($.shape));case"Size":return[d.scalar(F("x",u,h,p).size,"int32")];case"Rank":return[d.scalar(F("x",u,h,p).rank,"int32")];case"NoOp":return[d.scalar(1)];case"Print":let m=F("x",u,h,p),g=F("data",u,h,p),y=F("message",u,h,p),b=F("summarize",u,h,p);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(y);for(let $=0;$<g.length;$++)console.log(Array.prototype.slice.call(g[$].dataSync()).slice(0,b));return[m];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"logical":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"Equal":return[d.equal(F("a",u,h,p),F("b",u,h,p))];case"NotEqual":return[d.notEqual(F("a",u,h,p),F("b",u,h,p))];case"Greater":return[d.greater(F("a",u,h,p),F("b",u,h,p))];case"GreaterEqual":return[d.greaterEqual(F("a",u,h,p),F("b",u,h,p))];case"Less":return[d.less(F("a",u,h,p),F("b",u,h,p))];case"LessEqual":return[d.lessEqual(F("a",u,h,p),F("b",u,h,p))];case"LogicalAnd":return[d.logicalAnd(F("a",u,h,p),F("b",u,h,p))];case"LogicalNot":return[d.logicalNot(F("a",u,h,p))];case"LogicalOr":return[d.logicalOr(F("a",u,h,p),F("b",u,h,p))];case"Select":case"SelectV2":return[d.where(F("condition",u,h,p),F("a",u,h,p),F("b",u,h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"matrices":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[d.matMul(F("a",u,h,p),F("b",u,h,p),F("transposeA",u,h,p),F("transposeB",u,h,p))];case"Einsum":return[d.einsum(F("equation",u,h,p),...F("tensors",u,h,p))];case"Transpose":return[d.transpose(F("x",u,h,p),F("perm",u,h,p))];case"_FusedMatMul":let[f,m]=F("fusedOps",u,h,p),g=f==="biasadd",y=m==="prelu",b=F("numArgs",u,h,p),$=F("leakyreluAlpha",u,h,p);if(g){if(y&&b!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!y&&b!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[_,M]=F("args",u,h,p);return[d.fused.matMul({a:F("a",u,h,p),b:F("b",u,h,p),transposeA:F("transposeA",u,h,p),transposeB:F("transposeB",u,h,p),bias:_,activation:m,preluActivationWeights:M,leakyreluAlpha:$})];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"normalization":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"EuclideanNorm":return[d.euclideanNorm(F("x",u,h,p),F("axis",u,h,p),F("keepDims",u,h,p))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[d.batchNorm(F("x",u,h,p),F("mean",u,h,p),F("variance",u,h,p),F("offset",u,h,p),F("scale",u,h,p),F("epsilon",u,h,p))];case"LRN":return[d.localResponseNormalization(F("x",u,h,p),F("radius",u,h,p),F("bias",u,h,p),F("alpha",u,h,p),F("beta",u,h,p))];case"Softmax":return[d.softmax(F("x",u,h,p))];case"LogSoftmax":return[d.logSoftmax(F("x",u,h,p))];case"SparseToDense":return[d.sparseToDense(F("sparseIndices",u,h,p),F("outputShape",u,h,p),F("sparseValues",u,h,p),F("defaultValue",u,h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"reduction":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"Max":{let y=F("axis",u,h,p),b=F("keepDims",u,h,p);return[d.max(F("x",u,h,p),y,b)]}case"Mean":{let y=F("axis",u,h,p),b=F("keepDims",u,h,p);return[d.mean(F("x",u,h,p),y,b)]}case"Min":{let y=F("axis",u,h,p),b=F("keepDims",u,h,p);return[d.min(F("x",u,h,p),y,b)]}case"Sum":{let y=F("axis",u,h,p),b=F("keepDims",u,h,p);return[d.sum(F("x",u,h,p),y,b)]}case"All":{let y=F("axis",u,h,p),b=F("keepDims",u,h,p);return[d.all(F("x",u,h,p),y,b)]}case"Any":{let y=F("axis",u,h,p),b=F("keepDims",u,h,p);return[d.any(F("x",u,h,p),y,b)]}case"ArgMax":{let y=F("axis",u,h,p);return[d.argMax(F("x",u,h,p),y)]}case"ArgMin":{let y=F("axis",u,h,p);return[d.argMin(F("x",u,h,p),y)]}case"Prod":{let y=F("axis",u,h,p),b=F("keepDims",u,h,p);return[d.prod(F("x",u,h,p),y,b)]}case"Cumprod":{let y=F("axis",u,h,p),b=F("exclusive",u,h,p),$=F("reverse",u,h,p);return[d.cumprod(F("x",u,h,p),y,b,$)]}case"Cumsum":{let y=F("axis",u,h,p),b=F("exclusive",u,h,p),$=F("reverse",u,h,p);return[d.cumsum(F("x",u,h,p),y,b,$)]}case"Bincount":let f=F("x",u,h,p),m=F("weights",u,h,p),g=F("size",u,h,p);return[d.bincount(f,m,g)];case"DenseBincount":{let y=F("x",u,h,p),b=F("weights",u,h,p),$=F("size",u,h,p),_=F("binaryOutput",u,h,p);return[d.denseBincount(y,b,$,_)]}default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"slice_join":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"ConcatV2":case"Concat":{let f=F("n",u,h,p),m=F("axis",u,h,p),g=F("tensors",u,h,p);return g=g.slice(0,f),[d.concat(g,m)]}case"Gather":{let f=F("x",u,h,p),m=F("indices",u,h,p);return[d.gather(f,d.cast(m,"int32"),0)]}case"GatherV2":{let f=F("axis",u,h,p),m=F("batchDims",u,h,p),g=F("x",u,h,p),y=F("indices",u,h,p);return[d.gather(g,d.cast(y,"int32"),f,m)]}case"Reverse":{let f=F("dims",u,h,p),m=[];for(let y=0;y<f.length;y++)f[y]&&m.push(y);let g=F("x",u,h,p);return[d.reverse(g,m)]}case"ReverseV2":{let f=F("axis",u,h,p),m=F("x",u,h,p);return[d.reverse(m,f)]}case"Slice":{let f=F("begin",u,h,p),m=F("size",u,h,p);return[d.slice(F("x",u,h,p),f,m)]}case"StridedSlice":{let f=F("begin",u,h,p),m=F("end",u,h,p),g=F("strides",u,h,p),y=F("beginMask",u,h,p),b=F("endMask",u,h,p),$=F("ellipsisMask",u,h,p),_=F("newAxisMask",u,h,p),M=F("shrinkAxisMask",u,h,p),Y=F("x",u,h,p);return[d.stridedSlice(Y,f,m,g,y,b,$,_,M)]}case"Pack":return wt(()=>{let f=F("axis",u,h,p),m=F("tensors",u,h,p),g=m[0].shape,y=d.squeeze(m[0]).shape,b=m.map($=>{let _=se($.shape,g);if(!_&&!se(d.squeeze($).shape,y))throw new Error("the input tensors shape does not match");return _?$:d.reshape($,g)});return[d.stack(b,f)]});case"Unpack":{let f=F("axis",u,h,p),m=F("tensor",u,h,p);return d.unstack(m,f)}case"Tile":{let f=F("reps",u,h,p);return[d.tile(F("x",u,h,p),f)]}case"Split":case"SplitV":{let f=F("axis",u,h,p),m=F("numOrSizeSplits",u,h,p),g=F("x",u,h,p);return d.split(g,m,f)}case"ScatterNd":{let f=F("indices",u,h,p),m=F("values",u,h,p),g=F("shape",u,h,p);return[d.scatterND(f,m,g)]}case"GatherNd":{let f=F("x",u,h,p),m=F("indices",u,h,p);return[d.gatherND(f,m)]}case"SparseToDense":{let f=F("sparseIndices",u,h,p),m=F("outputShape",u,h,p),g=F("sparseValues",u,h,p),y=F("defaultValue",u,h,p);return[d.sparseToDense(f,g,m,g.dtype===y.dtype?y:d.cast(y,g.dtype))]}default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"sparse":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"SparseFillEmptyRows":{let{outputIndices:f,outputValues:m,emptyRowIndicator:g,reverseIndexMap:y}=d.sparse.sparseFillEmptyRows(F("indices",u,h,p),F("values",u,h,p),F("denseShape",u,h,p),F("defaultValue",u,h,p));return[f,m,g,y]}case"SparseReshape":{let{outputIndices:f,outputShape:m}=d.sparse.sparseReshape(F("inputIndices",u,h,p),F("inputShape",u,h,p),F("newShape",u,h,p));return[f,m]}case"SparseSegmentMean":return[d.sparse.sparseSegmentMean(F("data",u,h,p),F("indices",u,h,p),F("segmentIds",u,h,p))];case"SparseSegmentSum":return[d.sparse.sparseSegmentSum(F("data",u,h,p),F("indices",u,h,p),F("segmentIds",u,h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"spectral":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"FFT":return[d.fft(F("x",u,h,p))];case"IFFT":return[d.ifft(F("x",u,h,p))];case"RFFT":return[d.rfft(F("x",u,h,p))];case"IRFFT":return[d.irfft(F("x",u,h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"string":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"StringNGrams":{let{nGrams:f,nGramsSplits:m}=d.string.stringNGrams(F("data",u,h,p),F("dataSplits",u,h,p),F("separator",u,h,p),F("nGramWidths",u,h,p),F("leftPad",u,h,p),F("rightPad",u,h,p),F("padWidth",u,h,p),F("preserveShortSequences",u,h,p));return[f,m]}case"StringSplit":{let{indices:f,values:m,shape:g}=d.string.stringSplit(F("input",u,h,p),F("delimiter",u,h,p),F("skipEmpty",u,h,p));return[f,m,g]}case"StringToHashBucketFast":return[d.string.stringToHashBucketFast(F("input",u,h,p),F("numBuckets",u,h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"transformation":return s(()=>((u,h,p,d=ot)=>{switch(u.op){case"Cast":return[d.cast(F("x",u,h,p),F("dtype",u,h,p))];case"ExpandDims":{let f=F("axis",u,h,p);return[d.expandDims(F("x",u,h,p),f)]}case"Squeeze":{let f=F("axis",u,h,p);return[d.squeeze(F("x",u,h,p),f)]}case"Reshape":return[d.reshape(F("x",u,h,p),F("shape",u,h,p))];case"MirrorPad":return[d.mirrorPad(F("x",u,h,p),F("padding",u,h,p),F("mode",u,h,p))];case"PadV2":case"Pad":return[d.pad(F("x",u,h,p),F("padding",u,h,p),F("constantValue",u,h,p))];case"SpaceToBatchND":{let f=F("blockShape",u,h,p),m=F("paddings",u,h,p);return[d.spaceToBatchND(F("x",u,h,p),f,m)]}case"BatchToSpaceND":{let f=F("blockShape",u,h,p),m=F("crops",u,h,p);return[d.batchToSpaceND(F("x",u,h,p),f,m)]}case"DepthToSpace":{let f=F("blockSize",u,h,p),m=F("dataFormat",u,h,p).toUpperCase();return[d.depthToSpace(F("x",u,h,p),f,m)]}case"BroadcastTo":return[d.broadcastTo(F("x",u,h,p),F("shape",u,h,p))];case"BroadcastArgs":return[d.broadcastArgs(F("s0",u,h,p),F("s1",u,h,p))];default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l));case"hash_table":return(async(u,h,p,d)=>{switch(u.op){case"HashTable":case"HashTableV2":{let f=F("keyDType",u,h,p),m=F("valueDType",u,h,p),g=new n3(f,m);return d.addHashTable(u.name,g),[g.handle]}case"LookupTableImport":case"LookupTableImportV2":{let f=F("tableHandle",u,h,p,d),m=F("keys",u,h,p),g=F("values",u,h,p);return[await d.getHashTableById(f.id).import(m,g)]}case"LookupTableFind":case"LookupTableFindV2":{let f=F("tableHandle",u,h,p,d),m=F("keys",u,h,p),g=F("defaultValue",u,h,p);return[await d.getHashTableById(f.id).find(m,g)]}case"LookupTableSize":case"LookupTableSizeV2":{let f=F("tableHandle",u,h,p,d);return[d.getHashTableById(f.id).tensorSize()]}default:throw TypeError(`Node type ${u.op} is not implemented`)}})(i,o,l,r);case"custom":let c=Lx(i.op);if(c&&c.customExecutor)return c.customExecutor(new QT(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return Bs(a)?a.then(i=>[].concat(i)):[].concat(a)}class Hx{constructor(t={},e={},r={},s={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=r,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let r=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(r))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function jx(n,t,e,r){let s=new Set,a=[],i=null,o=null,l=new Set,c=Object.keys(n).map(p=>Or(p)[0]),u=[];r!=null&&(u=r.map(p=>Or(p.name)[0]));let h=[...t];for(;h.length>0;){let p=h.pop();(qx(p)||i3(p)||o3(p))&&i==null&&(i=p,o=i.children.map(d=>d.name).filter(d=>s.has(d))),s.add(p.name),e[p.name]==null&&c.indexOf(p.name)===-1&&u.indexOf(p.name)===-1&&(p.inputs.length!==0?p.inputs.forEach(d=>{l.has(d.name)||(l.add(d.name),h.push(d))}):a.push(p.name))}return{inputs:n,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}let r3=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],s3=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],a3=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function qx(n){return r3.indexOf(n.op)>=0}function i3(n){return s3.indexOf(n.op)>=0}function o3(n){return a3.indexOf(n.op)>=0}class Lh{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new Lh(t.functions[r],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(r=>t[r].map(s=>s.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let r=t.map(a=>a.name).sort(),s=e.map(a=>a.name).sort();return r.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(t,e){let r=jx(t,e,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:a,syncInputs:i}=r;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(s.length>0){let o=e.map(c=>c.name),l=Object.keys(t);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${l}]. Missing the following inputs: [${s}]`)}return function(o,l,c){let{usedNodes:u,inputs:h}=c,p=[],d=Object.keys(h).map(y=>Or(y)[0]).map(y=>o.nodes[y]),f=o.initNodes;d.forEach(y=>{u.has(y.name)&&p.push(y)}),o.weights.forEach(y=>{u.has(y.name)&&p.push(y)}),f?.forEach(y=>{u.has(y.name)&&p.push(y)});let m=new Set,g=[];for(;p.length>0;){let y=p.pop();m.add(y.name),l[y.name]||g.push(y),y.children.forEach(b=>{!m.has(b.name)&&u.has(b.name)&&b.inputs.every($=>m.has($.name))&&p.push(b)})}return g}(this.graph,this.weightMap,r)}execute(t,e){t=this.mapInputs(t);let r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let s=r.map(h=>this.graph.nodes[Or(h)[0]]),a=e.map(h=>Or(h)[0]),i=a.map(h=>this.graph.nodes[h]);this.resetIntermediateTensors(),i.length===0&&(i=this._outputs);let o=this.getCompilationKey(s,i),l=this.compiledMap.get(o);l==null&&(l=this.compile(t,i),this.compiledMap.set(o,l));let c={},u={};return wt(()=>{let h=new Hx(this.weightMap,c,u,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(t).forEach(m=>{let[g,y]=Or(m),b=[];b[y]=t[m],p[g]=b});let d=this.getFrozenTensorIds(p),f={};for(let m=0;m<l.length;m++){let g=l[m];if(!p[g.name]){let y=Gx(g,p,h,this._resourceManager);if(Bs(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);p[g.name]=y,this.checkTensorForDisposal(g.name,g,p,h,d,a,f)}}return this.parent==null&&h.dispose(d),e.map(m=>ir(m,p,h))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(s=>s.id)));return new Set(e)}checkTensorForDisposal(t,e,r,s,a,i,o){e.category!=="control"&&i.indexOf(t)===-1&&(r[t].forEach(l=>{l!=null&&(o[l.id]=(o[l.id]||0)+e.children.length)}),e.inputs.forEach(l=>{if(l.category!=="control"){let c=function(u,h,p){return h[Oh(u,p.currentContextId)]}(l.name,r,s);c?.forEach(u=>{if(u&&!u.kept&&!a.has(u.id)){let h=o[u.id];if(h===1){if(this.keepTensorForDebug){let[p,d]=Ms(e.name,s);this.intermediateTensors[p]||(this.intermediateTensors[p]=[]),this.intermediateTensors[p][d]=u}else u.dispose();delete o[u.id]}else h!=null&&o[u.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let t in this.intermediateTensors)this.intermediateTensors[t].forEach(e=>e.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e,r=!1,s={},a={}){r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=Ct().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();let i=new Hx(this.weightMap,s,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,i,e,r);let o=e.map(u=>ir(u,this.tensorsMap,i)),l=o.map(u=>u.id),c=Object.keys(t).map(u=>t[u].id);return this.keepIds=new Set([...l,...c,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&i.dispose(this.keepIds),o}async executeFunctionAsync(t,e,r){let s=t.reduce((a,i,o)=>(a[this.inputs[o].name]=i,a),{});return this._executeAsync(s,this.outputNodes,!0,e,r)}async executeWithControlFlow(t,e,r,s){let a=Object.keys(t),i=a.map($=>this.graph.nodes[Or($)[0]]),o=r.map($=>Or($)[0]),l=o.map($=>this.graph.nodes[$]);l.length===0&&(l=this._outputs);let{usedNodes:c,missingInputs:u,dynamicNode:h,syncInputs:p}=jx(t,l,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map($=>({node:$,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach($=>{let[_,M]=Or($),Y=[];Y[M]=t[$],f[_]=Y});let m={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){let $=this.processStack(i,d,e,f,y,g,o,m,c);await Promise.all($)}h!=null||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter($=>!qx($)&&!ir($.name,f,e)).map($=>$.name);if(b.length>0){let $="";throw h!=null&&($=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${$}`)}return f}processStack(t,e,r,s,a,i,o,l,c){let u=[];for(;e.length>0;){let h=e.pop();r.currentContext=h.contexts;let p="";if(h.node.op==="Enter"&&F("isConstant",h.node,s,r)&&([p]=Ms(h.node.name,r)),s[h.node.name]==null){let d=Gx(h.node,s,r,this._resourceManager);p||([p]=Ms(h.node.name,r));let f=r.currentContext;Bs(d)?u.push(d.then(m=>(s[p]=m,r.currentContext=f,this.checkTensorForDisposal(p,h.node,s,r,i,o,l),this.processChildNodes(h.node,e,r,s,a,c),m))):(s[p]=d,this.checkTensorForDisposal(p,h.node,s,r,i,o,l),this.processChildNodes(h.node,e,r,s,a,c))}else this.processChildNodes(h.node,e,r,s,a,c)}return u}processChildNodes(t,e,r,s,a,i){t.children.forEach(o=>{let[l]=Ms(o.name,r);!a[l]&&i.has(o.name)&&(o.op==="Merge"?o.inputNames.some(c=>!!ir(c,s,r))&&(a[l]=!0,e.push({contexts:r.currentContext,node:o})):o.inputNames.every(c=>!!ir(c,s,r))&&(a[l]=!0,e.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let r=t[e],[s]=Or(e),a=this.graph.nodes[s];if(a.attrParams.shape&&a.attrParams.shape.value){let i=a.attrParams.shape.value;z(i.length===r.shape.length&&r.shape.every((o,l)=>i[l]===-1||i[l]===o),()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&z(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){let e={};for(let r in t)this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[r]!=null?e[this._signature.inputs[r].name]=t[r]:e[r]=t[r];return e}checkInputs(t){let e=Object.keys(t).filter(r=>{let[s]=Or(r);return this.graph.nodes[s]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[e]!=null?this._signature.outputs[e].name:e,{})}checkOutputs(t){t.forEach(e=>{let[r]=Or(e);if(!this.graph.nodes[r])throw new Error(`The output '${e}' is not found in the graph`)})}}class u3{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}let l3="?tfjs-format=file",c3="model.json";class h3{constructor(t,e={},r=I){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=r,e==null&&(this.loadOptions={}),this.resourceManager=new u3}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return Bs(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}this.signature=r,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Lh(zx.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let a=zx.Instance.transformGraph(t.modelInitializer);this.initializer=new Lh(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if(typeof t=="string"){let r=this.io.getSaveHandlers(t);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${t}'`);t=r[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){let r=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){let s={};return(r instanceof Me?[r]:r).forEach((a,i)=>s[this.structuredOutputKeys[i]]=a),s}return r}normalizeInputs(t){if(!(t instanceof Me||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,r,s)=>(e[r]=t[s],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let r=this.executor.execute(t,e);return r.length>1?r:r[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let r=await this.executor.executeAsync(t,e);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,r)=>(e[r]=[t[r]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function So(n,t={},e=I){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof n=="string"&&(n=function(s){return s.endsWith("/")||(s+="/"),`${s}${c3}${l3}`}(n));let r=new h3(n,t,e);return await r.load(),r}function Kx(n,t,e=new Map,r=new Set){if(n==null)return null;if(typeof Blob=="function"&&n instanceof Blob)return n.slice();if(r.has(n))throw new Error("Circular references are not supported.");if(e.has(n))return e.get(n);let s=t(n);if(s.recurse&&s.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(zh(n)){let a=Array.isArray(n)?[]:{};r.add(n);for(let i in n){let o=Kx(n[i],t,e,r);a[i]=o}return r.delete(n),n.__proto__&&(a.__proto__=n.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${n}`)}return e.set(n,s.value),s.value}function p3(n,t=Yx){return Xx(n,t)}function Xx(n,t,e=new Set){let r=n[0];if(e.has(r))throw new Error("Circular references are not supported.");let s=t(n);if(s.recurse&&s.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(zh(r)){let a=Array.isArray(r)?[]:{};e.add(r);for(let i in r){let o=n.map(c=>c[i]),l=Xx(o,t,e);a[i]=l}return e.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Yx(n){return n===null?null:zh(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}function zh(n){let t=!1;if(Ct().get("IS_BROWSER"))t=n instanceof TextDecoder;else{let{StringDecoder:e}=__webpack_require__(977);t=n instanceof e}return n!=null&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||typeof n=="object"&&!(n instanceof Me)&&!(n instanceof Promise)&&!t)}function d3(n){return function(t,e){return Kx(t,e)}(n,f3)}function f3(n){return n instanceof Me?{value:n.clone(),recurse:!1}:zh(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}class Zx{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),r=this.get(e);return this.set(e,this.pop()),r}}class Ph extends Zx{constructor(){super(Ph.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=2*this.capacity,e=new Array(t),r=this.length();for(let s=0;s<r;s++)e[s]=this.get(this.wrap(this.begin+s));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}function m3(n){return new b3(n)}function g3(n,t){return new Qx(n,t)}Ph.INITIAL_CAPACITY=32;class Kr{async toArray(){let t=[],e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){let t=this.prefetch(100),e=[],r=await t.next();for(;!r.done;)e.push(r.value),r=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),r=t(e.value);for(;!e.done&&r;)e=await this.next(),r=t(e.value)}handleErrors(t){return new S3(this,t)}filter(t){return new I3(this,t)}map(t){return new N3(this,t)}mapAsync(t){return new Jx(this,t)}serialMapAsync(t){return new Jx(this,t).serial()}flatmap(t){return new C3(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new k3(this,t,e)}columnMajorBatch(t,e=!0,r=Yx){return this.rowMajorBatch(t,e).map(s=>p3(s,r))}concatenate(t,e){return new Qx(new y3([this,t]),e)}take(t){return t<0||t==null?this:new w3(this,t)}skip(t){return t<0||t==null?this:new v3(this,t)}prefetch(t){return new ev(this,t)}shuffle(t,e){return new $3(this,t,e)}serial(){return new x3(this)}}class y3 extends Kr{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let t=this.items[this.trav];return this.trav++,{value:d3(t),done:!1}}}class b3 extends Kr{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class x3 extends Kr{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class v3 extends Kr{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let t=await this.upstream.next();if(t.done)return t;De(t.value)}return this.upstream.next()}}class w3 extends Kr{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class k3 extends Kr{constructor(t,e,r=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let t=[];for(;t.length<this.batchSize;){let e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class I3 extends Kr{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;De(t.value)}}}class N3 extends Kr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let e=ga(t.value),r=this.transform(t.value),s=ga(r);for(let a of e)od(a,s)||a.dispose();return{value:r,done:!1}}}class S3 extends Kr{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Jx extends Kr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let e=ga(t.value),r=await this.transform(t.value),s=ga(r);for(let a of e)od(a,s)||a.dispose();return{value:r,done:!1}}}class T3 extends Kr{constructor(){super(),this.outputQueue=new Ph,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class C3 extends T3{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let t=await this.upstream.next();if(t.done)return!1;let e=ga(t.value),r=this.transform(t.value),s=ga(r);this.outputQueue.pushAll(r);for(let a of e)od(a,s)||a.dispose();return!0}}class Qx extends Kr{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){let r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var tv;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(tv||(tv={}));class ev extends Kr{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Zx(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class $3 extends ev{constructor(t,e,r){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=go.alea(r||Jn().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class nv{constructor(){this.size=null}batch(t,e=!0){let r=this,s;return z(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`),s=this.size===1/0||this.size==null?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Ls(async()=>(await r.iterator()).columnMajorBatch(t,e,E3),s)}concatenate(t){let e=this,r;return r=this.size===1/0||t.size===1/0?1/0:this.size!=null&&t.size!=null?this.size+t.size:null,Ls(async()=>(await e.iterator()).concatenate(await t.iterator()),r)}filter(t){let e=this,r;return r=this.size===1/0?1/0:null,Ls(async()=>(await e.iterator()).filter(s=>wt(()=>t(s))),r)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){let e=this;return Ls(async()=>(await e.iterator()).map(r=>wt(()=>t(r))),this.size)}mapAsync(t){let e=this;return Ls(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return Ls(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){let e=this,r;return r=this.size!=null&&t>0?this.size*t:t===0?0:this.size!=null&&(t===void 0||t<0)?1/0:null,Ls(async()=>g3(m3(async()=>({value:await e.iterator(),done:!1})).take(t)),r)}skip(t){let e=this,r;return r=this.size!=null&&t>=0&&this.size>=t?this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?0:null,Ls(async()=>(await e.iterator()).skip(t),r)}shuffle(t,e,r=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,a=go.alea(e||Jn().toString());return Ls(async()=>{let i=a.int32();return r&&(i+=a.int32()),(await s.iterator()).shuffle(t,i.toString())},this.size)}take(t){let e=this,r;return r=this.size!=null&&this.size>t?t:this.size!=null&&this.size<=t?this.size:null,Ls(async()=>(await e.iterator()).take(t),r)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ls(n,t=null){return new class extends nv{constructor(){super(...arguments),this.size=t}async iterator(){return n()}}}function E3(n){if(n===null)return null;if((e=n[0])==null||(r=e)===null||typeof r!="object"&&typeof r!="function"||Array.isArray(e)||typeof e=="object"&&e instanceof Me||Vn(e))return{value:function(s){if(s.length===0)throw new Error("Can't make a batch of zero elements.");return s[0]instanceof Me?jr(s):ds(s)}(n),recurse:!1};var e,r;return{value:null,recurse:!0}}nv.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function ue(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&z(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}let _3=rf;class Bh extends $t{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new bt(this,wa())}nextDataId(){return Bh.nextDataId++}write(t,e,r){this.firstUse&&(this.firstUse=!1,Ct().get("IS_NODE")&&Br(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:r,refCount:1}),s}makeTensorInfo(t,e,r){let s;if(e==="string"&&r!=null&&r.length>0&&gr(r[0])){let a=r.map(i=>fa(i));s=this.write(a,t,e)}else s=this.write(r,t,e);return{dataId:s,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,r,s,a){this.data.set(t,{values:e,dtype:s,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:e,complexTensorInfos:r}=this.data.get(t);return e==="complex64"?Xs(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.data.get(t).values}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let r=e.map(s=>ma(s));return Fe(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Fe(t.shape,t.dtype,e)}makeOutput(t,e,r){return wa().makeTensorFromTensorInfo(this.makeTensorInfo(e,r,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(t);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){let e=Jn();return t(),{kernelMs:Jn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){ue([t],"where");let e=this.readSync(t.dataId);return _3(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Bh.nextDataId=0;function Ke(n,t,e){return({inputs:r,attrs:s,backend:a})=>{let{x:i}=r;if(ue(i,n),i.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,l=o.data.get(i.dataId).values,c=St(i.shape),u=e||i.dtype,h=Xe(u,c);for(let p=0;p<c;++p)h[p]=t(l[p],s);return o.makeTensorInfo(i.shape,u,h)}}function To(n,t,e){return({inputs:r,attrs:s,backend:a})=>{let{x:i}=r;if(ue(i,n),i.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,l=o.data.get(i.dataId).values,c=e||i.dtype,u=t(l,c,s);return o.makeTensorInfo(i.shape,c,u)}}I0("cpu",()=>new Bh,1);let rv=Ke(Nt,n=>n>=0?n:Math.exp(n)-1),A3={kernelName:Nt,backendName:"cpu",kernelFunc:rv};function zs(n){let{inputs:t,backend:e}=n,{x:r}=t;return e.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}let R3={kernelName:ou,backendName:"cpu",kernelFunc:zs};function sv(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{alpha:a}=r;ue([s],"leakyRelu");let i=St(s.shape),o=e.data.get(s.dataId).values,l=Ae("float32",i);for(let c=0;c<o.length;c++)l[c]=o[c]<0?a*o[c]:o[c];return e.makeTensorInfo(s.shape,"float32",l)}let F3={kernelName:Hl,backendName:"cpu",kernelFunc:sv};function Nn(n){return(t,e,r,s,a)=>{let i=Ce(t,e),o=i.length,l=Yt(i),c=Ae(a,St(i)),u=t.length,h=e.length,p=Yt(t),d=Yt(e),f=io(t,i),m=io(e,i);if(f.length+m.length===0)for(let g=0;g<c.length;++g)c[g]=n(r[g%r.length],s[g%s.length]);else for(let g=0;g<c.length;++g){let y=Ps(g,o,l),b=y.slice(-u);f.forEach(Y=>b[Y]=0);let $=Pr(b,u,p),_=y.slice(-h);m.forEach(Y=>_[Y]=0);let M=Pr(_,h,d);c[g]=n(r[$],s[M])}return[c,i]}}let D3=Nn((n,t)=>n<0?t*n:n);function av(n){let{inputs:t,backend:e}=n,{x:r,alpha:s}=t;ue([r,s],"prelu");let a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,[o,l]=D3(r.shape,s.shape,a,i,"float32");return e.makeTensorInfo(l,"float32",o)}let O3={kernelName:cc,backendName:"cpu",kernelFunc:av},iv=Ke(xu,n=>Math.max(0,n)),M3={kernelName:xu,backendName:"cpu",kernelFunc:iv},ov=Ke(vu,n=>Math.min(Math.max(0,n),6)),L3={kernelName:vu,backendName:"cpu",kernelFunc:ov};function za(n){return(t,e,r)=>{let s=Ae(e,t.length);for(let a=0;a<t.length;++a)s[a]=n(t[a],r);return s}}let z3=za(n=>1/(1+Math.exp(-n))),uv=Ke(Cu,n=>1/(1+Math.exp(-n))),P3={kernelName:Cu,backendName:"cpu",kernelFunc:uv};function Wh(n,t,e,r,s){if(e==="linear")return zs({inputs:{x:t},backend:n});if(e==="relu")return iv({inputs:{x:t},backend:n});if(e==="elu")return rv({inputs:{x:t},backend:n});if(e==="relu6")return ov({inputs:{x:t},backend:n});if(e==="prelu")return av({inputs:{x:t,alpha:r},backend:n});if(e==="leakyrelu")return sv({inputs:{x:t},backend:n,attrs:{alpha:s}});if(e==="sigmoid")return uv({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function Mr(n){let{inputs:t,backend:e}=n,{real:r,imag:s}=t,a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,o=e.makeTensorInfo(r.shape,"complex64");return e.data.get(o.dataId).complexTensorInfos={real:e.makeTensorInfo(r.shape,"float32",a),imag:e.makeTensorInfo(s.shape,"float32",i)},o}let B3={kernelName:tu,backendName:"cpu",kernelFunc:Mr};function Vh(n,t,e="float32"){if(e==="complex64")return Mr({inputs:{real:Vh(n,t,"float32"),imag:Vh(n,t,"float32")},backend:n});let r=nn(St(t),e);return n.makeTensorInfo(t,e,r)}function ki(n){let{inputs:t,backend:e}=n,{input:r}=t,s=e.data.get(r.dataId).complexTensorInfos.real,a=e.data.get(s.dataId).values;return e.makeTensorInfo(s.shape,s.dtype,a)}let W3={kernelName:Fp,backendName:"cpu",kernelFunc:ki};function lv(n,t,e,r){if(r==="int32")return[t,"int32",Int32Array.from(n)];if(r==="bool"){let s=ri([0],e),[a,i]=Nn((o,l)=>o!==l?1:0)(t,[],n,s,"bool");return[i,"bool",a]}throw new Error(`Error in Cast: failed to cast ${e} to ${r}`)}function Pa(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dtype:a}=r;if(a==="complex64"){if(s.dtype==="complex64")return zs({inputs:{x:s},backend:e});let u=Vh(e,s.shape,s.dtype),h=Pa({inputs:{x:s},backend:e,attrs:{dtype:"float32"}}),p=Mr({inputs:{real:h,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),p}if(s.dtype==="complex64"){let u=ki({inputs:{input:s},backend:e}),h=Pa({inputs:{x:u},backend:e,attrs:{dtype:a}});return e.disposeIntermediateTensorInfo(u),h}if(!mr(s.dtype,a)){let u=zs({inputs:{x:s},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:a}}let i=e.data.get(s.dataId).values,[o,l,c]=lv(i,s.shape,s.dtype,a);return e.makeTensorInfo(o,l,c)}let V3={kernelName:Ya,backendName:"cpu",kernelFunc:Pa};function Ln(n,t,e,r){return e==null?({inputs:s,backend:a})=>{let{a:i,b:o}=s,l=a;ue([i,o],n);let c=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,h=i.dtype==="string"?di(c):c,p=i.dtype==="string"?di(u):u,d=r||i.dtype,[f,m]=t(i.shape,o.shape,h,p,d);return l.makeTensorInfo(m,d,f)}:({inputs:s,backend:a})=>{let{a:i,b:o}=s,l=a;if(i.dtype==="complex64"||o.dtype==="complex64"){let c=Pa({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,d=l.data.get(h.dataId).values,f=l.data.get(p.dataId).values,m=Pa({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,$=l.data.get(y.dataId).values,_=l.data.get(b.dataId).values,[M,Y,tt]=e(i.shape,o.shape,d,f,$,_),Q=l.makeTensorInfo(tt,"float32",M),et=l.makeTensorInfo(tt,"float32",Y),rt=Mr({inputs:{real:Q,imag:et},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(Q),l.disposeIntermediateTensorInfo(et),rt}{let c=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,h=r||i.dtype,[p,d]=t(i.shape,o.shape,c,u,h);return l.makeTensorInfo(d,h,p)}}}function Mm(n){return(t,e,r,s,a,i)=>{let o=Ce(t,e),l=St(o),c=o.length,u=Yt(o),h=Ae("float32",l),p=Ae("float32",l),d=io(t,o),f=io(e,o),m=Xs(r,s),g=Xs(a,i),y=t.length,b=Yt(t),$=e.length,_=Yt(e);if(d.length+f.length===0)for(let M=0;M<h.length;M++){let Y=M%m.length,tt=M%g.length,Q=n(m[2*Y],m[2*Y+1],g[2*tt],g[2*tt+1]);h[M]=Q.real,p[M]=Q.imag}else for(let M=0;M<h.length;M++){let Y=Ps(M,c,u),tt=Y.slice(-y);d.forEach(ft=>tt[ft]=0);let Q=Pr(tt,y,b),et=Y.slice(-$);f.forEach(ft=>et[ft]=0);let rt=Pr(et,$,_),lt=n(m[2*Q],m[2*Q+1],g[2*rt],g[2*rt+1]);h[M]=lt.real,p[M]=lt.imag}return[h,p,o]}}let cv=Nn((n,t)=>n+t),U3=Mm((n,t,e,r)=>({real:n+e,imag:t+r})),Co=Ln(yr,cv,U3),G3={kernelName:yr,backendName:"cpu",kernelFunc:Co};function sn(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{shape:a}=r,i=St(s.shape),o=er(a,i),l=St(o);z(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(s.dataId);let c=e.data.get(s.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=o,h.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}let H3={kernelName:pc,backendName:"cpu",kernelFunc:sn};function hv(n){let{inputs:t,backend:e,attrs:r}=n,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;ue([s,a],"matMul");let l=s.shape.length,c=a.shape.length,u=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[c-1]:a.shape[c-2],p=i?s.shape[l-1]:s.shape[l-2],d=o?a.shape[c-2]:a.shape[c-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=St(f),y=St(m),b=Ce(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);z(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let $=o?[y,d,h]:[y,h,d],_=sn({inputs:{x:s},backend:e,attrs:{shape:i?[g,u,p]:[g,p,u]}}),M=sn({inputs:{x:a},backend:e,attrs:{shape:$}}),Y=i?_.shape[1]:_.shape[2],tt=i?_.shape[2]:_.shape[1],Q=o?M.shape[1]:M.shape[2],et=Math.max(g,y),rt=e.data.get(_.dataId).values,lt=e.data.get(M.dataId).values,ft=Yt(_.shape),yt=Yt(M.shape),[kt,Tt,It]=i?[ft[0],1,ft[1]]:[ft[0],ft[1],1],[Et,_t,At]=o?[1,yt[1],yt[0]]:[yt[1],1,yt[0]],Mt=tt*Q,Ot=Fe([et,tt,Q],_.dtype),Lt=Ot.values,Pt=e.blockSize;for(let jt=0;jt<et;jt++)for(let Kt=0;Kt<tt;Kt+=Pt)for(let Qt=0;Qt<Q;Qt+=Pt)for(let te=0;te<Y;te+=Pt){let be=Math.min(Kt+Pt,tt),me=Math.min(Qt+Pt,Q),we=Math.min(te+Pt,Y);for(let pe=Kt;pe<be;pe++)for(let Ie=Qt;Ie<me;Ie++){let ke=0;for(let Te=te;Te<we;Te++){let Ne=Math.min(jt,g-1)*kt,_e=Math.min(jt,y-1)*At;ke+=rt[Ne+pe*Tt+Te*It]*lt[Te*Et+Ie*_t+_e]}Lt[jt*Mt+(pe*Q+Ie)]+=ke}}return e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(M),e.makeTensorInfo(b,Ot.dtype,Ot.values)}let j3={kernelName:Gi,backendName:"cpu",kernelFunc:hv},q3={kernelName:Sc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=r,p,d,f,m=[];p=hv({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:c},backend:e}),i&&(d=Co({inputs:{a:p,b:i},backend:e}),m.push(p),p=d),u&&(f=Wh(e,p,u,o,h),m.push(p),p=f);for(let g of m)e.disposeIntermediateTensorInfo(g);return p}};function pv(n){let t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}let K3={kernelName:aa,backendName:"cpu",kernelFunc:n=>{let{x:t}=n.inputs,e=n.backend;ue(t,"abs");let r=new Float32Array(St(t.shape));return r=pv(e.data.get(t.dataId).values),e.makeOutput(r,t.shape,t.dtype)}},X3=Ke(ia,n=>Math.acos(n)),Y3={kernelName:ia,backendName:"cpu",kernelFunc:X3},Z3=Ke(Ga,n=>Math.acosh(n)),J3={kernelName:Ga,backendName:"cpu",kernelFunc:Z3},Q3={kernelName:Li,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,r=t;ue(t,"addN");let s=r.map(o=>e.data.get(o.dataId).values),a=Fe(r[0].shape,r[0].dtype),i=a.values;for(let o=0;o<r.length;o++){let l=s[o];for(let c=0;c<i.length;c++)i[c]+=l[c]}return e.makeTensorInfo(a.shape,a.dtype,a.values)}};function Lm(n,t,e,r,s){let a=t.length,i=St(t),o=Yt(t),l=Yt(s),c=Ae(e,St(s));for(let u=0;u<i;++u){let h=Ps(u,a,o),p=new Array(h.length);for(let d=0;d<p.length;d++)p[d]=h[r[d]];c[Pr(p,a,l)]=n[u]}return c}function Nr(n){let{inputs:t,attrs:e,backend:r}=n,{x:s}=t,{perm:a}=e;ue(s,"transpose");let i=s.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=s.shape[a[c]];let l=Lm(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}let tC={kernelName:eo,backendName:"cpu",kernelFunc:Nr},eC={kernelName:Yo,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;ue(s,"all");let o=ge(a,s.shape),l=o,c=mn(l,s.shape.length),u=s;c!=null&&(u=Nr({inputs:{x:s},backend:e,attrs:{perm:c}}),l=vn(l.length,s.shape.length)),jn("all",l,u.shape.length);let[h,p]=On(u.shape,l),d=St(p),f=nn(St(h),u.dtype),m=e.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let b=y*d,$=m[b];for(let _=0;_<d;++_){let M=m[b+_];$=$&&M}f[y]=$}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(h,u.dtype,f);if(i){let y=sn({inputs:{x:g},backend:e,attrs:{shape:xn(h,o)}});return e.disposeIntermediateTensorInfo(g),y}return g}},nC={kernelName:zi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;ue(s,"any");let o=ge(a,s.shape),l=o,c=mn(l,s.shape.length),u=s;c!=null&&(u=Nr({inputs:{x:s},backend:e,attrs:{perm:c}}),l=vn(l.length,s.shape.length)),jn("any",l,u.shape.length);let[h,p]=On(u.shape,l),d=St(p),f=nn(St(h),u.dtype),m=e.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let b=y*d,$=m[b];for(let _=0;_<d;++_){let M=m[b+_];$=$||M}f[y]=$}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(h,u.dtype,f);if(i){let y=sn({inputs:{x:g},backend:e,attrs:{shape:xn(h,o)}});return e.disposeIntermediateTensorInfo(g),y}return g}},rC={kernelName:Pi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;ue(s,"argMax");let i=ge(a,s.shape),o=mn(i,s.shape.length),l=s,c=[];o!=null&&(l=Nr({inputs:{x:s},backend:e,attrs:{perm:o}}),c.push(l),i=vn(i.length,l.shape.length)),i=[i[0]],jn("argMax",i,l.shape.length);let[u,h]=On(l.shape,i),p=nn(St(u),"int32"),d=St(h),f=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){let g=m*d,y=f[g],b=0;for(let $=0;$<d;++$){let _=f[g+$];_>y&&(y=_,b=$)}p[m]=b}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",p)}},sC={kernelName:Bi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;ue(s,"argMin");let i=ge(a,s.shape),o=mn(i,s.shape.length),l=s,c=[];o!=null&&(l=Nr({inputs:{x:s},backend:e,attrs:{perm:o}}),c.push(l),i=vn(i.length,l.shape.length)),i=[i[0]],jn("argMin",i,l.shape.length);let[u,h]=On(l.shape,i),p=nn(St(u),"int32"),d=St(h),f=e.data.get(l.dataId).values;for(let m=0;m<p.length;++m){let g=m*d,y=f[g],b=0;for(let $=0;$<d;++$){let _=f[g+$];_<y&&(y=_,b=$)}p[m]=b}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",p)}},aC=Ke(Ha,n=>Math.asin(n)),iC={kernelName:Ha,backendName:"cpu",kernelFunc:aC},oC=Ke(ja,n=>Math.asinh(n)),uC={kernelName:ja,backendName:"cpu",kernelFunc:oC},lC=Ke(qa,n=>Math.atan(n)),cC={kernelName:qa,backendName:"cpu",kernelFunc:lC},hC=Nn((n,t)=>Math.atan2(n,t)),pC=Ln(Xa,hC),dC={kernelName:Xa,backendName:"cpu",kernelFunc:pC},fC=Ke(Ka,n=>Math.atanh(n)),mC={kernelName:Ka,backendName:"cpu",kernelFunc:fC};function zm(n,t,e,r,s,a){let i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,u=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Fe(s.outShape,e),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],$=s.outShape[3];for(let _=0;_<s.batchSize;++_){let M=_*y,Y=_*r[0];for(let tt=0;tt<s.inChannels;++tt)for(let Q=0;Q<s.outHeight;++Q){let et=Q*i-p,rt=Math.max(0,et),lt=Math.min(s.inHeight,u+et),ft=M+Q*b;for(let yt=0;yt<s.outWidth;++yt){let kt=yt*o-d,Tt=Math.max(0,kt),It=Math.min(s.inWidth,h+kt),Et=f,_t=0,At=0;for(let Mt=rt;Mt<lt;Mt+=l){let Ot=Y+Mt*r[1];for(let Lt=Tt;Lt<It;Lt+=c){let Pt=n[Ot+Lt*r[2]+tt];a==="max"&&Pt>Et?Et=Pt:a==="avg"&&(_t+=Pt,At++)}if(isNaN(Et))break}g[ft+yt*$+tt]=a==="avg"?_t/At:Et}}}return m}function dv(n,t,e,r,s=!1,a=!1){let i=Fe(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,c=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Fe(t,e,n);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){let $=b*o-d,_=$;for(;_<0;)_+=c;let M=Math.min(r.inHeight,h+$);for(let Y=0;Y<r.outWidth;++Y){let tt=Y*l-f,Q=tt;for(;Q<0;)Q+=u;let et=Math.min(r.inWidth,p+tt),rt=Number.NEGATIVE_INFINITY,lt=-1;for(let ft=_;ft<M;ft+=c){let yt=ft-$;for(let kt=Q;kt<et;kt+=u){let Tt=kt-tt,It=m.get(g,ft,kt,y);It>rt&&(rt=It,lt=s?a?((g*r.inHeight+ft)*r.inWidth+kt)*r.inChannels+y:(ft*r.inWidth+kt)*r.inChannels+y:yt*p+Tt)}}i.set(lt,g,b,Y,y)}}return i}function fv(n,t,e,r,s,a){let i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,c=s.dilationDepth,u=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,$=Fe(s.outShape,e),_=$.values,M=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],Y=s.outShape[2]*s.outShape[3]*s.outShape[4],tt=s.outShape[3]*s.outShape[4],Q=s.outShape[4];for(let et=0;et<s.batchSize;++et){let rt=et*M,lt=et*r[0];for(let ft=0;ft<s.inChannels;++ft)for(let yt=0;yt<s.outDepth;++yt){let kt=yt*i-m,Tt=kt;for(;Tt<0;)Tt+=c;let It=Math.min(s.inDepth,p+kt),Et=rt+yt*Y;for(let _t=0;_t<s.outHeight;++_t){let At=_t*o-g,Mt=At;for(;Mt<0;)Mt+=u;let Ot=Math.min(s.inHeight,d+At),Lt=Et+_t*tt;for(let Pt=0;Pt<s.outWidth;++Pt){let jt=Pt*l-y,Kt=jt;for(;Kt<0;)Kt+=h;let Qt=Math.min(s.inWidth,f+jt),te=Lt+Pt*Q,be=b,me=0,we=0;for(let pe=Tt;pe<It;pe+=c){let Ie=lt+pe*r[1];for(let ke=Mt;ke<Ot;ke+=u){let Te=Ie+ke*r[2];for(let Ne=Kt;Ne<Qt;Ne+=h){let _e=n[Te+Ne*r[3]+ft];if(a==="max"&&_e>be?be=_e:a==="avg"&&(me+=_e,we++),isNaN(be))break}if(isNaN(be))break}if(isNaN(be))break}_[te+ft]=a==="avg"?me/we:be}}}}return $}let gC={kernelName:Wi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t;ue(s,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;z(Hn(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let c=Jr(s.shape,a,i,1,o,l),u;if(c.filterWidth===1&&c.filterHeight===1&&se(c.inShape,c.outShape))u=zs({inputs:{x:s},backend:e});else{let h=e.data.get(s.dataId).values,p=Yt(s.shape),d=zm(h,s.shape,s.dtype,p,c,"avg");u=e.makeTensorInfo(c.outShape,s.dtype,d.values)}return u}},yC={kernelName:Vi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=r;ue(s,"avgPool3d");let u=Gs(s.shape,a,i,1,o,l,c),h=fv(e.data.get(s.dataId).values,s.shape,s.dtype,Yt(s.shape),u,"avg");return e.makeTensorInfo(h.shape,"float32",h.values)}},bC={kernelName:Ui,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=r;ue([s,a],"avgPool3DGrad");let u=Gs(a.shape,i,o,1,l,c),h=u.strideDepth,p=u.strideHeight,d=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,$=u.dilationWidth,_=u.effectiveFilterDepth,M=u.effectiveFilterHeight,Y=u.effectiveFilterWidth,tt=_-1-u.padInfo.front,Q=Y-1-u.padInfo.left,et=M-1-u.padInfo.top,rt=Fe(a.shape,"float32"),lt=1/(f*m*g),ft=e.bufferSync(s);for(let yt=0;yt<u.batchSize;++yt)for(let kt=0;kt<u.inChannels;++kt)for(let Tt=0;Tt<u.inDepth;++Tt)for(let It=0;It<u.inHeight;++It)for(let Et=0;Et<u.inWidth;++Et){let _t=Tt-tt,At=It-et,Mt=Et-Q,Ot=0;for(let Lt=0;Lt<_;Lt+=y){let Pt=(_t+Lt)/h;if(!(Pt<0||Pt>=u.outDepth||Math.floor(Pt)!==Pt))for(let jt=0;jt<M;jt+=b){let Kt=(At+jt)/p;if(!(Kt<0||Kt>=u.outHeight||Math.floor(Kt)!==Kt))for(let Qt=0;Qt<Y;Qt+=$){let te=(Mt+Qt)/d;te<0||te>=u.outWidth||Math.floor(te)!==te||(Ot+=ft.get(yt,Pt,Kt,te,kt))}}}rt.set(Ot*lt,yt,Tt,It,Et,kt)}return e.makeTensorInfo(rt.shape,rt.dtype,rt.values)}},xC={kernelName:Zo,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a;ue([s,a],"avgPoolGrad");let{filterSize:o,strides:l,pad:c}=r,u=Jr(i.shape,o,l,1,c),h=u.strideHeight,p=u.strideWidth,d=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,$=b-1-u.padInfo.left,_=y-1-u.padInfo.top,M=Fe(i.shape,"float32"),Y=1/(d*f),tt=e.data.get(s.dataId).values,Q=Fe(s.shape,"float32",tt);for(let et=0;et<u.batchSize;++et)for(let rt=0;rt<u.inChannels;++rt)for(let lt=0;lt<u.inHeight;++lt)for(let ft=0;ft<u.inWidth;++ft){let yt=lt-_,kt=ft-$,Tt=0;for(let It=0;It<y;It+=m){let Et=(yt+It)/h;if(!(Et<0||Et>=u.outHeight||Math.floor(Et)!==Et))for(let _t=0;_t<b;_t+=g){let At=(kt+_t)/p;At<0||At>=u.outWidth||Math.floor(At)!==At||(Tt+=Q.get(et,Et,At,rt))}}M.set(Tt*Y,et,lt,ft,rt)}return e.makeTensorInfo(M.shape,M.dtype,M.values)}},vC={kernelName:la,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,scale:a,offset:i,mean:o,variance:l}=t;z(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ue([s,o,l,a,i],"batchNorm");let{varianceEpsilon:c}=r;c==null&&(c=.001);let u=e.data.get(s.dataId).values,h=e.data.get(o.dataId).values,p=e.data.get(l.dataId).values,d=a?e.data.get(a.dataId).values:new Float32Array([1]),f=i?e.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=d.length,b=p.length,$=h.length,_=0,M=0,Y=0,tt=0;for(let Q=0;Q<u.length;++Q)m[Q]=f[_++]+(u[Q]-h[M++])*d[Y++]/Math.sqrt(p[tt++]+c),_>=g&&(_=0),M>=$&&(M=0),Y>=y&&(Y=0),tt>=b&&(tt=0);return e.makeTensorInfo(s.shape,s.dtype,m)}};function mv(n,t,e,r,s){let a=kd(r,t,e),i=St(e),o=Yt(r);if(a){let u=Id(t,o);return s==="string"?n.slice(u,u+i):n.subarray(u,u+i)}let l=Fe(r,s,s==="string"?di(n):n),c=Fe(e,s);for(let u=0;u<c.size;++u){let h=c.indexToLoc(u),p=h.map((d,f)=>d+t[f]);c.set(l.get(...p),...h)}return s==="string"?ey(c.values):c.values}function Ii(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,size:i}=r;ue(s,"slice");let[o,l]=Mc(s,a,i);vd(s,o,l);let c=mv(e.data.get(s.dataId).values,o,l,s.shape,s.dtype);return e.makeTensorInfo(l,s.dtype,c)}let wC={kernelName:yc,backendName:"cpu",kernelFunc:Ii},kC={kernelName:Hi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,crops:i}=r;ue([s],"batchToSpaceND");let o=a.reduce((y,b)=>y*b),l=Qu(s.shape,a,o),c=tl(l.length,a.length),u=el(s.shape,a,o),h=wf(i,a.length),p=kf(u,i,a.length),d=sn({inputs:{x:s},backend:e,attrs:{shape:l}}),f=Nr({inputs:{x:d},backend:e,attrs:{perm:c}}),m=sn({inputs:{x:f},backend:e,attrs:{shape:u}}),g=Ii({inputs:{x:m},backend:e,attrs:{begin:h,size:p}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}};function Pm(n,t,e,r,s){let a=St(r),i=nn(s,e);for(let o=0;o<n.length;o++){let l=n[o];if(l<0)throw new Error("Input x must be non-negative!");l>=s||(i[l]+=a>0?t[o]:1)}return i}function gv(n,t,e,r=!1){let s=n.shape[0],a=n.shape[1],i=Fe([s,e],t.dtype);for(let o=0;o<s;o++)for(let l=0;l<a;l++){let c=n.get(o,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(r?i.set(1,o,c):t.size>0?i.set(i.get(o,c)+t.get(o,l),o,c):i.set(i.get(o,c)+1,o,c))}return i}let IC={kernelName:Jo,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i}=r,o=Pm(e.data.get(s.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,o)}},NC={kernelName:Qo,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{s0:r,s1:s}=t,a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,o=Ce(Array.from(a),Array.from(i));return e.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},yv=za(n=>Math.ceil(n)),SC=To(Za,yv),TC={kernelName:Za,backendName:"cpu",kernelFunc:SC},CC=Ke(Ja,(n,t)=>{let e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),$C={kernelName:Ja,backendName:"cpu",kernelFunc:CC},EC={kernelName:ji,backendName:"cpu",kernelFunc:n=>{let{x:t}=n.inputs,e=n.backend,r=new Float32Array(St(t.shape)),s=e.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=e.data.get(a.dataId).values,l=e.data.get(i.dataId).values;for(let c=0;c<o.length;c++){let u=o[c],h=l[c];r[c]=Math.hypot(u,h)}return e.makeOutput(r,t.shape,"float32")}};function bv(n,t,e,r){let s=Xe(e,St(t));if(r&&e!=="string"){let a=0;n.forEach(i=>{let o=St(i.shape);s.set(i.vals,a),a+=o})}else{let a=0;n.forEach(i=>{let o=e==="string"?di(i.vals):i.vals,l=0;for(let c=0;c<i.shape[0];++c){let u=c*t[1]+a;for(let h=0;h<i.shape[1];++h)s[u+h]=o[l++]}a+=i.shape[1]})}return s}function $o(n){let{inputs:t,backend:e}=n,{input:r}=t,s=e.data.get(r.dataId).complexTensorInfos.imag,a=e.data.get(s.dataId).values;return e.makeTensorInfo(s.shape,s.dtype,a)}let _C={kernelName:vp,backendName:"cpu",kernelFunc:$o};function Eo(n){let{inputs:t,backend:e,attrs:r}=n,{axis:s}=r,a=ge(s,t[0].shape)[0];bf(t.map(f=>f.shape),a);let i=As(t.map(f=>f.shape),a);if(St(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(f=>St(f.shape)>0);if(o.length===1)return zs({inputs:{x:o[0]},backend:e});if(o[0].dtype==="complex64"){let f=o.map($=>ki({inputs:{input:$},backend:e})),m=o.map($=>$o({inputs:{input:$},backend:e})),g=Eo({inputs:f,backend:e,attrs:{axis:a}}),y=Eo({inputs:m,backend:e,attrs:{axis:a}}),b=Mr({inputs:{real:g,imag:y},backend:e});return f.forEach($=>e.disposeIntermediateTensorInfo($)),m.forEach($=>e.disposeIntermediateTensorInfo($)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),b}let l=o.map(f=>{let m=St(f.shape.slice(a));return sn({inputs:{x:f},backend:e,attrs:{shape:[-1,m]}})}),c=l.map(f=>({vals:e.data.get(f.dataId).values,shape:f.shape}));i=As(l.map(f=>f.shape),1);let u=l[0].shape[0]===1,h=bv(c,i,t[0].dtype,u),p=As(o.map(f=>f.shape),a),d=e.makeTensorInfo(p,t[0].dtype,h);return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}let AC={kernelName:qi,backendName:"cpu",kernelFunc:Eo};function xv(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=r;ue([s,a],"conv2d");let h=Hs(l),p=Dn(s.shape,a.shape,i,c,o,u,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,$=p.dataFormat==="channelsLast",_=new Fn(p.outShape,s.dtype),M=Yt(s.shape),Y=Yt(a.shape),tt=M[0],Q=$?M[1]:M[2],et=$?M[2]:1,rt=$?1:M[1],lt=_.strides[0],ft=$?_.strides[1]:_.strides[2],yt=$?_.strides[2]:1,kt=$?1:_.strides[1],Tt=e.data.get(s.dataId).values,It=e.data.get(a.dataId).values,Et=_.values;for(let _t=0;_t<p.batchSize;++_t){let At=_t*tt,Mt=_t*lt;for(let Ot=0;Ot<p.outHeight;++Ot){let Lt=Mt+Ot*ft,Pt=Ot*p.strideHeight-b;for(let jt=0;jt<d;++jt){let Kt=Pt+jt*m;if(Kt<0||Kt>=p.inHeight)continue;let Qt=jt*Y[0],te=At+Kt*Q;for(let be=0;be<p.outWidth;++be){let me=Lt+be*yt,we=be*p.strideWidth-y;for(let pe=0;pe<f;++pe){let Ie=we+pe*g;if(Ie<0||Ie>=p.inWidth)continue;let ke=te+Ie*et,Te=Qt+pe*Y[1];for(let Ne=0;Ne<p.inChannels;++Ne){let _e=Tt[ke+Ne*rt];for(let ze=0;ze<p.outChannels;++ze)Et[me+ze*kt]+=_e*It[Te+ze];Te+=p.outChannels}}}}}}return e.makeTensorInfo(_.shape,_.dtype,Et)}let RC={kernelName:Ki,backendName:"cpu",kernelFunc:xv},FC={kernelName:eu,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=r;ue([s,a],"conv2dBackpropFilter");let h=Hs(l),p=Dn(s.shape,u,i,1,o,c,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=p.dataFormat==="channelsLast",b=new Fn(p.filterShape,"float32"),$=p.padInfo.left,_=p.padInfo.top,M=e.data.get(s.dataId).values,Y=e.data.get(a.dataId).values,tt=new Fn(s.shape,s.dtype,M),Q=new Fn(a.shape,a.dtype,Y);for(let et=0;et<m;++et){let rt=Math.max(0,Math.ceil((_-et)/d)),lt=Math.min(p.outHeight,(p.inHeight+_-et)/d);for(let ft=0;ft<g;++ft){let yt=Math.max(0,Math.ceil(($-ft)/f)),kt=Math.min(p.outWidth,(p.inWidth+$-ft)/f);for(let Tt=0;Tt<p.inChannels;++Tt)for(let It=0;It<p.outChannels;++It){let Et=0;for(let _t=0;_t<p.batchSize;++_t)for(let At=rt;At<lt;++At){let Mt=et+At*d-_;for(let Ot=yt;Ot<kt;++Ot){let Lt=ft+Ot*f-$;Et+=y?tt.get(_t,Mt,Lt,Tt)*Q.get(_t,At,Ot,It):tt.get(_t,Tt,Mt,Lt)*Q.get(_t,It,At,Ot)}}b.set(Et,et,ft,Tt,It)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}},DC={kernelName:Xi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=r;ue([s,a],"conv2dBackpropInput");let h=Yt(a.shape),p=Yt(s.shape),d=Hs(c),f=Dn(i,a.shape,o,1,l,u,!1,d),m=new Fn(f.inShape,"float32"),g=m.values,y=e.data.get(s.dataId).values,b=e.data.get(a.dataId).values,[$,_,M]=h,{batchSize:Y,filterHeight:tt,filterWidth:Q,inChannels:et,inHeight:rt,inWidth:lt,outChannels:ft,outHeight:yt,outWidth:kt,strideHeight:Tt,strideWidth:It}=f;d=f.dataFormat;let Et=tt-1-f.padInfo.top,_t=Q-1-f.padInfo.left,At=d==="channelsLast",Mt=m.strides[0],Ot=At?m.strides[1]:m.strides[2],Lt=At?m.strides[2]:1,Pt=At?1:m.strides[1],jt=p[0],Kt=At?p[1]:p[2],Qt=At?p[2]:1,te=At?1:p[1];for(let be=0;be<Y;++be)for(let me=0;me<et;++me)for(let we=0;we<rt;++we){let pe=we-Et,Ie=Math.max(0,Math.ceil(pe/Tt)),ke=Math.min(yt,(tt+pe)/Tt);for(let Te=0;Te<lt;++Te){let Ne=Te-_t,_e=Math.max(0,Math.ceil(Ne/It)),ze=Math.min(kt,(Q+Ne)/It),In=0;for(let tr=Ie;tr<ke;++tr){let dn=tr*Tt-pe;for(let Ye=_e;Ye<ze;++Ye){let zr=jt*be+Kt*tr+Qt*Ye,Yn=$*(tt-1-dn)+_*(Q-1-(Ye*It-Ne))+M*me;for(let Ts=0;Ts<ft;++Ts)In+=y[zr+te*Ts]*b[Yn+Ts]}}g[Mt*be+Ot*we+Lt*Te+Pt*me]=In}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}},OC={kernelName:Yi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;ue([s,a],"conv3d");let c=Ia(s.shape,a.shape,i,l,o),{filterDepth:u,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,$=g.top,_=new Fn(c.outShape,s.dtype),M=e.data.get(s.dataId).values,Y=e.data.get(a.dataId).values,tt=_.values,Q=Yt(s.shape),et=Yt(a.shape);for(let rt=0;rt<c.batchSize;++rt){let lt=rt*Q[0],ft=rt*_.strides[0];for(let yt=0;yt<c.outDepth;++yt){let kt=ft+yt*_.strides[1],Tt=yt*c.strideDepth-y;for(let It=0;It<u;++It){let Et=Tt+It*d;if(Et<0||Et>=c.inDepth)continue;let _t=It*et[0],At=lt+Et*Q[1];for(let Mt=0;Mt<c.outHeight;++Mt){let Ot=kt+Mt*_.strides[2],Lt=Mt*c.strideHeight-$;for(let Pt=0;Pt<h;++Pt){let jt=Lt+Pt*f;if(jt<0||jt>=c.inHeight)continue;let Kt=_t+Pt*et[1],Qt=At+jt*Q[2];for(let te=0;te<c.outWidth;++te){let be=Ot+te*c.outChannels,me=te*c.strideWidth-b;for(let we=0;we<p;++we){let pe=me+we*m;if(pe<0||pe>=c.inWidth)continue;let Ie=Kt+we*et[2],ke=Qt+pe*c.inChannels,Te=Ie;for(let Ne=0;Ne<c.inChannels;++Ne){let _e=M[ke+Ne];for(let ze=0;ze<c.outChannels;++ze)tt[be+ze]+=_e*Y[Te+ze];Te+=c.outChannels}}}}}}}}return e.makeTensorInfo(_.shape,_.dtype,_.values)}},MC={kernelName:nu,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;ue([s,a],"conv3dBackpropFilterV2");let c=Yt(s.shape),u=Yt(a.shape),h=Ia(s.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Fn(h.filterShape,"float32"),$=b.values,[_,M,Y,tt]=b.strides,Q=e.data.get(a.dataId).values,[et,rt,lt,ft]=u,yt=e.data.get(s.dataId).values,[kt,Tt,It,Et]=c,_t=h.padInfo.front,At=h.padInfo.left,Mt=h.padInfo.top;for(let Ot=0;Ot<m;++Ot){let Lt=Math.max(0,Math.ceil((_t-Ot)/p)),Pt=Math.min(h.outDepth,(h.inDepth+_t-Ot)/p),jt=Ot*_;for(let Kt=0;Kt<g;++Kt){let Qt=Math.max(0,Math.ceil((Mt-Kt)/d)),te=Math.min(h.outHeight,(h.inHeight+Mt-Kt)/d),be=Kt*M+jt;for(let me=0;me<y;++me){let we=Math.max(0,Math.ceil((At-me)/f)),pe=Math.min(h.outWidth,(h.inWidth+At-me)/f),Ie=me*Y+be;for(let ke=0;ke<h.inChannels;++ke){let Te=ke*tt+Ie;for(let Ne=0;Ne<h.outChannels;++Ne){let _e=0;for(let ze=0;ze<h.batchSize;++ze){let In=ze*kt,tr=ze*et;for(let dn=Lt;dn<Pt;++dn){let Ye=(Ot+dn*p-_t)*Tt+In,zr=dn*rt+tr;for(let Yn=Qt;Yn<te;++Yn){let Ts=(Kt+Yn*d-Mt)*It+Ye,Cs=Yn*lt+zr;for(let Ua=we;Ua<pe;++Ua){let sa=Ua*ft+Cs;_e+=yt[(me+Ua*f-At)*Et+Ts+ke]*Q[sa+Ne]}}}}$[Te+Ne]=_e}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}},LC={kernelName:Zi,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;ue([s],"conv3dBackpropInputV2");let c=Yt(s.shape),u=Yt(a.shape),h=Ia(l,a.shape,o,1,i),p=new Fn(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=e.data.get(s.dataId).values,[$,_,M,Y]=c,tt=e.data.get(a.dataId).values,[Q,et,rt,lt]=u,{batchSize:ft,filterDepth:yt,filterHeight:kt,filterWidth:Tt,inChannels:It,inDepth:Et,inHeight:_t,inWidth:At,outChannels:Mt,outDepth:Ot,outHeight:Lt,outWidth:Pt,strideDepth:jt,strideHeight:Kt,strideWidth:Qt}=h,te=yt-1-h.padInfo.front,be=kt-1-h.padInfo.top,me=Tt-1-h.padInfo.left;for(let we=0;we<ft;++we)for(let pe=0;pe<It;++pe)for(let Ie=0;Ie<Et;++Ie){let ke=Ie-te,Te=Math.max(0,Math.ceil(ke/jt)),Ne=Math.min(Ot,(yt+ke)/jt);for(let _e=0;_e<_t;++_e){let ze=_e-be,In=Math.max(0,Math.ceil(ze/Kt)),tr=Math.min(Lt,(kt+ze)/Kt);for(let dn=0;dn<At;++dn){let Ye=dn-me,zr=Math.max(0,Math.ceil(Ye/Qt)),Yn=Math.min(Pt,(Tt+Ye)/Qt),Ts=0;for(let Cs=Te;Cs<Ne;++Cs){let Ua=Cs*jt-ke;for(let sa=In;sa<tr;++sa){let Q5=sa*Kt-ze;for(let gp=zr;gp<Yn;++gp){let tO=$*we+_*Cs+M*sa+Y*gp,eO=Q*(yt-1-Ua)+et*(kt-1-Q5)+rt*(Tt-1-(gp*Qt-Ye))+lt*pe;for(let yp=0;yp<Mt;++yp)Ts+=b[tO+yp]*tt[eO+yp]}}}d[f*we+m*Ie+g*_e+y*dn+pe]=Ts}}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}},zC=Ke(hs,n=>Math.cos(n)),PC={kernelName:hs,backendName:"cpu",kernelFunc:zC},BC=Ke(oa,n=>Math.cosh(n)),WC={kernelName:oa,backendName:"cpu",kernelFunc:BC},VC={kernelName:ua,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:c}=r,[u,h,p,d]=s.shape,f=a.shape[0],[m,g]=o,y=Fe([f,m,g,d],"float32"),b=e.data.get(a.dataId).values,$=e.data.get(i.dataId).values,_=e.data.get(s.dataId).values,M=Yt(s.shape),Y=Yt(y.shape);for(let tt=0;tt<f;tt++){let Q=4*tt,et=b[Q],rt=b[Q+1],lt=b[Q+2],ft=b[Q+3],yt=$[tt];if(yt>=u)continue;let kt=m>1?(lt-et)*(h-1)/(m-1):0,Tt=g>1?(ft-rt)*(p-1)/(g-1):0;for(let It=0;It<m;It++){let Et=m>1?et*(h-1)+It*kt:.5*(et+lt)*(h-1);if(Et<0||Et>h-1)for(let _t=0;_t<g;_t++)for(let At=0;At<d;At++){let Mt=At+_t*Y[2]+It*Y[1]+tt*Y[0];y.values[Mt]=c}else if(l==="bilinear"){let _t=Math.floor(Et),At=Math.ceil(Et),Mt=Et-_t;for(let Ot=0;Ot<g;Ot++){let Lt=g>1?rt*(p-1)+Ot*Tt:.5*(rt+ft)*(p-1);if(Lt<0||Lt>p-1){for(let Qt=0;Qt<d;Qt++){let te=Qt+Ot*Y[2]+It*Y[1]+tt*Y[0];y.values[te]=c}continue}let Pt=Math.floor(Lt),jt=Math.ceil(Lt),Kt=Lt-Pt;for(let Qt=0;Qt<d;Qt++){let te=Qt+Pt*M[2]+_t*M[1]+yt*M[0],be=_[te];te=Qt+jt*M[2]+_t*M[1]+yt*M[0];let me=_[te];te=Qt+Pt*M[2]+At*M[1]+yt*M[0];let we=_[te];te=Qt+jt*M[2]+At*M[1]+yt*M[0];let pe=be+(me-be)*Kt,Ie=we+(_[te]-we)*Kt;te=Qt+Ot*Y[2]+It*Y[1]+tt*Y[0],y.values[te]=pe+(Ie-pe)*Mt}}}else for(let _t=0;_t<g;++_t){let At=g>1?rt*(p-1)+_t*Tt:.5*(rt+ft)*(p-1);if(At<0||At>p-1){for(let Lt=0;Lt<d;Lt++){let Pt=Lt+_t*Y[2]+It*Y[1]+tt*Y[0];y.values[Pt]=c}continue}let Mt=Math.round(At),Ot=Math.round(Et);for(let Lt=0;Lt<d;Lt++){let Pt=Lt+Mt*M[2]+Ot*M[1]+yt*M[0],jt=Lt+_t*Y[2]+It*Y[1]+tt*Y[0];y.values[jt]=_[Pt]}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}},UC={kernelName:$s,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;ue(s,"cumprod");let l=mn([a],s.shape.length),c=s;l!=null&&(c=Nr({inputs:{x:s},backend:e,attrs:{perm:l}}));let u=vn(1,s.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let h=Er(c.dtype,"int32"),p=en(St(c.shape),h),d=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<d.length;y+=f)for(let b=0;b<f;b++){let $=m(y,b);if(b===0)p[$]=i?1:d[$];else{let _=m(y,b-1);p[$]=i?d[_]*p[_]:d[$]*p[_]}}let g=e.makeTensorInfo(c.shape,h,p);if(l!=null){let y=Nr({inputs:{x:g},backend:e,attrs:{perm:Ta(l)}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),y}return g}},GC={kernelName:Ji,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;ue(s,"cumsum");let l=mn([a],s.shape.length),c=s;l!=null&&(c=Nr({inputs:{x:s},backend:e,attrs:{perm:l}}));let u=vn(1,s.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let h=Er(c.dtype,"int32"),p=nn(St(c.shape),h),d=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<d.length;y+=f)for(let b=0;b<f;b++){let $=m(y,b);if(b===0)p[$]=i?0:d[$];else{let _=m(y,b-1);p[$]=i?d[_]+p[_]:d[$]+p[_]}}let g=e.makeTensorInfo(c.shape,h,p);if(l!=null){let y=Nr({inputs:{x:g},backend:e,attrs:{perm:Ta(l)}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),y}return g}},HC={kernelName:Qa,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(s.shape.length===1){let l=Pm(e.data.get(s.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,l)}if(s.shape.length===2){let l=gv(e.bufferSync(s),e.bufferSync(a),i,o);return e.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},jC={kernelName:ru,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockSize:a,dataFormat:i}=r;z(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=s.shape[0],l=s.shape[1],c=s.shape[2],u=s.shape[3],h=l*a,p=c*a,d=u/(a*a),f=e.data.get(s.dataId).values,m=new Float32Array(o*h*p*d),g=0;for(let y=0;y<o;++y)for(let b=0;b<h;++b){let $=Math.floor(b/a),_=b%a;for(let M=0;M<p;++M){let Y=Math.floor(M/a),tt=(_*a+M%a)*d;for(let Q=0;Q<d;++Q){let et=Q+tt+u*(Y+c*($+l*y));m[g++]=f[et]}}}return e.makeTensorInfo([o,h,p,d],s.dtype,m)}};function vv(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=r;ue([s,a],"depthwiseConv2DNative");let u=Yt(s.shape),h=Yt(a.shape),p=l;p==null&&(p=[1,1]),z(Hn(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let d=Dn(s.shape,a.shape,i,p,o,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,$=b.left,_=b.top,M=d.outChannels/d.inChannels,Y=new Fn(d.outShape,s.dtype),tt=e.data.get(s.dataId).values,Q=e.data.get(a.dataId).values,et=Y.values;for(let rt=0;rt<d.batchSize;++rt){let lt=rt*u[0],ft=rt*Y.strides[0];for(let yt=0;yt<d.outHeight;++yt){let kt=ft+yt*Y.strides[1],Tt=yt*d.strideHeight-_;for(let It=0;It<f;++It){let Et=Tt+It*g;if(Et<0||Et>=d.inHeight)continue;let _t=It*h[0],At=lt+Et*u[1];for(let Mt=0;Mt<d.outWidth;++Mt){let Ot=kt+Mt*Y.strides[2],Lt=Mt*d.strideWidth-$;for(let Pt=0;Pt<m;++Pt){let jt=Lt+Pt*y;if(jt<0||jt>=d.inWidth)continue;let Kt=_t+Pt*h[1],Qt=At+jt*d.inChannels,te=Ot,be=Kt;for(let me=0;me<d.inChannels;++me){let we=tt[Qt+me];for(let pe=0;pe<M;++pe)et[te+pe]+=we*Q[be+pe];te+=M,be+=M}}}}}}return e.makeTensorInfo(Y.shape,Y.dtype,Y.values)}let qC={kernelName:Qi,backendName:"cpu",kernelFunc:vv},KC={kernelName:ti,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=r;ue([s,a],"depthwiseConv2dNativeBackpropFilter");let h=Dn(s.shape,u,i,o,l,c,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Fn(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,$=h.outChannels/h.inChannels,_=e.data.get(s.dataId).values,M=new Fn(s.shape,s.dtype,_),Y=e.data.get(a.dataId).values,tt=new Fn(a.shape,a.dtype,Y);for(let Q=0;Q<f;++Q){let et=Math.max(0,Math.ceil((b-Q)/p)),rt=Math.min(h.outHeight,(h.inHeight+b-Q)/p);for(let lt=0;lt<m;++lt){let ft=Math.max(0,Math.ceil((y-lt)/d)),yt=Math.min(h.outWidth,(h.inWidth+y-lt)/d);for(let kt=0;kt<h.outChannels;++kt){let Tt=Math.trunc(kt/$),It=kt%$,Et=0;for(let _t=0;_t<h.batchSize;++_t)for(let At=et;At<rt;++At){let Mt=Q+At*p-b;for(let Ot=ft;Ot<yt;++Ot){let Lt=lt+Ot*d-y;Et+=M.get(_t,Mt,Lt,Tt)*tt.get(_t,At,Ot,kt)}}g.set(Et,Q,lt,Tt,It)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}},XC={kernelName:su,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=r;ue([s,a],"depthwiseConv2DNativeBackpropInput");let h=Yt(s.shape),p=Yt(a.shape),d=Dn(u,a.shape,i,o,l,c,!0),f=new Fn(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,$=e.data.get(s.dataId).values,[_,M,Y]=h,tt=e.data.get(a.dataId).values,[Q,et,rt]=p,{batchSize:lt,filterHeight:ft,filterWidth:yt,inChannels:kt,inHeight:Tt,inWidth:It,outChannels:Et,outHeight:_t,outWidth:At,strideHeight:Mt,strideWidth:Ot}=d,Lt=ft-1-d.padInfo.top,Pt=yt-1-d.padInfo.left,jt=Et/kt;for(let Kt=0;Kt<lt;++Kt)for(let Qt=0;Qt<kt;++Qt)for(let te=0;te<Tt;++te){let be=te-Lt,me=Math.max(0,Math.ceil(be/Mt)),we=Math.min(_t,(ft+be)/Mt);for(let pe=0;pe<It;++pe){let Ie=pe-Pt,ke=Math.max(0,Math.ceil(Ie/Ot)),Te=Math.min(At,(yt+Ie)/Ot),Ne=0;for(let _e=me;_e<we;++_e){let ze=_e*Mt-be;for(let In=ke;In<Te;++In){let tr=_*Kt+M*_e+Y*In,dn=Q*(ft-1-ze)+et*(yt-1-(In*Ot-Ie))+rt*Qt;for(let Ye=0;Ye<jt;++Ye)Ne+=$[tr+(Qt*jt+Ye)]*tt[dn+Ye]}}m[g*Kt+y*te+b*pe+Qt]=Ne}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}},YC={kernelName:au,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{x:r}=t,s=St(r.shape),a=e.data.get(r.dataId).values,i=Fe([s,s],r.dtype),o=i.values;for(let c=0;c<a.length;c++)o[c*s+c]=a[c];let l=[...r.shape,...r.shape];return e.makeTensorInfo(l,i.dtype,i.values)}},ZC={kernelName:J,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{x:r,filter:s}=n,{strides:a,pad:i,dilations:o}=e,l=t,c=l.data.get(r.dataId).values,u=r.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:$,strideHeight:_,strideWidth:M,filterHeight:Y,filterWidth:tt,dilationHeight:Q,dilationWidth:et,outShape:rt}=Pu(r.shape,s.shape,a,i,"NHWC",o),lt=St(rt),ft=rt.length,yt=Xe(r.dtype,lt);for(let kt=0;kt<d;++kt)for(let Tt=0;Tt<y;++Tt){let It=Tt*_-$.top;for(let Et=0;Et<b;++Et){let _t=Et*M-$.left;for(let At=0;At<g;++At){let Mt=Number.MIN_SAFE_INTEGER;for(let Ot=0;Ot<Y;++Ot){let Lt=It+Ot*Q;if(Lt>=0&&Lt<f)for(let Pt=0;Pt<tt;++Pt){let jt=_t+Pt*et;if(jt>=0&&jt<m){let Kt=Pr([kt,Lt,jt,At],u,Yt(r.shape)),Qt=Pr([Ot,Pt,At],p,Yt(s.shape)),te=c[Kt]+h[Qt];te>Mt&&(Mt=te)}}}yt[Pr([kt,Tt,Et,At],ft,Yt(rt))]=Mt}}}return{dataId:l.write(ri(yt,r.dtype),rt,r.dtype),shape:rt,dtype:r.dtype}}},JC={kernelName:ut,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{x:r,filter:s,dy:a}=n,{strides:i,pad:o,dilations:l}=e,c=t,u=tn(r.shape,c.data.get(r.dataId).values),h=tn(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:$,strideWidth:_,filterHeight:M,filterWidth:Y,dilationHeight:tt,dilationWidth:Q,outShape:et}=Pu(r.shape,s.shape,i,o,"NHWC",l);z(a.rank===et.length,()=>`Error in ${ut}, dy must have the same rank as output ${et.length}, but got ${a.rank}`);let rt=tn(et,c.data.get(a.dataId).values),lt=$r(s.shape,s.dtype);for(let ft=0;ft<p;++ft)for(let yt=0;yt<g;++yt){let kt=yt*$-b.top;for(let Tt=0;Tt<y;++Tt){let It=Tt*_-b.left;for(let Et=0;Et<m;++Et){let _t=Number.MIN_SAFE_INTEGER,At=0,Mt=0;for(let Ot=0;Ot<M;++Ot){let Lt=kt+Ot*tt;if(Lt>=0&&Lt<d)for(let Pt=0;Pt<Y;++Pt){let jt=It+Pt*Q;if(jt>=0&&jt<f){let Kt=u[ft][Lt][jt][Et]+h[Ot][Pt][Et];Kt>_t&&(_t=Kt,At=Ot,Mt=Pt)}}}lt[At][Mt][Et]+=rt[ft][yt][Tt][Et]}}}return{dataId:c.write(ri(lt,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},QC={kernelName:it,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{x:r,filter:s,dy:a}=n,{strides:i,pad:o,dilations:l}=e,c=t,u=tn(r.shape,c.data.get(r.dataId).values),h=tn(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:$,strideWidth:_,filterHeight:M,filterWidth:Y,dilationHeight:tt,dilationWidth:Q,outShape:et}=Pu(r.shape,s.shape,i,o,"NHWC",l);z(a.rank===et.length,()=>`Error in ${it}, dy must have the same rank as output ${et.length}, but got ${a.rank}`);let rt=tn(et,c.data.get(a.dataId).values),lt=$r(r.shape,r.dtype);for(let ft=0;ft<p;++ft)for(let yt=0;yt<g;++yt){let kt=yt*$-b.top;for(let Tt=0;Tt<y;++Tt){let It=Tt*_-b.left;for(let Et=0;Et<m;++Et){let _t=Number.MIN_SAFE_INTEGER,At=kt<0?0:kt,Mt=It<0?0:It;for(let Ot=0;Ot<M;++Ot){let Lt=kt+Ot*tt;if(Lt>=0&&Lt<d)for(let Pt=0;Pt<Y;++Pt){let jt=It+Pt*Q;if(jt>=0&&jt<f){let Kt=u[ft][Lt][jt][Et]+h[Ot][Pt][Et];Kt>_t&&(_t=Kt,At=Lt,Mt=jt)}}}lt[ft][At][Mt][Et]+=rt[ft][yt][Tt][Et]}}}return{dataId:c.write(ri(lt,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Bm=Nn((n,t)=>n*t),t$=Mm((n,t,e,r)=>({real:n*e-t*r,imag:n*r+t*e})),Uh=Ln(gu,Bm,t$),e$={kernelName:gu,backendName:"cpu",kernelFunc:Uh};function vl(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o;ue(s,"sum"),o=s.dtype==="bool"?Pa({inputs:{x:s},backend:e,attrs:{dtype:"int32"}}):zs({inputs:{x:s},backend:e});let l=o.shape.length,c=ge(a,o.shape),u=mn(c,l),h=c,p=o;u!=null&&(p=Nr({inputs:{x:o},backend:e,attrs:{perm:u}}),h=vn(h.length,l)),jn("sum",h,p.shape.length);let[d,f]=On(p.shape,h),m=Vh(e,d,Er(p.dtype,"int32")),g=St(f),y=e.data.get(m.dataId).values,b=e.data.get(p.dataId).values;for(let $=0;$<y.length;++$){let _=$*g,M=0;for(let Y=0;Y<g;++Y)M+=b[_+Y];y[$]=M}if(i){let $=m;m=sn({inputs:{x:m},backend:e,attrs:{shape:xn(m.shape,c)}}),e.disposeIntermediateTensorInfo($)}return e.disposeIntermediateTensorInfo(o),u!=null&&e.disposeIntermediateTensorInfo(p),m}let n$={kernelName:bc,backendName:"cpu",kernelFunc:vl},r$={kernelName:xt,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Rf(s,a.length);Df(i.length,l,a);let{path:c,steps:u}=Of(o,l),h=u.length,p=null,d=i.length,f=[];for(let m=0;m<h;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:b}=Ff(d,l[g]),$;Mf(y)?$=a[g]:($=Nr({inputs:{x:a[g]},backend:e,attrs:{perm:y}}),f.push($));let _=$.shape.slice();for(let M=0;M<b.length;++M)_.splice(b[M],0,1);se($.shape,_)||($=sn({inputs:{x:$},backend:e,attrs:{shape:_}}),f.push($)),p===null?p=$:(p=Uh({inputs:{a:$,b:p},backend:e}),f.push(p))}m<h-1&&(c[m]>=0&&(p=vl({inputs:{x:p},backend:e,attrs:{axis:c[m]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(let m of f)m!==p&&e.disposeIntermediateTensorInfo(m);return p}},s$={kernelName:Dt,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{dy:r,y:s}=t;ue([r,s],"eluGrad");let a=new Float32Array(St(s.shape)),i=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let c=i[l];a[l]=c>=1?o[l]:o[l]*(c+1)}return e.makeTensorInfo(s.shape,"float32",a)}},wv=Nn((n,t)=>n===t?1:0),kv=Ln(Gt,wv,null,"bool"),a$={kernelName:Gt,backendName:"cpu",kernelFunc:kv},i$=Nf,o$=Sf,u$=Tf,l$=Cf,c$=$f,h$=Ef,p$=Ke(Vt,n=>{let t=Math.sign(n),e=Math.abs(n),r=1/(1+i$*e);return t*(1-((((h$*r+c$)*r+l$)*r+u$)*r+o$)*r*Math.exp(-e*e))}),d$={kernelName:Vt,backendName:"cpu",kernelFunc:p$},Iv=za(n=>Math.exp(n)),Nv=To(qt,Iv,"float32"),f$={kernelName:qt,backendName:"cpu",kernelFunc:Nv};function Gh(n){let{inputs:t,backend:e,attrs:r}=n,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(z(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),sn({inputs:{x:s},backend:e,attrs:{shape:o}})}let m$={kernelName:ae,backendName:"cpu",kernelFunc:Gh},Sv=za(n=>Math.expm1(n)),g$=To(de,Sv),y$={kernelName:de,backendName:"cpu",kernelFunc:g$},b$=Nn((n,t)=>n/t),Wm=Ln(vt,b$),Vm={kernelName:vt,backendName:"cpu",kernelFunc:Wm},Tv=Nn((n,t)=>n-t),x$=Mm((n,t,e,r)=>({real:n-e,imag:t-r})),Um=Ln(Au,Tv,x$),v$={kernelName:Au,backendName:"cpu",kernelFunc:Um};function Cv(n,t,e){let r=n.shape,s=r[0],a=r[1],i=e.data.get(n.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[s,a],u=St(c),h=Ae("float32",u),p=Ae("float32",u);for(let g=0;g<s;g++){let y=Ii({inputs:{x:o},backend:e,attrs:{begin:[g,0],size:[1,a]}}),b=Ii({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,a]}}),$=Mr({inputs:{real:y,imag:b},backend:e}),{real:_,imag:M}=w$($,t,e),Y=Xs(_,M);for(let tt=0;tt<a;tt++){let Q=_f(Y,tt);h[g*a+tt]=Q.real,p[g*a+tt]=Q.imag}e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo($)}let d=e.makeTensorInfo(c,"float32",h),f=e.makeTensorInfo(c,"float32",p),m=Mr({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}function w$(n,t,e){let r=St(n.shape),s=e.data.get(n.dataId),a=e.data.get(s.complexTensorInfos.real.dataId).values,i=e.data.get(s.complexTensorInfos.imag.dataId).values;if(((o=r)&o-1)==0){let l=Gm(a,i,r,t,e),c=[n.shape[0],n.shape[1]];if(t){let u=e.makeTensorInfo(c,"float32",l.real),h=e.makeTensorInfo(c,"float32",l.imag),p=e.makeTensorInfo([],"float32",da(r,"float32")),d=zs({inputs:{x:p},backend:e}),f=Vm.kernelFunc({inputs:{a:u,b:p},backend:e}),m=Vm.kernelFunc({inputs:{a:h,b:d},backend:e}),g=e.data.get(f.dataId).values,y=e.data.get(m.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),{real:g,imag:y}}return l}{let l=function(c,u,h){let p=new Float32Array(2*u);for(let d=0;d<u;d++){let f=0,m=0;for(let g=0;g<u;g++){let y=U1(d*g,u,h),b=_f(c,g);f+=b.real*y.real-b.imag*y.imag,m+=b.real*y.imag+b.imag*y.real}h&&(f/=u,m/=u),W1(p,f,m,d)}return p}(Xs(a,i),r,t);return z1(l)}var o}function Gm(n,t,e,r,s){if(e===1)return{real:n,imag:t};let a=Xs(n,t),i=e/2,o=P1(a),l=o.real,c=o.imag,u=[l.length],h=s.makeTensorInfo(u,"float32",l),p=s.makeTensorInfo(u,"float32",c),d=Mr({inputs:{real:h,imag:p},backend:s}),f=B1(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),$=s.makeTensorInfo(y,"float32",g),_=Mr({inputs:{real:b,imag:$},backend:s}),M=Gm(l,c,i,r,s),Y=M.real,tt=M.imag,Q=[Y.length],et=s.makeTensorInfo(Q,"float32",Y),rt=s.makeTensorInfo(Q,"float32",tt),lt=Mr({inputs:{real:et,imag:rt},backend:s}),ft=Gm(m,g,i,r,s),yt=ft.real,kt=ft.imag,Tt=[yt.length],It=s.makeTensorInfo(Tt,"float32",yt),Et=s.makeTensorInfo(Tt,"float32",kt),_t=Mr({inputs:{real:It,imag:Et},backend:s}),At=V1(e,r),Mt=[At.real.length],Ot=s.makeTensorInfo(Mt,"float32",At.real),Lt=s.makeTensorInfo(Mt,"float32",At.imag),Pt=Mr({inputs:{real:Ot,imag:Lt},backend:s}),jt=Uh({inputs:{a:Pt,b:_t},backend:s}),Kt=Co({inputs:{a:lt,b:jt},backend:s}),Qt=Um({inputs:{a:lt,b:jt},backend:s}),te=ki({inputs:{input:Kt},backend:s}),be=ki({inputs:{input:Qt},backend:s}),me=$o({inputs:{input:Kt},backend:s}),we=$o({inputs:{input:Qt},backend:s}),pe=Eo({inputs:[te,be],backend:s,attrs:{axis:0}}),Ie=Eo({inputs:[me,we],backend:s,attrs:{axis:0}}),ke=s.data.get(pe.dataId).values,Te=s.data.get(Ie.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(et),s.disposeIntermediateTensorInfo(rt),s.disposeIntermediateTensorInfo(lt),s.disposeIntermediateTensorInfo(It),s.disposeIntermediateTensorInfo(Et),s.disposeIntermediateTensorInfo(_t),s.disposeIntermediateTensorInfo(Ot),s.disposeIntermediateTensorInfo(Lt),s.disposeIntermediateTensorInfo(Pt),s.disposeIntermediateTensorInfo(jt),s.disposeIntermediateTensorInfo(Kt),s.disposeIntermediateTensorInfo(Qt),s.disposeIntermediateTensorInfo(te),s.disposeIntermediateTensorInfo(me),s.disposeIntermediateTensorInfo(be),s.disposeIntermediateTensorInfo(we),s.disposeIntermediateTensorInfo(pe),s.disposeIntermediateTensorInfo(Ie),{real:ke,imag:Te}}let k$={kernelName:Re,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{input:r}=t,s=St(r.shape),a=r.shape[r.shape.length-1],i=sn({inputs:{x:r},backend:e,attrs:{shape:[s/a,a]}}),o=Cv(i,!1,e),l=sn({inputs:{x:o},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),l}};function Hm(n){let{backend:t,attrs:e}=n,{shape:r,value:s,dtype:a}=e,i=a||Un(s),o=Xe(i,St(r));return function(l,c,u){l.fill(c)}(o,s),t.makeTensorInfo(r,i,o)}let I$={kernelName:Ue,backendName:"cpu",kernelFunc:Hm};let N$={kernelName:je,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{image:r}=n,s=e,a=Ae(r.dtype,St(r.shape)),[i,o,l,c]=r.shape,u=s.data.get(r.dataId).values;for(let h=0;h<i;h++){let p=h*l*o*c;for(let d=0;d<o;d++){let f=d*(l*c);for(let m=0;m<l;m++){let g=m*c;for(let y=0;y<c;y++){let b=Math.round(l-m-1),$=p+f+g+y,_=u[$];b>=0&&b<l&&(_=u[p+f+b*c+y]),a[$]=_}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},$v=za(n=>Math.floor(n)),S$=To(on,$v),T$={kernelName:on,backendName:"cpu",kernelFunc:S$},C$=Nn((n,t)=>Math.floor(n/t)),$$=Ln(br,C$,null,"int32"),E$={kernelName:br,backendName:"cpu",kernelFunc:$$},_$={kernelName:Tc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=xv({inputs:{x:s,filter:a},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:p}});if(i){let g=m;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=sn({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});m=Co({inputs:{a:m,b:y},backend:e}),e.disposeIntermediateTensorInfo(y)}else m=Co({inputs:{a:m,b:i},backend:e});e.disposeIntermediateTensorInfo(g)}if(d){let g=m;if(u==="NCHW"&&d==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=sn({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});m=Wh(e,m,d,y,f),e.disposeIntermediateTensorInfo(y)}else m=Wh(e,m,d,o,f);e.disposeIntermediateTensorInfo(g)}return m}},A$={kernelName:Cc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=vv({inputs:{x:s,filter:a},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:p}});if(i){let g=m;m=Co({inputs:{a:m,b:i},backend:e}),e.disposeIntermediateTensorInfo(g)}if(d){let g=m;m=Wh(e,m,d,o,f),e.disposeIntermediateTensorInfo(g)}return m}};function Ev(n,t,e,r,s,a,i,o,l){let c=Fe([r,a],e);for(let u=0;u<r;u++){let h=[],p=0;for(let d=0;d<s;d++){let f=n[u*s+d];p+=f*i[d],h.push(f)}if(p<0||p>=l/a)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let d=0;d<a;d++)c.values[u*a+d]=t.get(...t.indexToLoc(p*a+d))}return c}let R$={kernelName:iu,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{params:r,indices:s}=t,a=St(r.shape),i=s.shape,o=i[i.length-1],[l,c,u,h]=If(r,s);if(c===0)return e.makeTensorInfo(l,r.dtype,[]);let p=Ev(e.data.get(s.dataId).values,e.bufferSync(r),r.dtype,c,o,u,h,r.shape,a);return e.makeTensorInfo(l,r.dtype,p.values)}};function _v(n,t,e){let r=Fe(e,n.dtype);for(let s=0;s<r.size;++s){let a=r.indexToLoc(s).slice(),i=a[0],o=a[2],l=t.locToIndex([i,o]);a[2]=t.values[l];let c=n.locToIndex(a);0<=c&&c<n.values.length&&(r.values[s]=n.values[c])}return r}let F$={kernelName:ca,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;ue([s,a],"gatherV2");let l=ge(i,s.shape)[0],c=e.data.get(a.dataId).values,u=s.shape[l];for(let $=0;$<c.length;++$){let _=c[$];z(_<=u-1&&_>=0,()=>`GatherV2: the index value ${_} is not in [0, ${u-1}]`)}let h=o;o==null&&(h=0);let p=St(a.shape),d=zf(s,a,l,h),f=sn({inputs:{x:s},backend:e,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=sn({inputs:{x:a},backend:e,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=e.bufferSync(m),b=_v(e.bufferSync(f),y,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.makeTensorInfo(d.outputShape,b.dtype,b.values)}},Av=Nn((n,t)=>n>t?1:0),D$=Ln(to,Av,null,"bool"),O$={kernelName:to,backendName:"cpu",kernelFunc:D$},Rv=Nn((n,t)=>n>=t?1:0),M$=Ln(ha,Rv,null,"bool"),L$={kernelName:ha,backendName:"cpu",kernelFunc:M$},z$={kernelName:xp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{input:r}=t,s=St(r.shape),a=r.shape[r.shape.length-1],i=sn({inputs:{x:r},backend:e,attrs:{shape:[s/a,a]}}),o=Cv(i,!0,e),l=sn({inputs:{x:o},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),l}},P$=Ke(uu,n=>Number.isFinite(n)?1:0,"bool"),B$={kernelName:uu,backendName:"cpu",kernelFunc:P$},W$=Ke(lu,n=>Math.abs(n)===1/0?1:0,"bool"),V$={kernelName:lu,backendName:"cpu",kernelFunc:W$},U$=Ke(cu,n=>Number.isNaN(n)?1:0,"bool"),G$={kernelName:cu,backendName:"cpu",kernelFunc:U$},Fv=Nn((n,t)=>n<t?1:0),H$=Ln(jl,Fv,null,"bool"),j$={kernelName:jl,backendName:"cpu",kernelFunc:H$},Dv=Nn((n,t)=>n<=t?1:0),q$=Ln(ql,Dv,null,"bool"),K$={kernelName:ql,backendName:"cpu",kernelFunc:q$};function Ov(n,t,e){let r=(t-n)/(e-1),s=nn(e,"float32");s[0]=n;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}let X$={kernelName:wp,backendName:"cpu",kernelFunc:function(n){let{backend:t,attrs:e}=n,{start:r,stop:s,num:a}=e,i=Ov(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},Mv=za(n=>Math.log(n)),Y$=To(hu,Mv),Z$={kernelName:hu,backendName:"cpu",kernelFunc:Y$},J$=Ke(pu,n=>Math.log1p(n)),Q$={kernelName:pu,backendName:"cpu",kernelFunc:J$},tE=Nn((n,t)=>n&&t),eE=Ln(Kl,tE,null,"bool"),nE={kernelName:Kl,backendName:"cpu",kernelFunc:eE},rE=Ke(Xl,n=>n?0:1,"bool"),sE={kernelName:Xl,backendName:"cpu",kernelFunc:rE},aE=Nn((n,t)=>n||t),iE=Ln(Yl,aE,null,"bool"),oE={kernelName:Yl,backendName:"cpu",kernelFunc:iE},uE={kernelName:Zl,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;ue(s,"LRN");let c=s.shape[3],u=c-1,h=e.data.get(s.dataId).values,p=St(s.shape),d=new Float32Array(p);function f(m){let g=m%c,y=m-g+Math.max(0,g-a),b=m-g+Math.min(g+a,u),$=0;for(;y<=b;y++){let _=h[y];$+=_*_}return $}for(let m=0;m<p;m++){let g=f(m),y=h[m]*Math.pow(i+o*g,-l);d[m]=y}return e.makeTensorInfo(s.shape,s.dtype,d)}},lE={kernelName:kp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:c,beta:u}=r;ue(i,"LRNGrad");let h=St(i.shape),p=i.shape[3],d=e.data.get(i.dataId).values,f=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){let $=b%p,_=b-$+Math.max(0,$-o),M=b-$+Math.min(p,$+o+1),Y=0;for(let tt=_;tt<M;tt++)Y+=Math.pow(f[tt],2);Y=c*Y+l;for(let tt=_;tt<M;tt++){let Q=-2*c*u*f[tt]*m[b]/Y;b===tt&&(Q+=Math.pow(Y,-u)),Q*=d[b],g[tt]+=Q}}return e.makeTensorInfo(i.shape,s.dtype,g)}};function Lv(n,t,e,r){let s=Ae(r,St(e));for(let a=0;a<s.length;++a){let i=a*t,o=n[i];for(let l=0;l<t;++l){let c=n[i+l];(Number.isNaN(c)||c>o)&&(o=c)}s[a]=o}return s}function zv(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=e,l=s.shape,c=l.length,u=ge(a,l),h=u,p=mn(h,c),d=o.data.get(s.dataId).values;if(p!=null){let $=new Array(c);for(let _=0;_<$.length;_++)$[_]=l[p[_]];d=Lm(d,l,s.dtype,p,$),h=vn(h.length,c),l=$}ue(s,"max"),jn("max",h,c);let[f,m]=On(l,h),g=Lv(d,St(m),f,s.dtype),y=o.write(g,f,s.dtype),b=f;return i&&(b=xn(f,u)),{dataId:y,shape:b,dtype:s.dtype}}let cE={kernelName:Jl,backendName:"cpu",kernelFunc:zv},Pv=Nn((n,t)=>Math.max(n,t)),hE=Ln(du,Pv),pE={kernelName:du,backendName:"cpu",kernelFunc:hE},dE={kernelName:Ql,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t;ue(s,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;z(Hn(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let c=Jr(s.shape,a,i,1,o,l),u;if(c.filterWidth===1&&c.filterHeight===1&&se(c.inShape,c.outShape))u=zs({inputs:{x:s},backend:e});else{let h=e.data.get(s.dataId).values,p=Yt(s.shape),d=zm(h,s.shape,s.dtype,p,c,"max");u=e.makeTensorInfo(c.outShape,s.dtype,d.values)}return u}},fE={kernelName:tc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=r;ue(s,"maxPool3d");let u=Gs(s.shape,a,i,1,o,l,c),h=fv(e.data.get(s.dataId).values,s.shape,s.dtype,Yt(s.shape),u,"max");return e.makeTensorInfo(h.shape,"float32",h.values)}},mE={kernelName:Np,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=r;ue([s,a],"maxPool3DGrad");let u=Gs(a.shape,i,o,1,l,c),h=function(rt,lt){let ft=Fe(lt.outShape,"int32"),yt=lt.strideDepth,kt=lt.strideHeight,Tt=lt.strideWidth,It=lt.dilationDepth,Et=lt.dilationHeight,_t=lt.dilationWidth,At=lt.effectiveFilterDepth,Mt=lt.effectiveFilterHeight,Ot=lt.effectiveFilterWidth,Lt=lt.padInfo.front,Pt=lt.padInfo.top,jt=lt.padInfo.left;for(let Kt=0;Kt<lt.batchSize;++Kt)for(let Qt=0;Qt<lt.inChannels;++Qt)for(let te=0;te<lt.outDepth;++te){let be=te*yt-Lt,me=be;for(;me<0;)me+=It;let we=Math.min(lt.inDepth,At+be);for(let pe=0;pe<lt.outHeight;++pe){let Ie=pe*kt-Pt,ke=Ie;for(;ke<0;)ke+=Et;let Te=Math.min(lt.inHeight,Mt+Ie);for(let Ne=0;Ne<lt.outWidth;++Ne){let _e=Ne*Tt-jt,ze=_e;for(;ze<0;)ze+=_t;let In=Math.min(lt.inWidth,Ot+_e),tr=Number.NEGATIVE_INFINITY,dn=-1;for(let Ye=me;Ye<we;Ye+=It){let zr=Ye-be;for(let Yn=ke;Yn<Te;Yn+=Et){let Ts=Yn-Ie;for(let Cs=ze;Cs<In;Cs+=_t){let Ua=Cs-_e,sa=rt.get(Kt,Ye,Yn,Cs,Qt);sa>=tr&&(tr=sa,dn=zr*Mt*Ot+Ts*Mt+Ua)}}}ft.set(dn,Kt,te,pe,Ne,Qt)}}}return ft}(e.bufferSync(a),u),p=u.strideDepth,d=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,$=u.effectiveFilterHeight,_=u.effectiveFilterWidth,M=b-1-u.padInfo.front,Y=_-1-u.padInfo.left,tt=$-1-u.padInfo.top,Q=Fe(a.shape,"float32"),et=e.bufferSync(s);for(let rt=0;rt<u.batchSize;++rt)for(let lt=0;lt<u.inChannels;++lt)for(let ft=0;ft<u.inDepth;++ft)for(let yt=0;yt<u.inHeight;++yt)for(let kt=0;kt<u.inWidth;++kt){let Tt=ft-M,It=yt-tt,Et=kt-Y,_t=0;for(let At=0;At<b;At+=m){let Mt=(Tt+At)/p;if(!(Mt<0||Mt>=u.outDepth||Math.floor(Mt)!==Mt))for(let Ot=0;Ot<$;Ot+=g){let Lt=(It+Ot)/d;if(!(Lt<0||Lt>=u.outHeight||Math.floor(Lt)!==Lt))for(let Pt=0;Pt<_;Pt+=y){let jt=(Et+Pt)/f;if(jt<0||jt>=u.outWidth||Math.floor(jt)!==jt)continue;let Kt=b*$*_-1-h.get(rt,Mt,Lt,jt,lt)===At*$*_+Ot*_+Pt?1:0;Kt!==0&&(_t+=et.get(rt,Mt,Lt,jt,lt)*Kt)}}}Q.set(_t,rt,ft,yt,kt,lt)}return e.makeTensorInfo(Q.shape,Q.dtype,Q.values)}},gE={kernelName:Ip,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a,output:i}=t,o=a;ue([a,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=r,p=Jr(o.shape,l,c,1,u,h),d=e.data.get(o.dataId).values,f=Fe(p.outShape,o.dtype,dv(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,$=p.effectiveFilterHeight,_=p.effectiveFilterWidth,M=_-1-p.padInfo.left,Y=$-1-p.padInfo.top,tt=Fe(o.shape,"float32"),Q=e.data.get(s.dataId).values,et=Fe(s.shape,"float32",Q);for(let rt=0;rt<p.batchSize;++rt)for(let lt=0;lt<p.inChannels;++lt)for(let ft=0;ft<p.inHeight;++ft)for(let yt=0;yt<p.inWidth;++yt){let kt=ft-Y,Tt=yt-M,It=0;for(let Et=0;Et<$;Et+=y){let _t=(kt+Et)/m;if(!(_t<0||_t>=p.outHeight||Math.floor(_t)!==_t))for(let At=0;At<_;At+=b){let Mt=(Tt+At)/g;if(Mt<0||Mt>=p.outWidth||Math.floor(Mt)!==Mt)continue;let Ot=$*_-1-f.get(rt,_t,Mt,lt)===Et*_+At?1:0;Ot!==0&&(It+=et.get(rt,_t,Mt,lt)*Ot)}}tt.set(It,rt,ft,yt,lt)}return e.makeTensorInfo(tt.shape,tt.dtype,tt.values)}};let yE={kernelName:Sp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=e;ue(r,"MaxPoolWithArgmax");let c=l.data.get(r.dataId).values,u=Jr(r.shape,s,a,[1,1],i),[h,p]=function(m,g,y,b,$){let _=zm(m,0,y,Yt(g),$,"max"),M=dv(m,g,y,$,!0,b);return[_.values,M.values]}(c,r.shape,r.dtype,o,u),d=l.write(h,u.outShape,r.dtype),f=l.write(p,u.outShape,r.dtype);return[{dataId:d,shape:u.outShape,dtype:r.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}},bE={kernelName:ec,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=ge(a,s.shape),l=St(On(s.shape,o)[1]),c=[],u=e.makeTensorInfo([],"float32",new Float32Array([l]));c.push(u);let h=Pa({inputs:{x:s},backend:e,attrs:{dtype:"float32"}});c.push(h);let p=Wm({inputs:{a:h,b:u},backend:e});c.push(p);let d=vl({inputs:{x:p},backend:e,attrs:{axis:a,keepDims:i}});return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}},xE={kernelName:nc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;ue(s,"min");let o=ge(a,s.shape),l=o,c=mn(l,s.shape.length),u=s;c!=null&&(u=Nr({inputs:{x:s},backend:e,attrs:{perm:c}}),l=vn(l.length,s.shape.length)),jn("min",l,u.shape.length);let[h,p]=On(u.shape,l),d=St(p),f=nn(St(h),u.dtype),m=e.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let b=y*d,$=m[b];for(let _=0;_<d;++_){let M=m[b+_];(Number.isNaN(M)||M<$)&&($=M)}f[y]=$}c!=null&&e.disposeIntermediateTensorInfo(u);let g=e.makeTensorInfo(h,u.dtype,f);if(i){let y=sn({inputs:{x:g},backend:e,attrs:{shape:xn(h,o)}});return e.disposeIntermediateTensorInfo(g),y}return g}},Bv=Nn((n,t)=>Math.min(n,t)),vE=Ln(fu,Bv),wE={kernelName:fu,backendName:"cpu",kernelFunc:vE},kE={kernelName:rc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,mode:i}=r;ue(s,"mirrorPad");let o=a.map((b,$)=>b[0]+s.shape[$]+b[1]),l=a.map(b=>b[0]),c=a.map((b,$)=>b[0]+s.shape[$]),u=i==="reflect"?0:1,h=e.data.get(s.dataId).values,p=s.shape.length,d=Yt(s.shape),f=St(o),m=o.length,g=Yt(o),y=Ae(s.dtype,f);for(let b=0;b<f;b++){let $=Ps(b,m,g);for(let M=0;M<m;M++)$[M]<l[M]?$[M]=2*l[M]-$[M]-u:$[M]>=c[M]&&($[M]=2*(c[M]-1)-$[M]+u);$=$.map((M,Y)=>M-l[Y]);let _=Pr($,p,d);y[b]=h[_]}return{dataId:e.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},IE=Nn((n,t)=>{let e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),NE=Ln(mu,IE),SE={kernelName:mu,backendName:"cpu",kernelFunc:NE};function Wv(n){let{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{dim:a}=r,i=s.shape.length,o=a;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=ge([o],s.shape),c=zv({inputs:{x:s},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=xn(c.shape,l),h=sn({inputs:{x:c},backend:e,attrs:{shape:u}}),p=Um({inputs:{a:s,b:h},backend:e}),d=Nv({inputs:{x:p},backend:e}),f=vl({inputs:{x:d},backend:e,attrs:{axis:l,keepDims:!1}}),m=sn({inputs:{x:f},backend:e,attrs:{shape:u}}),g=Wm({inputs:{a:d,b:m},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}let TE={kernelName:wc,backendName:"cpu",kernelFunc:Wv},CE={kernelName:Tp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;ue(s,"multinomial");let l=o?s:Wv({inputs:{logits:s},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=e.data.get(l.dataId).values,p=[c,a],d=nn(St(p),"int32");for(let f=0;f<c;++f){let m=f*u,g=new Float32Array(u-1);g[0]=h[m];for(let $=1;$<g.length;++$)g[$]=g[$-1]+h[m+$];let y=go.alea(i.toString()),b=f*a;for(let $=0;$<a;++$){let _=y();d[b+$]=g.length;for(let M=0;M<g.length;M++)if(_<g[M]){d[b+$]=M;break}}}return o||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(p,"int32",d)}};function Vv(n,t,e){let r=da(-1,e);return Bm([],t,r,n,e)}let $E={kernelName:sc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{x:r}=t;ue(r,"neg");let s=e.data.get(r.dataId).values,[a,i]=Vv(s,r.shape,r.dtype);return e.makeTensorInfo(i,r.dtype,a)}},EE=uf,_E={kernelName:Cp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;ue(s,"NonMaxSuppression");let c=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,{selectedIndices:h}=EE(c,u,i,o,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},AE=lf,RE={kernelName:$p,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=r;ue(s,"NonMaxSuppressionPadded");let u=e.data.get(s.dataId).values,h=e.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=AE(u,h,i,o,l,c);return[e.makeTensorInfo([p.length],"int32",new Int32Array(p)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}},FE=cf,DE={kernelName:Ep,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=r;ue(s,"NonMaxSuppressionWithScore");let u=e.data.get(s.dataId).values,h=e.data.get(a.dataId).values,p=i,d=o,f=l,m=c,{selectedIndices:g,selectedScores:y}=FE(u,h,p,d,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Uv=Nn((n,t)=>n!==t?1:0),OE=Ln(ac,Uv,null,"bool"),ME={kernelName:ac,backendName:"cpu",kernelFunc:OE},LE={kernelName:oc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r;ue(s,"oneHot");let c=St(s.shape),u=new Float32Array(c*i);u.fill(l);let h=e.data.get(s.dataId).values;for(let p=0;p<c;++p)h[p]>=0&&h[p]<i&&(u[p*i+h[p]]=o);return e.makeTensorInfo([...s.shape,i],a,u)}};function Hh(n){let{inputs:t,backend:e}=n,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let s=ki({inputs:{input:r},backend:e}),a=Hh({inputs:{x:s},backend:e}),i=$o({inputs:{input:r},backend:e}),o=Hh({inputs:{x:i},backend:e}),l=Mr({inputs:{real:a,imag:o},backend:e});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),l}return Hm({backend:e,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}let zE={kernelName:Nc,backendName:"cpu",kernelFunc:Hh},PE={kernelName:ic,backendName:"cpu",kernelFunc:function n(t){let{inputs:e,backend:r}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let a=ki({inputs:{input:s},backend:r}),i=n({inputs:{x:a},backend:r}),o=$o({inputs:{input:s},backend:r}),l=Hh({inputs:{x:o},backend:r}),c=Mr({inputs:{real:i,imag:l},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),c}return Hm({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Gv(n){let{inputs:t,backend:e,attrs:r}=n,{axis:s}=r;if(t.length===1)return Gh({inputs:{input:t[0]},backend:e,attrs:{dim:s}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{Jt(a,c.shape,"All tensors passed to stack must have matching shapes"),z(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=Eo({inputs:t.map(c=>{let u=Gh({inputs:{input:c},backend:e,attrs:{dim:s}});return o.push(u),u}),backend:e,attrs:{axis:s}});return o.forEach(c=>e.disposeIntermediateTensorInfo(c)),l}let BE={kernelName:uc,backendName:"cpu",kernelFunc:Gv},Hv={kernelName:lc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,constantValue:i}=r;ue(s,"pad");let o=a.map((y,b)=>y[0]+s.shape[b]+y[1]),l=a.map(y=>y[0]),c=e.data.get(s.dataId).values,u=St(s.shape),h=s.shape.length,p=Yt(s.shape),d=St(o),f=o.length,m=Yt(o),g=Ae(s.dtype,d);i!==0&&g.fill(i);for(let y=0;y<u;y++)g[Pr(Ps(y,h,p).map((b,$)=>b+l[$]),f,m)]=c[y];return{dataId:e.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},WE=Nn((n,t)=>Math.pow(n,t)),VE=Ln(yu,WE),UE={kernelName:yu,backendName:"cpu",kernelFunc:VE};function jv(n,t,e,r){let[s,a]=On(n,r),i=Er(t,"int32"),o=nn(St(s),i),l=St(a);for(let c=0;c<o.length;++c){let u=c*l,h=1;for(let p=0;p<l;++p)h*=e[u+p];o[c]=h}return{outVals:o,outShape:s,outDtype:i}}let GE={kernelName:hc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;ue(s,"prod");let o=s.shape.length,l=ge(a,s.shape),c=mn(l,o),u=l,h=s,p=[];c!=null&&(h=Nr({inputs:{x:s},backend:e,attrs:{perm:c}}),p.push(h),u=vn(u.length,o));let d=e.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=jv(h.shape,h.dtype,d,u),y=m;return i&&(y=xn(m,l)),p.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(y,g,f)}};function HE(n,t,e,r){let s=[],a=0,i=t.length-1+e.length,o=new Array(i).fill(null).map(()=>[0]);(function(c,u){for(let h=0;h<c.length;++h){let p=c[h],d=h===c.length-1?u:c[h+1].length;if(p.length===0)throw new Error("Ragged splits may not be empty");if(p[0]<0)throw new Error("Ragged splits must be non-negative");if(p[p.length-1]>d)throw new Error("Ragged splits must not point past values");for(let f=1;f<p.length;++f)if(p[f-1]>p[f])throw new Error("Ragged splits must be sorted in ascending order")}})(e,r);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];let u=t[c+1];for(let h=1;h<l+1;++h)o[c].push(h*u)}for(let c=0;c<n.length;++c){let u=n[c],h=n[c]+1;for(let p=0;p<e.length;++p){let d=e[p],f=p+t.length-1;if(f>=0){let m=o[f],g=m[m.length-1]-d[u];for(let y=u;y<h;++y)o[f].push(d[y+1]+g)}u=d[u],h=d[h]}h!==u&&(s.push([u,h]),a+=h-u)}return{outSplits:o,valueSlices:s,numValues:a}}function qv(n,t){let e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let r=t;r<n.length;r++)e[t-1]*=n[r];return e}function jE(n,t,e,r,s){let a=t.slice();a[0]=s;let i=Xe(e,St(a)),o=n.length;return function(l,c,u,h,p,d){let f=qv(c,2)[1],m=qv(d,2)[1],g=0;for(let y of u)for(let b=y[0];b<y[1];++b){for(let $=0;$<h;++$)p[g*m+$]=l[b*f+$];++g}}(n,t,r,o===0?0:o/t[0],i,a),[i,a]}function Kv(n,t,e,r,s,a,i,o){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");if(function(f,m,g){f.forEach((y,b)=>{if(y<0||y>=g){let $=Ps(b,m.length,Yt(m)).join(",");throw new Error(`indices[${$}] = ${y} is not in [0, ${g})`)}})}(a,i,t[0][0]-1),r.length===0)throw new Error("params.rank must be nonzero");let l=r[0],{outSplits:c,valueSlices:u,numValues:h}=HE(a,i,n,l),p=function(f){let m=[];for(let g=0;g<f.length;++g){let y=Xe("int32",f[g].length);m.push(y),f[g].forEach((b,$)=>y[$]=b)}return m}(c),d=jE(e,r,s,u,h);return[p,d[0],d[1]]}let qE={kernelName:_p,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map(y=>e.data.get(y.dataId).values),c=s.map(y=>y.shape),u=e.data.get(a.dataId).values,h=e.data.get(i.dataId).values,[p,d,f]=Kv(l,c,u,a.shape,a.dtype,h,i.shape),m=p.map(y=>e.makeTensorInfo([y.length],"int32",y)),g=e.makeTensorInfo(f,a.dtype,d);return m.concat([g])}};var os=xs;class jh{constructor(t,e,r,s,a,i,o,l,c,u){this.shape=t,this.shapeShape=e,this.values=r,this.valuesShape=s,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=O1(u),this.raggedRank=M1(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===os.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===os.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case os.VALUE_ROWIDS:return jh.getMaxWidthValueRowID(e);case os.ROW_SPLITS:return jh.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${os[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let r=0;for(let s=0;s<e-1;++s){let a=t[s+1]-t[s];a>r&&(r=a)}return r}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let r=0,s=t[0],a=0;for(let i=1;i<e;++i){let o=t[i];o!==s&&(s=o,a=Math.max(i-r,a),r=i)}return Math.max(e-r,a)}tensorShapeFromTensor(t,e,r=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Yv(t,r)}calculateOutputSize(t){let e=this.valuesShape;L1(this.defaultValueShape,e);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=D1(this.raggedRank,r,e);s[0]<0&&(s[0]=t);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(t,e,r){let s=Math.min(t,r),a=[],i=0;for(let o=0;o<s;++o,i+=e)a.push(i);for(let o=s;o<t;++o)a.push(-1);return z(a.length===t,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(t,e,r,s){let a=t.length,i=[];for(let o=0;o<a-1;++o){let l=t[o+1]-t[o],c=Math.min(s,l),u=e[o];u===-1&&(c=0);for(let h=0;h<c;++h)i.push(u),u+=r;for(let h=0;h<l-c;++h)i.push(-1)}if(a>0&&i.length!==t[a-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,r,s){let a=t.length,i=[];if(a===0)return[];let o=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];i.push(c);for(let u=1;u<a;++u){let h=t[u];if(h===l)c>=0&&(++o,o<s?c+=r:c=-1);else{if(o=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}i.push(c)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,r,s){let a=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case os.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,e,r,s);case os.ROW_SPLITS:if(a.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(a,e,r,s);default:throw new Error(`Unsupported partition type: ${os[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case os.FIRST_DIM_SIZE:return t[0];case os.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case os.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${os[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let i=r.length-2;i>=0;--i)r[i]=r[i+1]*e[i+1];let s=Yv(e,!1),a=Xe(this.valuesDType,St(s));if(r[0]*e[0]>0){let i=this.calculateFirstParentOutputIndex(t,r[0],e[0]);for(let o=1;o<=this.raggedRank;++o)i=this.calculateOutputIndex(o-1,i,r[o],e[o]);this.setOutput(this.raggedRank,i,a,s)}return[s,a]}setOutput(t,e,r,s){if(r.length===0)return;let a=this.values,i=r,o=s.slice();o=o.slice(t+1);let l=St(o),c=e.length,u=this.defaultValue;if(u.length!==l&&u.length!==1){let f=this.defaultValueShape;wt(()=>{let m=mt(u,f);u=ho(m,o).dataSync()})}let h=0,p=0,d=0;for(let f=0;f<=c;++f){let m=f<c?e[f]:-1;if(m!==d){if(p<d){let g=a.subarray(h*l);Xv(i.subarray(p*l),g,(d-p)*l)}if(f>=c){let g=r.length;m=Math.floor(g/l)}if(m>d)if(this.defaultValue.length===1)i.subarray(d*l,m*l).fill(this.defaultValue[0]),d=m;else for(;m>d;)Xv(i.slice(d*l),u,l),++d;m<0?(h=f+1,p=d):(h=f,p=d,d=p+1)}else++d}}}function Xv(n,t,e){for(let r=0;r<e;r++)n[r]=t[r]}function Yv(n,t){let e=[];for(let r of n){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}e.push(r)}return e}function Zv(n,t,e,r,s,a,i,o,l,c){return new jh(n,t,e,r,s,a,i,o,l,c).compute()}let KE={kernelName:Ap,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,c=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(i.dataId).values,p=o.map(g=>e.data.get(g.dataId).values),d=o.map(g=>g.shape),[f,m]=Zv(c,s.shape,u,a.shape,a.dtype,h,i.shape,p,d,l);return e.makeTensorInfo(f,a.dtype,m)}};function Jv(n,t,e,r){if(n===t||n<t&&e<0||t<n&&e>1)return nn(0,r);let s=nn(Math.abs(Math.ceil((t-n)/e)),r);t<n&&e===1&&(e=-1),s[0]=n;for(let a=1;a<s.length;a++)s[a]=s[a-1]+e;return s}let XE={kernelName:Rp,backendName:"cpu",kernelFunc:function(n){let{backend:t,attrs:e}=n,{start:r,stop:s,dtype:a,step:i}=e,o=Jv(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},YE=Ke(bu,n=>1/n),ZE={kernelName:bu,backendName:"cpu",kernelFunc:YE},JE={kernelName:fc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;ue(s,"resizeBilinear");let l=Yt(s.shape),[c,u]=o,[h,p,d,f]=s.shape,m=e.data.get(s.dataId).values,g=new Float32Array(St([h,c,u,f])),y=[a&&c>1?p-1:p,a&&u>1?d-1:d],b=[a&&c>1?c-1:c,a&&u>1?u-1:u],$=0,_=y[0]/b[0],M=y[1]/b[1];for(let Y=0;Y<h;Y++)for(let tt=0;tt<c;tt++){let Q;Q=i?_*(tt+.5)-.5:_*tt;let et=Math.max(0,Math.floor(Q)),rt=Q-et,lt=Math.min(p-1,Math.ceil(Q)),ft=Y*l[0]+et*l[1],yt=Y*l[0]+lt*l[1];for(let kt=0;kt<u;kt++){let Tt;Tt=i?M*(kt+.5)-.5:M*kt;let It=Math.max(0,Math.floor(Tt)),Et=Tt-It,_t=Math.min(d-1,Math.ceil(Tt)),At=ft+It*l[2],Mt=yt+It*l[2],Ot=ft+_t*l[2],Lt=yt+_t*l[2];for(let Pt=0;Pt<f;Pt++){let jt=m[At+Pt],Kt=m[Mt+Pt],Qt=jt+(m[Ot+Pt]-jt)*Et,te=Qt+(Kt+(m[Lt+Pt]-Kt)*Et-Qt)*rt;g[$++]=te}}}return e.makeTensorInfo([h,c,u,f],"float32",g)}},QE={kernelName:Op,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r;ue([a,s],"resizeBilinearGrad");let o=Yt(s.shape),[l,c,u,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(l*c*u*h),m=[i&&p>1?c-1:c,i&&d>1?u-1:u],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],$=e.data.get(a.dataId).values,_=0;for(let M=0;M<l;M++){let Y=M*o[0];for(let tt=0;tt<p;tt++){let Q=tt*y,et=Math.floor(Q),rt=Math.min(Math.ceil(Q),c-1),lt=Y+et*o[1],ft=Y+rt*o[1],yt=Q-et,kt=1-yt;for(let Tt=0;Tt<d;Tt++){let It=Tt*b,Et=Math.floor(It),_t=Math.min(Math.ceil(It),u-1),At=It-Et,Mt=1-At,Ot=lt+Et*o[2],Lt=lt+_t*o[2],Pt=ft+Et*o[2],jt=ft+_t*o[2],Kt=kt*Mt,Qt=kt*At,te=yt*Mt,be=yt*At;for(let me=0;me<h;me++){let we=$[_++];f[Ot+me]+=we*Kt,f[Lt+me]+=we*Qt,f[Pt+me]+=we*te,f[jt+me]+=we*be}}}}return e.makeTensorInfo([l,u,c,h],"float32",f)}},t4={kernelName:dc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;ue(s,"resizeNearestNeighbor");let l=Yt(s.shape),[c,u]=o,[h,p,d,f]=s.shape,m=e.data.get(s.dataId).values,g=new Float32Array(h*c*u*f),y=[a&&c>1?p-1:p,a&&u>1?d-1:d],b=[a&&c>1?c-1:c,a&&u>1?u-1:u],$=y[0]/b[0],_=y[1]/b[1],M=0;for(let Y=0;Y<h;Y++){let tt=Y*l[0];for(let Q=0;Q<c;Q++){let et=i?$*(Q+.5):$*Q,rt=Math.min(p-1,a?Math.round(et):Math.floor(et));i&&(rt=Math.max(0,rt));let lt=tt+rt*l[1];for(let ft=0;ft<u;ft++){let yt=i?_*(ft+.5):_*ft,kt=Math.min(d-1,a?Math.round(yt):Math.floor(yt));i&&(kt=Math.max(0,kt));let Tt=lt+kt*l[2];for(let It=0;It<f;It++){let Et=m[Tt+It];g[M++]=Et}}}}return e.makeTensorInfo([h,c,u,f],s.dtype,g)}},e4={kernelName:Dp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r;ue([a,s],"resizeNearestNeighborGrad");let o=Yt(s.shape),l=Yt(a.shape),[c,u,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(c*u*h*p),g=e.data.get(a.dataId).values,y=[i&&d>1?u-1:u,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],$=y[0]/b[0],_=y[1]/b[1],M=1/$,Y=1/_,tt=2*Math.ceil(M)+2,Q=2*Math.ceil(Y)+2;for(let et=0;et<c;et++){let rt=et*o[0];for(let lt=0;lt<u;lt++){let ft=rt+lt*o[1],yt=Math.floor(lt*M),kt=Math.floor(yt-tt/2);for(let Tt=0;Tt<h;Tt++){let It=ft+Tt*o[2],Et=Math.floor(Tt*Y),_t=Math.floor(Et-Q/2);for(let At=0;At<p;At++){let Mt=0;for(let Ot=0;Ot<tt;Ot++){let Lt=Ot+kt;if(Lt<0||Lt>=d)continue;let Pt=rt+Lt*l[1],jt=Lt*$;if(lt===Math.min(u-1,i?Math.round(jt):Math.floor(jt)))for(let Kt=0;Kt<Q;Kt++){let Qt=Kt+_t;if(Qt<0||Qt>=f)continue;let te=Pt+Qt*l[2],be=Qt*_;Tt===Math.min(h-1,i?Math.round(be):Math.floor(be))&&(Mt+=g[te+At])}}m[It+At]=Mt}}}}return e.makeTensorInfo(s.shape,s.dtype,m)}},n4={kernelName:mc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dims:a}=r;ue(s,"reverse");let i=s.shape.length,o=ge(a,s.shape);if(i===0)return zs({inputs:{x:s},backend:e});let l=new Fn(s.shape,s.dtype),c=e.bufferSync(s);for(let u=0;u<l.size;u++){let h=l.indexToLoc(u),p=h.slice();o.forEach(d=>p[d]=s.shape[d]-1-p[d]),l.set(c.get(...p),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}},r4={kernelName:Jp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{image:r}=n,{radians:s,fillValue:a,center:i}=t,o=e,l=Ae(r.dtype,St(r.shape)),[c,u,h,p]=r.shape,[d,f]=vf(i,u,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let b=0;b<c;b++){let $=b*h*u*p;for(let _=0;_<u;_++){let M=_*(h*p);for(let Y=0;Y<h;Y++){let tt=Y*p;for(let Q=0;Q<p;Q++){let et=[c,_,Y,Q],rt=et[2],lt=et[1],ft=(rt-d)*g-(lt-f)*m,yt=(rt-d)*m+(lt-f)*g;ft=Math.round(ft+d),yt=Math.round(yt+f);let kt=a;typeof a!="number"&&(kt=Q===3?255:a[Q]),ft>=0&&ft<h&&yt>=0&&yt<u&&(kt=y[$+yt*(h*p)+ft*p+Q]),l[$+M+tt+Q]=kt}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},s4=Ke(wu,n=>{let t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2==0?t:t+1}),a4={kernelName:wu,backendName:"cpu",kernelFunc:s4},Qv=za(n=>1/Math.sqrt(n)),i4=To(ku,Qv),o4={kernelName:ku,backendName:"cpu",kernelFunc:i4};function _o(n,t,e,r,s,a,i,o,l,c){let u=[r/s,s],h=n.values,p=t.values;if(r===0)return Fe(e,t.dtype);let d=Fe(u,t.dtype);typeof l=="string"||typeof l=="number"?d.values.fill(l):typeof l=="boolean"&&d.values.fill(+l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<i;y++){let b=h[f*i+y];m.push(b),g+=b*o[y]}if(g<0||g>=r/s)throw new Error(`Invalid indices: ${m} does not index into ${e}`);for(let y=0;y<s;y++)c?d.values[g*s+y]+=p[f*s+y]:d.values[g*s+y]=t.rank===0?p[0]:p[f*s+y]}return d}let u4={kernelName:Mp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Ju(0,s,i),p=_o(e.bufferSync(s),e.bufferSync(a),i,h,c,l,o,u,0,!0);return e.makeTensorInfo(i,p.dtype,p.values)}};function l4(n,t){let e=0,r=n.length,s=0;for(;e<r;)s=Math.floor((e+r)/2),n[s]<t?e=s+1:r=s;return r}function c4(n,t){let e=0,r=n.length,s=0;for(;e<r;)s=Math.floor((e+r)/2),n[s]<=t?e=s+1:r=s;return r}let h4={kernelName:Lp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(l,c,u,h,p,d){let f=Xe("int32",u*p);for(let m=0;m<u;++m){let g=l.slice(m*h,(m+1)*h),y=m*p;for(let b=0;b<p;++b)f[y+b]=d==="left"?l4(g,c[b+y]):c4(g,c[b+y])}return f}(e.data.get(s.dataId).values,e.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return e.makeTensorInfo(a.shape,"int32",o)}},p4={kernelName:gc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{condition:r,t:s,e:a}=t;ue([r,s,a],"select");let i=r.shape.length,o=e.data.get(r.dataId).values,l=e.data.get(s.dataId).values,c=e.data.get(a.dataId).values,u=Er(s.dtype,a.dtype),h=nn(St(s.shape),u),p=0,d=i===0||i>1||s.shape.length===1?1:St(s.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<d;m++)o[f]===1?h[p++]=l[f]:h[p++]=c[f];return e.makeTensorInfo(s.shape,u,h)}},d4=ch,f4=hh,m4=Ke(Iu,n=>n>=0?f4*n:d4*(Math.exp(n)-1)),g4={kernelName:Iu,backendName:"cpu",kernelFunc:m4},y4=Ke(Tu,n=>n<0?-1:n>0?1:0),b4={kernelName:Tu,backendName:"cpu",kernelFunc:y4},x4=Ke(Nu,n=>Math.sin(n)),v4={kernelName:Nu,backendName:"cpu",kernelFunc:x4},w4=Ke(Su,n=>Math.sinh(n)),k4={kernelName:Su,backendName:"cpu",kernelFunc:w4},tw=Math.log(11920928955078125e-23)+2,I4=Ke($u,n=>{let t=n>-tw,e=n<tw,r=Math.exp(n),s;return s=e?r:t?n:Math.log(1+r),s}),N4={kernelName:$u,backendName:"cpu",kernelFunc:I4},S4={kernelName:xc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,paddings:i}=r;ue([s],"spaceToBatchND");let o=St(a),l=[[0,0]];l.push(...i);for(let g=1+a.length;g<s.shape.length;++g)l.push([0,0]);let c=Hv.kernelFunc({inputs:{x:s},backend:e,attrs:{paddings:l,constantValue:0}}),u=Qu(c.shape,a,o,!1),h=tl(u.length,a.length,!1),p=el(c.shape,a,o,!1),d=sn({inputs:{x:c},backend:e,attrs:{shape:u}}),f=Nr({inputs:{x:d},backend:e,attrs:{perm:h}}),m=sn({inputs:{x:f},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}};function ew(n,t,e,r,s,a,i){let o=t[0],l=a[0],c=new Array(l),u=new Array(o),h=t[1];if(l===0){if(o!==0)throw new Error(G1(o));return[Xe(e,0),[0,h],Xe(s,0),c,u]}let p=!0,d=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let y=n[g*h];if(y<0)throw new Error(H1(g,y));if(y>=l)throw new Error(j1(g,y,l));++f[y],p=p&&y>=d,d=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=n,y=r;for(let b=0;b<o;++b)u[b]=b;return[g,[o,h],y,c,u]}{let g=f[l-1],y=Xe(e,g*h),b=Xe(s,g),$=new Array(l).fill(0);for(let _=0;_<o;++_){let M=n[_*h],Y=$[M],tt=(M===0?0:f[M-1])+Y;$[M]++;for(let Q=0;Q<h;++Q)y[tt*h+Q]=n[_*h+Q];b[tt]=r[_],u[_]=tt}for(let _=0;_<l;++_)if($[_]===0){let M=_===0?0:f[_-1];y[M*h+0]=_;for(let Y=1;Y<h;++Y)y[M*h+Y]=0;b[M]=i}return[y,[g,h],b,c,u]}}let T4={kernelName:zp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=e.data.get(r.dataId).values,l=e.data.get(s.dataId).values,c=e.data.get(a.dataId).values,u=e.data.get(i.dataId).values[0],[h,p,d,f,m]=ew(o,r.shape,r.dtype,l,s.dtype,c,u);return[e.makeTensorInfo(p,r.dtype,h),e.makeTensorInfo([p[0]],s.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function nw(n,t,e,r,s){let a=St(r),i=t[0],o=s.length,l=[],c=1,u=-1;for(let m=0;m<o;++m){let g=s[m];if(g===-1){if(u!==-1)throw new Error(q1(u,m));u=m,l.push(1)}else{if(g<0)throw new Error(K1(m,g));c*=g,l.push(g)}}if(u!==-1){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let m=Math.trunc(a/c);if(c*m!==a)throw new Error(X1(r,l));l[u]=m}if(St(l)!==a)throw new Error(Y1(r,l));let h=r.length,p=[];if(h>0){p[h-1]=1;for(let m=h-2;m>=0;--m)p[m]=p[m+1]*r[m+1]}let d=[];if(o>0){d[o-1]=1;for(let m=o-2;m>=0;--m)d[m]=d[m+1]*l[m+1]}let f=Xe(e,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<h;++y)g+=n[m*h+y]*p[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/d[y]),g%=d[y]}return[f,[i,o],l]}let C4={kernelName:Pp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{inputIndices:r,inputShape:s,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(e.data.get(s.dataId).values),o=e.data.get(r.dataId).values,l=Array.from(e.data.get(a.dataId).values),[c,u,h]=nw(o,r.shape,r.dtype,i,l);return[e.makeTensorInfo(u,r.dtype,c),e.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function jm(n,t,e,r,s,a=!1,i=0){let o=r.length,l=[t[0],n.length/t[0]],c=l[1],u=o>0?s[o-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");let h=t.slice();h[0]=u;let p=Xe(e,h.reduce((y,b)=>y*b,1));if(o===0)return u>0&&p.fill(i),[p,h];if(u<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=s[d];for(;;){let y=0;if(f<o){if(y=s[f],g===y){++f;continue}if(g>=y)throw new Error("segment ids are not increasing")}if(g<0||g>=u)throw new Error(Z1(g,u));g>m&&p.fill(i,m*c,g*c);for(let b=d;b<f;++b){let $=r[b];if($<0||$>=l[0])throw new Error(J1(b,r[b],l[0]));for(let _=0;_<c;_++)p[g*c+_]+=n[$*c+_]}if(a)for(let b=0;b<c;b++)p[g*c+b]/=f-d;if(d=f,++f,m=g+1,g=y,f>o)break}return m<u&&p.fill(i,m*c,u*c),[p,h]}let $4={kernelName:Bp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(r.dataId).values,o=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,[c,u]=jm(i,r.shape,r.dtype,o,l,!0);return e.makeTensorInfo(u,r.dtype,c)}},E4={kernelName:Wp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(r.dataId).values,o=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,[c,u]=jm(i,r.shape,r.dtype,o,l);return e.makeTensorInfo(u,r.dtype,c)}},_4={kernelName:Vp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:p}=Ju(0,s,o),d=!1,f=e.bufferSync(s),m;switch(a.dtype){case"bool":m=_o(f,e.bufferSync(a),o,p,u,c,l,h,Boolean(e.data.get(i.dataId).values[0]),d);break;case"float32":m=_o(f,e.bufferSync(a),o,p,u,c,l,h,e.data.get(i.dataId).values[0],d);break;case"int32":m=_o(f,e.bufferSync(a),o,p,u,c,l,h,e.data.get(i.dataId).values[0],d);break;case"string":m=_o(f,e.bufferSync(a),o,p,u,c,l,h,ma(e.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return e.makeTensorInfo(o,m.dtype,m.values)}},A4={kernelName:vc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=ge(i,s.shape)[0],l=Lf(s,a,o),c=new Array(s.shape.length).fill(0),u=s.shape.slice();return l.map(h=>{let p=[...u];p[o]=h;let d=Ii({inputs:{x:s},backend:e,attrs:{begin:c,size:p}});return c[o]+=h,d})}},R4=za(n=>Math.sqrt(n)),F4=Ke(Eu,n=>Math.sqrt(n)),D4={kernelName:Eu,backendName:"cpu",kernelFunc:F4},O4={kernelName:Up,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{let{x:e}=n,r=t;ue(e,"square");let s=r.data.get(e.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){let o=s[i];a[i]=o*o}return{dataId:r.write(a,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},rw=Nn((n,t)=>{let e=n-t;return e*e}),M4=Ln(_u,rw),L4={kernelName:_u,backendName:"cpu",kernelFunc:M4},z4=Ke(Ou,(n,t)=>{let e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),P4={kernelName:Ou,backendName:"cpu",kernelFunc:z4};function sw(n,t,e,r){let s=Fe(n,t.dtype);for(let a=0;a<s.size;a++){let i=s.indexToLoc(a),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*e[l]+r[l];s.set(t.get(...o),...i)}return s}let B4={kernelName:Gp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:p}=r;ue(s,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:$,strides:_}=Nd(s.shape,a,i,o,l,c,u,h,p),M;if(m)M=sn({inputs:{x:s},backend:e,attrs:{shape:f}});else if(g||y){z(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let Y=wd(b,$,_),tt=Ii({inputs:{x:s},backend:e,attrs:{begin:b,size:Y}});M=sn({inputs:{x:tt},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(tt)}else{let Y=sw(d,e.bufferSync(s),_,b);M=e.makeTensorInfo(f,Y.dtype,Y.values)}return M}};class W4{constructor(t,e,r,s,a,i){this.separator=fa(t),this.nGramWidths=e,this.leftPad=fa(r),this.rightPad=fa(s),this.padWidth=a,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let r=this.getPadWidth(e);return Math.max(0,t+2*r-e+1)}createNGrams(t,e,r,s,a,i){for(let o=0;o<a;++o){let l=this.getPadWidth(i),c=Math.max(0,l-o),u=Math.max(0,l-(a-(o+1))),h=i-(c+u),p=e+(c>0?0:o-l),d=0;d+=c*this.leftPad.length;for(let y=0;y<h;++y)d+=t[p+y].length;d+=u*this.rightPad.length,d+=(c+u+h-1)*this.separator.length,r[s+o]=new Uint8Array(d);let f=r[s+o],m=0,g=y=>y.forEach(b=>f[m++]=b);for(let y=0;y<c;++y)g(this.leftPad),g(this.separator);for(let y=0;y<h-1;++y)g(t[p+y]),g(this.separator);if(h>0){g(t[p+h-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(t,e){let r=t.length,s=e.length;if(s>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<s;++c){let u=e[c]>=l;if(u=u&&e[c]<=r,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${r}]`);l=e[c]}if(l!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${l}`)}let a=s-1,i=Xe("int32",s);if(r===0||s===0){let l=new Array(r);for(let c=0;c<=a;++c)i[c]=0;return[l,i]}i[0]=0;for(let l=1;l<=a;++l){let c=e[l]-e[l-1],u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),i[l]=i[l-1]+u}let o=new Array(i[a]);for(let l=0;l<a;++l){let c=e[l],u=i[l];if(this.nGramWidths.forEach(h=>{let p=e[l+1]-e[l],d=this.getNumNGrams(p,h);this.createNGrams(t,c,o,u,d,h),u+=d}),this.preserveShort&&u===i[l]){let h=e[l+1]-e[l];if(h===0)continue;let p=h+2*this.padWidth,d=1;this.createNGrams(t,c,o,u,d,p)}}return[o,i]}}function aw(n,t,e,r,s,a,i,o){return new W4(e,r,s,a,i,o).compute(n,t)}let V4={kernelName:Hp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:c}=r,{data:u,dataSplits:h}=t,p=e.data.get(u.dataId).values,d=e.data.get(h.dataId).values,[f,m]=aw(p,d,s,a,i,o,l,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",m)]}};function U4(n,t,e,r){if(!n.length)return;if(t.length===0){for(let a=0;a<n.length;++a)r.push(n.subarray(a,a+1));return}if(t.length===1){let a=t[0],i=n.indexOf(a);for(;i!==-1;){let o=n.subarray(0,i);e&&o.length===0||r.push(o),i=(n=n.subarray(i+1)).indexOf(a)}return void(e&&n.length===0||r.push(n))}let s=0;for(let a=0;a<n.length+1;a++)if(a===n.length||t.indexOf(n[a])!==-1){let i=n.subarray(s,a);e&&i.length===0||r.push(i),s=a+1}}function iw(n,t,e){let r=n.length,s=[],a=0,i=0,o=new Array(r);for(let p=0;p<r;++p){let d=s.length;U4(n[p],t,e,s);let f=s.length-d;o[p]=f,a+=f,i=Math.max(i,f)}let l=Xe("int32",2*a),c=new Array(a),u=[r,i],h=0;for(let p=0;p<r;++p)for(let d=0;d<o[p];++d)l[2*h]=p,l[2*h+1]=d,c[h]=s[h],++h;return[l,c,u]}let G4={kernelName:jp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=e.data.get(a.dataId).values,l=e.data.get(i.dataId).values[0],[c,u,h]=iw(o,l,s),p=u.length;return[e.makeTensorInfo([p,2],"int32",c),e.makeTensorInfo([p],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}};function ow(n,t){let e=Xe("int32",n.length);for(let r=0;r<n.length;++r)e[r]=rk(n[r]).modulo(t).getLowBitsUnsigned();return e}let H4={kernelName:qp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{numBuckets:s}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");let i=ow(e.data.get(a.dataId).values,s);return e.makeTensorInfo(a.shape,"int32",i)}},j4=Ke(Ru,n=>Math.tan(n)),q4={kernelName:Ru,backendName:"cpu",kernelFunc:j4},K4=Ke(Fu,n=>Math.tanh(n));function uw(n,t){let e=new Array(n.rank);for(let s=0;s<e.length;s++)e[s]=n.shape[s]*t[s];let r=Fe(e,n.dtype);for(let s=0;s<r.values.length;++s){let a=r.indexToLoc(s),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=a[l]%n.shape[l];let o=n.locToIndex(i);r.values[s]=n.values[o]}return r}let X4={kernelName:Du,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reps:a}=r;ue(s,"tile");let i=uw(e.bufferSync(s),a);return e.makeTensorInfo(i.shape,i.dtype,i.values)}},wl=(n,t)=>{let e=t.value-n.value;return e===0?n.index-t.index:e};function lw(n,t,e=0,r=n.length-1){for(;r>e;){if(r-e>600){let o=r-e+1,l=t-e+1,c=Math.log(o),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(o-u)/o)*Math.sign(l-o/2);lw(n,t,Math.max(e,Math.floor(t-l*u/o+h)),Math.min(r,Math.floor(t+(o-l)*u/o+h)))}let s=n[t],a=e,i=r;for(Ut(n,e,t),wl(n[r],s)>0&&Ut(n,e,r);a<i;){for(Ut(n,a,i),a++,i--;wl(n[a],s)<0;)a+=1;for(;wl(n[i],s)>0;)i-=1}wl(n[e],s)===0?Ut(n,e,i):(i+=1,Ut(n,i,r)),i<=t&&(e=i+1),t<=i&&(r=i-1)}}function cw(n,t,e,r,s){let a=t[t.length-1],[i,o]=[n.length/a,a],l=Ae(e,i*r),c=Ae("int32",i*r);for(let h=0;h<i;h++){let p=h*o,d=n.subarray(p,p+o),f=new Array(d.length);d.forEach((b,$)=>f[$]={value:b,index:$}),r<f.length&&(lw(f,r),f=f.slice(0,r)),s&&f.sort(wl);let m=h*r,g=l.subarray(m,m+r),y=c.subarray(m,m+r);for(let b=0;b<r;b++)g[b]=f[b].value,y[b]=f[b].index}let u=t.slice();return u[u.length-1]=r,[Fe(u,e,l),Fe(u,"int32",c)]}let Y4={kernelName:Kp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{k:a,sorted:i}=r;ue(s,"topk");let o=e.data.get(s.dataId).values,[l,c]=cw(o,s.shape,s.dtype,a,i);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}},Z4={kernelName:Xp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,attrs:e,backend:r}=n,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:c}=e,[u,h,p,d]=s.shape,[f,m]=c??[h,p],g=[u,f,m,d],y=Yt(s.shape),b=y[0],$=y[1],_=y[2],M=Yt(g),Y=M[0],tt=M[1],Q=M[2],et=Ae(s.dtype,St(g));et.fill(l);let rt=r.data.get(s.dataId).values,lt=r.data.get(a.dataId).values;for(let ft=0;ft<u;++ft){let yt=a.shape[0]===1?lt:lt.subarray(8*ft,8*ft+8);for(let kt=0;kt<f;++kt)for(let Tt=0;Tt<m;++Tt)for(let It=0;It<d;++It){let Et,_t=yt[6]*Tt+yt[7]*kt+1;if(_t===0)continue;let At=(yt[0]*Tt+yt[1]*kt+yt[2])/_t,Mt=(yt[3]*Tt+yt[4]*kt+yt[5])/_t,Ot=hw(At,p,o),Lt=hw(Mt,h,o);switch(i){case"nearest":Et=J4(rt,h,p,b,$,_,ft,Lt,Ot,It,l);break;case"bilinear":Et=Q4(rt,h,p,b,$,_,ft,Lt,Ot,It,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}et[ft*Y+kt*tt+Tt*Q+It]=Et}return r.makeTensorInfo(g,s.dtype,et)}return{dataId:r.write(et,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function hw(n,t,e){switch(e){case"reflect":return function(r,s){let a=r;if(a<0)if(s<=1)a=0;else{let i=2*s;a<i&&(a=i*Math.trunc(-a/i)+a),a=a<-s?a+i:-a-1}else if(a>s-1)if(s<=1)a=0;else{let i=2*s;a-=i*Math.trunc(a/i),a>=s&&(a=i-a-1)}return Zt(0,a,s-1)}(n,t);case"wrap":return function(r,s){let a=r;if(a<0)if(s<=1)a=0;else{let i=s-1;a+=s*(Math.trunc(-a/i)+1)}else if(a>s-1)if(s<=1)a=0;else{let i=s-1;a-=s*Math.trunc(a/i)}return Zt(0,a,s-1)}(n,t);case"nearest":return function(r,s){return Zt(0,r,s-1)}(n,t);default:return function(r,s){return r}(n)}}function kl(n,t,e,r,s,a,i,o,l,c,u){return 0<=o&&o<t&&0<=l&&l<e?n[i*r+o*s+l*a+c]:u}function J4(n,t,e,r,s,a,i,o,l,c,u){return kl(n,t,e,r,s,a,i,Math.round(o),Math.round(l),c,u)}function Q4(n,t,e,r,s,a,i,o,l,c,u){let h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*kl(n,t,e,r,s,a,i,h,p,c,u)+(l-p)*kl(n,t,e,r,s,a,i,h,f,c,u))+(o-h)*((f-l)*kl(n,t,e,r,s,a,i,d,p,c,u)+(l-p)*kl(n,t,e,r,s,a,i,d,f,c,u))}function pw(n,t,e,r){let s=ge(t,e)[0],a=[1,e[0],1];for(let f=0;f<s;f++)a[0]*=e[f];a[1]=e[s];for(let f=s+1;f<e.length;f++)a[2]*=e[f];let i={},o=new Int32Array(e[s]),l=new Fn(a,r,n),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<e[s];f++){let m;if(u)m=n[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let b=0;b<a[2];b++)g.push(l.get(y,f,b));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,c.push(f)}}let h=a.slice();h[1]=Object.keys(i).length;let p=new Fn(h,r);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)p.set(l.get(g,f,y),g,m,y)});let d=e.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}let t_={kernelName:Yp,backendName:"cpu",kernelFunc:function(n){let{inputs:t,attrs:e,backend:r}=n,{axis:s}=e,{x:a}=t;ue(a,"unique");let i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:c}=pw(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},e_={kernelName:kc,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let i=s.shape.length,o=s.shape[a],l=new Array(i-1),c=0;for(let d=0;d<i;d++)d!==a&&(l[c++]=s.shape[d]);let u=new Array(i).fill(0),h=s.shape.slice();h[a]=1;let p=new Array(o);for(let d=0;d<p.length;d++){u[a]=d;let f=Ii({inputs:{x:s},backend:e,attrs:{begin:u,size:h}});p[d]=sn({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return p}},n_={kernelName:Ic,backendName:"cpu",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,segmentIds:a}=t,{numSegments:i}=r;ue(s,"unsortedSegmentSum");let o=[],l=[],c=s.shape.length-a.shape.length,u=a;for(let p=0;p<c;++p){let d=Gh({inputs:{input:u},backend:e,attrs:{dim:p+1}});u=d,l.push(d)}for(let p=0;p<i;++p){let d=da(p,"int32"),f=e.makeTensorInfo([],"int32",d),m=kv({inputs:{a:f,b:u},backend:e}),g=Pa({inputs:{x:m},backend:e,attrs:{dtype:"float32"}}),y=Uh({inputs:{a:g,b:s},backend:e}),b=vl({inputs:{x:y},backend:e,attrs:{axis:0,keepDims:!1}});o.push(b),l.push(f),l.push(m),l.push(g),l.push(y),l.push(b)}let h=Gv({inputs:o,backend:e,attrs:{axis:0}});return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),h}},r_=[q3,K3,Y3,J3,G3,Q3,eC,nC,rC,sC,iC,uC,cC,dC,mC,gC,yC,bC,xC,j3,vC,kC,IC,NC,V3,TC,$C,B3,EC,AC,RC,FC,DC,OC,MC,LC,PC,WC,VC,UC,GC,HC,jC,qC,KC,XC,YC,ZC,JC,QC,r$,A3,s$,a$,d$,f$,m$,y$,k$,I$,N$,T$,E$,_$,A$,R$,F$,O$,L$,R3,z$,_C,B$,V$,G$,F3,j$,K$,X$,Z$,Q$,nE,sE,oE,uE,lE,cE,pE,dE,fE,mE,gE,yE,bE,xE,wE,kE,SE,CE,e$,$E,_E,RE,DE,ME,LE,PE,BE,Hv,UE,O3,GE,qE,KE,XE,W3,Vm,ZE,M3,L3,H3,JE,QE,t4,e4,n4,r4,a4,o4,u4,h4,p4,g4,P3,b4,v4,k4,wC,TE,N4,S4,T4,C4,$4,E4,_4,A4,D4,O4,L4,P4,B4,V4,G4,H4,v$,n$,q4,{kernelName:Fu,backendName:"cpu",kernelFunc:K4},X4,Y4,Z4,tC,t_,e_,n_,zE];for(let n of r_)Cg(n);let Ni={},qh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ss(n,t){if(!(n in Ni)||t!=null){let r=function(s,a){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let i=a??function(o){if(typeof OffscreenCanvas<"u"&&o===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(s);return i.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete Ni[s]},!1),Ct().getBool("SOFTWARE_WEBGL_ENABLED")&&(qh.failIfMajorPerformanceCaveat=!1),s===1?i.getContext("webgl",qh)||i.getContext("experimental-webgl",qh):i.getContext("webgl2",qh)}(n,t);if(r===null)return console.log("Could not get context for WebGL version",n),null;Ni[n]=r}let e=Ni[n];return e==null||e.isContextLost()?(delete Ni[n],Ss(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Ni[n])}var Il,Xr,qn;function Nl(n,t){return[t,n]}function Kh(n){let t=St(n);return Cr(Math.ceil(t/4))}function Ao(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function qm(n,t){let e=n,r,s,a,i,o,l,c,u,h,p;return Ct().getNumber("WEBGL_VERSION")===2?(r=e.R32F,s=e.R16F,a=e.RGBA16F,i=e.RGBA32F,o=e.RED,c=4,u=1,h=e.HALF_FLOAT,p=e.FLOAT,l=e.RGBA8):(r=n.RGBA,s=n.RGBA,a=n.RGBA,i=e.RGBA,o=n.RGBA,c=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,p=n.FLOAT,l=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function he(n,t){let e=t();return Ct().getBool("DEBUG")&&function(r){let s=r.getError();if(s!==r.NO_ERROR)throw new Error("WebGL Error: "+function(a,i){switch(i){case a.NO_ERROR:return"NO_ERROR";case a.INVALID_ENUM:return"INVALID_ENUM";case a.INVALID_VALUE:return"INVALID_VALUE";case a.INVALID_OPERATION:return"INVALID_OPERATION";case a.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case a.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case a.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${i}`}}(r,s))}(n),e}(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Il||(Il={})),function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"}(Xr||(Xr={})),function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(qn||(qn={}));function s_(n){return!!(Ct().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||596e-10<Math.abs(n)&&Math.abs(n)<65504)}function Xh(n,t){return Qs(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}let a_=/ERROR: [0-9]+:([0-9]+):/g;function dw(n,t){let e=a_.exec(t);if(e==null)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(n);let r=+e[1],s=n.split(`
`),a=s.length.toString().length+2,i=s.map((h,p)=>Wn((p+1).toString(),a)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),c=i.slice(r-1,r),u=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Wn(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function Km(n,t){if(he(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function fw(n,t,e,r,s,a,i){let o=n.getAttribLocation(t,e);return o!==-1&&(he(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),he(n,()=>n.vertexAttribPointer(o,s,n.FLOAT,!1,a,i)),he(n,()=>n.enableVertexAttribArray(o)),!0)}function i_(n,t,e,r){he(n,()=>function(s,a,i){o_(s,i),he(s,()=>s.activeTexture(s.TEXTURE0+i)),he(s,()=>s.bindTexture(s.TEXTURE_2D,a))}(n,t,r)),he(n,()=>n.uniform1i(e,r))}function Xm(n,t,e){he(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),he(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function mw(n,t){he(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),he(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Yh(n){let t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,r){switch(r){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${r}`}}(n,t))}function Qs(n,t,e){let r=he(n,()=>t());if(r==null)throw new Error(e);return r}function o_(n,t){let e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+n.TEXTURE0;if(r<n.TEXTURE0||r>e)throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${e}]`}.`)}function Ro(n,t=2){return St(n.slice(0,n.length-t))}function Fo(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Ym(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[Ro(n),...Fo(n)]),t}function Zh(n){return n%2==0}function Jh(n,t){if(se(n=n.slice(-2),t=t.slice(-2))||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){let e=n.slice(-1)[0],r=t.slice(-1)[0];if(e===r||Zh(e)&&Zh(r)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&Zh(n[0])&&Zh(t[0])}let Zm,Jm;function us(n,t){return n.getExtension(t)!=null}function gw(n){try{if(Ss(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function u_(n){if(n===0)return!1;let t=Ss(n);if(n!==1){if(us(t,"EXT_color_buffer_float"))return Qm(t);let e="EXT_color_buffer_half_float";if(us(t,e)){let r=t.getExtension(e);return function(s,a){let i=qm(s,a),o=s.createTexture();s.bindTexture(s.TEXTURE_2D,o);let l=1,c=1;s.texImage2D(s.TEXTURE_2D,0,i.internalFormatHalfFloat,l,c,0,i.textureFormatFloat,i.textureTypeHalfFloat,null);let u=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,u),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,o,0);let h=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(o),s.deleteFramebuffer(u),h}(t,r)}return!1}return!us(t,"OES_texture_float")||!us(t,"WEBGL_color_buffer_float")?!1:Qm(t)}function Qm(n){let t=qm(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);let s=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(r),s}function Sl(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&z(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}let fe=Ct();function or(){let n,t,e,r,s,a,i,o,l,c;return Ct().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=Ct().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:c}}function Si(n,t,e="index"){let r=Yt(t);return r.map((s,a)=>`${`int ${n[a]} = ${e} / ${s}`}; ${a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${s}`:`index -= ${n[a]} * ${s}`};`).join("")}function Qh(n,t,e="index"){let r=Yt(t);return r.map((s,a)=>`${`int ${n[a]} = ${e} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * outShapeStrides[${a}]`:`index -= ${n[a]} * outShapeStrides[${a}]`};`).join("")}function l_(n,t,e="index"){let r=function(s,a){let i=s.length,o=s.map(c=>`${a}[${c}]`),l=new Array(i-1);l[i-2]=o[i-1];for(let c=i-3;c>=0;--c)l[c]=`(${l[c+1]} * ${o[c+1]})`;return l}(n.map((s,a)=>a),t);return r.map((s,a)=>`${`int ${n[a]} = ${e} / ${r[a]}`}; ${a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${r[a]}`:`index -= ${n[a]} * ${r[a]}`};`).join("")}function tg(n){let t=Yt(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}fe.registerFlag("HAS_WEBGL",()=>fe.getNumber("WEBGL_VERSION")>0),fe.registerFlag("WEBGL_VERSION",()=>gw(2)?2:gw(1)?1:0),fe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),fe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>fe.get("WEBGL_VERSION")===2),fe.registerFlag("WEBGL_CPU_FORWARD",()=>!0),fe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),fe.registerFlag("WEBGL_PACK",()=>fe.getBool("HAS_WEBGL")),fe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_PACK_CLIP",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_PACK_REDUCE",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_LAZILY_UNPACK",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_CONV_IM2COL",()=>fe.getBool("WEBGL_PACK")),fe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(n){if(Zm==null){let t=Ss(n);Zm=t.getParameter(t.MAX_TEXTURE_SIZE)}return Zm}(fe.getNumber("WEBGL_VERSION"))),fe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(n){if(Jm==null){let t=Ss(n);Jm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Jm)}(fe.getNumber("WEBGL_VERSION"))),fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let n=fe.getNumber("WEBGL_VERSION");return n===0?0:function(t){if(t===0)return 0;let e,r=Ss(t);return e=us(r,"EXT_disjoint_timer_query_webgl2")&&t===2?2:us(r,"EXT_disjoint_timer_query")?1:0,e}(n)}),fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>fe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Pg()),fe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(n){if(n===0)return!1;let t=Ss(n);if(n===1){if(!us(t,"OES_texture_float"))return!1}else if(!us(t,"EXT_color_buffer_float"))return!1;return Qm(t)}(fe.getNumber("WEBGL_VERSION"))),fe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!fe.getBool("WEBGL_FORCE_F16_TEXTURES")&&fe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),fe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>u_(fe.getNumber("WEBGL_VERSION"))),fe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return(n=fe.getNumber("WEBGL_VERSION"))===2&&Ss(n).fenceSync!=null;var n}),fe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>fe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),fe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),fe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Pg()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),fe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),fe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),fe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),fe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),fe.registerFlag("WEBGL_EXP_CONV",()=>!1),fe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>fe.getBool("IS_TEST")),fe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),fe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),fe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);let yw=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:bw}=S;function c_(n,t,e){let r=[];if(n.forEach(p=>{let d=St(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${d>1?`[${d}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){let{uniformShape:f}=eg(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(f.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`)}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let s=r.join(`
`),a=n.map(p=>function(d,f,m=!1,g){let y="";y+=m?xw(d,g):Do(d,g);let b=d.shapeInfo.logicalShape,$=f.logicalShape;return b.length<=$.length&&(y+=m?function(_,M){let Y=_.name,tt=Y.charAt(0).toUpperCase()+Y.slice(1),Q="get"+tt+"AtOutCoords",et=_.shapeInfo.logicalShape.length,rt=M.logicalShape.length,lt=bw(_.shapeInfo.logicalShape,M.logicalShape),ft=an(rt),yt=rt-et,kt,Tt=["x","y","z","w","u","v"];kt=et===0?"":rt<2&&lt.length>=1?"coords = 0;":lt.map(Ot=>`coords.${Tt[Ot+yt]} = 0;`).join(`
`);let It="";It=rt<2&&et>0?"coords":_.shapeInfo.logicalShape.map((Ot,Lt)=>`coords.${Tt[Lt+yt]}`).join(", ");let Et="return outputValue;",_t=St(_.shapeInfo.logicalShape)===1,At=St(M.logicalShape),Mt=At===1;if(et!==1||_t||Mt){if(_t&&!Mt)Et=rt===1?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(lt.length){let Ot=et-2,Lt=et-1;lt.indexOf(Ot)>-1&&lt.indexOf(Lt)>-1?Et="return vec4(outputValue.x);":lt.indexOf(Ot)>-1?Et="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":lt.indexOf(Lt)>-1&&(Et="return vec4(outputValue.xx, outputValue.zz);")}}else Et=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${Q}() {
      ${ft} coords = getOutputCoords();
      ${kt}
      vec4 outputValue = get${tt}(${It});
      ${Et}
    }
  `}(d,f):function(_,M){let Y=_.name,tt=Y.charAt(0).toUpperCase()+Y.slice(1),Q="get"+tt+"AtOutCoords",et=M.texShape,rt=_.shapeInfo.texShape,lt=_.shapeInfo.logicalShape.length,ft=M.logicalShape.length;if(!_.shapeInfo.isUniform&&lt===ft&&_.shapeInfo.flatOffset==null&&se(rt,et))return`
      float ${Q}() {
        return sampleTexture(${Y}, resultUV);
      }
    `;let yt=an(ft),kt=bw(_.shapeInfo.logicalShape,M.logicalShape),Tt=ft-lt,It,Et=["x","y","z","w","u","v"];It=lt===0?"":ft<2&&kt.length>=1?"coords = 0;":kt.map(At=>`coords.${Et[At+Tt]} = 0;`).join(`
`);let _t="";return _t=ft<2&&lt>0?"coords":_.shapeInfo.logicalShape.map((At,Mt)=>`coords.${Et[Mt+Tt]}`).join(", "),`
    float ${Q}() {
      ${yt} coords = getOutputCoords();
      ${It}
      return get${tt}(${_t});
    }
  `}(d,f)),y}(p,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,o=or(),l=function(p){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${p.texture2D}(textureSampler, uv).r;
    }
  `}(o),c,u,h=function(p){return`${p.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${p.varyingFs} vec2 resultUV;
    ${p.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${p.defineSpecialNaN}
    ${p.defineSpecialInf}
    ${p.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${h_}
    ${p_}
    ${d_}
  `}(o);return t.isPacked?(c=function(p,d,f){switch(p.length){case 0:return vw();case 1:return function(m,g,y){let b=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)];return b[0]===1?y?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${b[1]}.0);
      }
    `:b[1]===1?y?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${b[0]}.0);
      }
    `:y?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${b[0]}, ${b[1]}));
      return 2 * (resTexRC.x * ${b[1]} + resTexRC.y);
    }
  `}(0,d,f);case 2:return function(m,g,y){let b=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)];if(se(m,g))return y?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${b[0]}, ${b[1]}));
      }
    `;let $=Math.ceil(m[1]/2);return y?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${b[0]}, ${b[1]}));

      int index = resTexRC.x * ${b[1]} + resTexRC.y;
      int r = 2 * (index / ${$});
      int c = imod(index, ${$}) * 2;

      return ivec2(r, c);
    }
  `}(p,d,f);case 3:return function(m,g,y){if(y)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let b=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)],$=Math.ceil(m[2]/2),_=$*Math.ceil(m[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${b[0]}, ${b[1]}));
      int index = resTexRC.x * ${b[1]} + resTexRC.y;

      int b = index / ${_};
      index -= b * ${_};

      int r = 2 * (index / ${$});
      int c = imod(index, ${$}) * 2;

      return ivec3(b, r, c);
    }
  `}(p,d,f);default:return function(m,g,y){if(y)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let b=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)],$=Math.ceil(m[m.length-1]/2),_=$*Math.ceil(m[m.length-2]/2),M=_,Y="",tt="b, r, c";for(let Q=2;Q<m.length-1;Q++)M*=m[m.length-Q-1],Y=`
      int b${Q} = index / ${M};
      index -= b${Q} * ${M};
    `+Y,tt=`b${Q}, `+tt;return`
    ivec${m.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${b[0]}, ${b[1]}));
      int index = resTexRC.x * ${b[1]} + resTexRC.y;

      ${Y}

      int b = index / ${_};
      index -= b * ${_};

      int r = 2 * (index / ${$});
      int c = imod(index, ${$}) * 2;

      return ivec${m.length}(${tt});
    }
  `}(p,d,f)}}(t.logicalShape,i,e.enableShapeUniforms),u=function(p){return`
    void setOutput(vec4 val) {
      ${p.output} = val;
    }
  `}(o)):(c=function(p,d,f){switch(p.length){case 0:return vw();case 1:return function(m,g,y){return g[0]===1?y?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${g[1]}.0);
      }
    `:g[1]===1?y?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${g[0]}.0);
      }
    `:y?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${g[0]}, ${g[1]}));
      return resTexRC.x * ${g[1]} + resTexRC.y;
    }
  `}(0,d,f);case 2:return function(m,g,y){return se(m,g)?y?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${g[0]}, ${g[1]}));
      }
    `:m[1]===1?y?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${g[0]}, ${g[1]}));
        int index = resTexRC.x * ${g[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:m[0]===1?y?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${g[0]}, ${g[1]}));
        int index = resTexRC.x * ${g[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:y?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${g[0]}, ${g[1]}));
      int index = resTexRC.x * ${g[1]} + resTexRC.y;
      int r = index / ${m[1]};
      int c = index - r * ${m[1]};
      return ivec2(r, c);
    }
  `}(p,d,f);case 3:return function(m,g,y){if(y)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Qh(["r","c","d"],m)}
    return ivec3(r, c, d);
  }
`;let b=Si(["r","c","d"],m);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${g[0]}, ${g[1]}));
      int index = resTexRC.x * ${g[1]} + resTexRC.y;
      ${b}
      return ivec3(r, c, d);
    }
  `}(p,d,f);case 4:return function(m,g,y){if(y)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Qh(["r","c","d","d2"],m)}
      return ivec4(r, c, d, d2);
    }
  `;let b=Si(["r","c","d","d2"],m);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${g[0]}, ${g[1]}));
      int index = resTexRC.x * ${g[1]} + resTexRC.y;
      ${b}
      return ivec4(r, c, d, d2);
    }
  `}(p,d,f);case 5:return function(m,g){let y=Si(["r","c","d","d2","d3"],m);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${g[0]},
                             ${g[1]}));

      int index = resTexRC.x * ${g[1]} + resTexRC.y;

      ${y}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(p,d);case 6:return function(m,g){let y=Si(["r","c","d","d2","d3","d4"],m);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${g[0]}, ${g[1]}));
      int index = resTexRC.x * ${g[1]} + resTexRC.y;

      ${y}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(p,d);default:throw new Error(`${p.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,e.enableShapeUniforms),u=function(p){return`
    void setOutput(float val) {
      ${p.output} = vec4(val, 0, 0, 0);
    }
  `}(o)),e.packedInputs&&(h+=f_),[h,l,u,s,c,a,e.userCode].join(`
`)}function Do(n,t=!1){let e=n.shapeInfo.logicalShape;switch(e.length){case 0:return function(r,s){let a=r.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1);if(r.shapeInfo.isUniform)return`float ${i}() {return ${a};}`;let[o,l]=r.shapeInfo.texShape;if(o===1&&l===1)return`
      float ${i}() {
        return sampleTexture(${a}, halfCR);
      }
    `;let c=Ti(a);if(s)return`
    float ${i}() {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], ${c});
      return sampleTexture(${a}, uv);
    }
  `;let[u,h]=r.shapeInfo.texShape;return`
    float ${i}() {
      vec2 uv = uvFromFlat(${u}, ${h}, ${c});
      return sampleTexture(${a}, uv);
    }
  `}(n,t);case 1:return function(r,s){let a=r.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1);if(r.shapeInfo.isUniform)return`
      float ${i}(int index) {
        ${Oo(r)}
      }
    `;let o=r.shapeInfo.texShape,l=o[0],c=o[1];if(c===1&&l===1)return`
      float ${i}(int index) {
        return sampleTexture(${a}, halfCR);
      }
    `;let u=Ti(a);return c===1?s?`
      float ${i}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${u}) + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${i}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${u}) + 0.5) / ${l}.0);
        return sampleTexture(${a}, uv);
      }
    `:l===1?s?`
      float ${i}(int index) {
        vec2 uv = vec2((float(index + ${u}) + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${i}(int index) {
        vec2 uv = vec2((float(index + ${u}) + 0.5) / ${c}.0, 0.5);
        return sampleTexture(${a}, uv);
      }
    `:s?`
    float ${i}(int index) {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${u});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${i}(int index) {
      vec2 uv = uvFromFlat(${l}, ${c}, index + ${u});
      return sampleTexture(${a}, uv);
    }
  `}(n,t);case 2:return function(r,s){let a=r.shapeInfo.logicalShape,i=r.name,o="get"+i.charAt(0).toUpperCase()+i.slice(1),l=r.shapeInfo.texShape;if(l!=null&&se(a,l)){if(s)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `;let m=l[0];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${l[1]}.0, ${m}.0);
      return sampleTexture(${i}, uv);
    }
  `}let{newShape:c,keptDims:u}=Zn(a),h=c;if(h.length<a.length){let m=["row","col"];return`
      ${Do(Mo(r,h),s)}
      float ${o}(int row, int col) {
        return ${o}(${Lo(m,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));
        ${Oo(r)}
      }
    `;let p=l[0],d=l[1],f=Ti(i);return d===1?s?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${f}), vec3(${i}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${i}TexShape[0]));
        return sampleTexture(${i}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${f}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${i}, uv);
    }
  `:p===1?s?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${f}), vec3(${i}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${i}TexShape[1]), 0.5);
        return sampleTexture(${i}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${f}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${i}, uv);
    }
  `:s?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i}Shape[1] + col + ${f};
        vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index);
        return sampleTexture(${i}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${a[1]} + col + ${f};
    vec2 uv = uvFromFlat(${p}, ${d}, index);
    return sampleTexture(${i}, uv);
  }
`}(n,t);case 3:return function(r,s){let a=r.shapeInfo.logicalShape,i=r.name,o="get"+i.charAt(0).toUpperCase()+i.slice(1),l=a[1]*a[2],c=a[2],{newShape:u,keptDims:h}=Zn(a),p=u;if(p.length<a.length){let b=["row","col","depth"];return`
        ${Do(Mo(r,p),s)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Lo(b,h)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${l}, ${c}, 1)));
        ${Oo(r)}
      }
    `;let d=r.shapeInfo.texShape,f=d[0],m=d[1],g=r.shapeInfo.flatOffset;if(m===l&&g==null)return s?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${i}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${c}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${f}.0);
          return sampleTexture(${i}, uv);
        }
      `;if(m===c&&g==null)return s?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${i}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${f}.0);
      return sampleTexture(${i}, uv);
    }
  `;let y=Ti(i);return s?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${i}Shape[1] * ${i}Shape[2];
      int stride1 = ${i}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${y};
      vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index);
      return sampleTexture(${i}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${l} + col * ${c} + depth + ${y};
        vec2 uv = uvFromFlat(${f}, ${m}, index);
        return sampleTexture(${i}, uv);
      }
  `}(n,t);case 4:return function(r,s){let a=r.shapeInfo.logicalShape,i=r.name,o="get"+i.charAt(0).toUpperCase()+i.slice(1),l=a[3],c=a[2]*l,u=a[1]*c,{newShape:h,keptDims:p}=Zn(a);if(h.length<a.length){let M=["row","col","depth","depth2"];return`
      ${Do(Mo(r,h),s)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Lo(M,p)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${u}, ${c}, ${l}, 1)));
        ${Oo(r)}
      }
    `;let d=r.shapeInfo.flatOffset,f=r.shapeInfo.texShape,m=f[0],g=f[1],y=`int stride2 = ${i}Shape[3];`,b=`int stride1 = ${i}Shape[2] * stride2;`,$=`int stride0 = ${i}Shape[1] * stride1;`;if(g===u&&d==null)return s?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${y}
        ${b}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${c}, ${l}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${m}.0);
        return sampleTexture(${i}, uv);
      }
    `;if(g===l&&d==null)return s?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${i}Shape[1] * ${i}Shape[2], ${i}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${i}TexShape[1], ${i}TexShape[0]);
        return sampleTexture(${i}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a[1]*a[2]}, ${a[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${m}.0);
        return sampleTexture(${i}, uv);
      }
    `;let _=Ti(i);return s?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${y}
      ${b}
      ${$}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index + ${_});
      return sampleTexture(${i}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} +
          depth * ${l} + depth2;
      vec2 uv = uvFromFlat(${m}, ${g}, index + ${_});
      return sampleTexture(${i}, uv);
    }
  `}(n,t);case 5:return function(r){let s=r.shapeInfo.logicalShape,a=r.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=s[4],l=s[3]*o,c=s[2]*l,u=s[1]*c,{newShape:h,keptDims:p}=Zn(s);if(h.length<s.length){let b=["row","col","depth","depth2","depth3"];return`
      ${Do(Mo(r,h))}
      float ${i}(int row, int col, int depth, int depth2, int depth3) {
        return ${i}(${Lo(b,p)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${o})) +
          depth3;
        ${Oo(r)}
      }
    `;let d=r.shapeInfo.flatOffset,f=r.shapeInfo.texShape,m=f[0],g=f[1];if(g===u&&d==null)return`
      float ${i}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${c}, ${l}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${m}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(g===o&&d==null)return`
      float ${i}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${s[1]*s[2]*s[3]},
               ${s[2]*s[3]}, ${s[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${m}.0);
        return sampleTexture(${a}, uv);
      }
    `;let y=Ti(a);return`
    float ${i}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${o} + depth3 + ${y};
      vec2 uv = uvFromFlat(${m}, ${g}, index);
      return sampleTexture(${a}, uv);
    }
  `}(n);case 6:return function(r){let s=r.shapeInfo.logicalShape,a=r.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:o,keptDims:l}=Zn(s);if(o.length<s.length){let $=["row","col","depth","depth2","depth3","depth4"];return`
      ${Do(Mo(r,o))}
      float ${i}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${i}(${Lo($,l)});
      }
    `}let c=s[5],u=s[4]*c,h=s[3]*u,p=s[2]*h,d=s[1]*p;if(r.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${p}, ${h}, ${u})) +
          dot(
            vec2(depth3, depth4),
            vec2(${c}, 1)));
        ${Oo(r)}
      }
    `;let f=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,g=m[0],y=m[1];if(y===d&&f==null)return`
      float ${i}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${p}, ${h}, ${u}, ${c})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${g}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(y===c&&f==null)return`
      float ${i}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${s[1]*s[2]*s[3]*s[4]},
               ${s[2]*s[3]*s[4]},
               ${s[3]*s[4]},
               ${s[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${g}.0);
        return sampleTexture(${a}, uv);
      }
    `;let b=Ti(a);return`
    float ${i}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${p} + depth * ${h} +
          depth2 * ${u} + depth3 * ${c} + depth4 + ${b};
      vec2 uv = uvFromFlat(${g}, ${y}, index);
      return sampleTexture(${a}, uv);
    }
  `}(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function xw(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return function(e){let r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=or();return`
    vec4 ${s}() {
      return ${a.texture2D}(${r}, halfCR);
    }
  `}(n);case 1:return function(e,r){let s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=or();if(r)return`
    vec4 ${a}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${s}, uv);
    }
  `;let l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${a}(int index) {
      vec2 uv = packedUVfrom1D(
        ${l[0]}, ${l[1]}, index);
      return ${o.texture2D}(${s}, uv);
    }
  `}(n,t);case 2:return function(e,r){let s=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,l=o[0],c=o[1],u=or();if(o!=null&&se(s,o))return r?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);

        return ${u.texture2D}(${a}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${l}.0);

        return ${u.texture2D}(${a}, uv);
      }
    `;if(r)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${a}, uv);
    }
  `;let h=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],p=Math.ceil(s[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${h[0]}, ${h[1]}, row, col);
      return ${u.texture2D}(${a}, uv);
    }
  `}(n,t);case 3:return function(e,r){let s=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(s[0]===1){let f=[1,2],m=["b","row","col"];return`
        ${xw(Mo(e,s.slice(1)),r)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${Lo(m,f)});
        }
      `}let c=or();if(r)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${c.texture2D}(${a}, uv);
    }
  `;let u=l[0],h=l[1],p=Math.ceil(s[2]/2),d=p*Math.ceil(s[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${h}, ${d}, ${p}, b, row, col);
      return ${c.texture2D}(${a}, uv);
    }
  `}(n,t);default:return function(e,r){let s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=or();if(r)return`
    vec4 ${a}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${s}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${s}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${s}, uv);
    }
  `;let o=e.shapeInfo.logicalShape,l=o.length,c=e.shapeInfo.texShape,u=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],h=u[0],p=u[1],d=Math.ceil(o[l-1]/2),f=d*Math.ceil(o[l-2]/2),m="int b, int row, int col",g=`b * ${f} + (row / 2) * ${d} + (col / 2)`;for(let y=2;y<l-1;y++)m=`int b${y}, `+m,f*=o[l-y-1],g=`b${y} * ${f} + `+g;return`
    vec4 ${a}(${m}) {
      int index = ${g};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${h});
      return ${i.texture2D}(${s}, uv);
    }
  `}(n,t)}}let h_=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,p_=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,d_=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,f_=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function vw(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Ti(n){return`offset${n}`}function Oo(n){let t=n.name,e=St(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function an(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function eg(n,t,e){let{newShape:r,keptDims:s}=Zn(t),a=t.length,i=n&&a===3&&t[0]===1,o=i?t.slice(1):r,l=!n&&a>1&&!se(t,e)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function Mo(n,t){let e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function Lo(n,t){return t.map(e=>n[e]).join(", ")}function m_(n,t,e,r){let s=e.map((u,h)=>{let p={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:!u.isUniform&&u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(p.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:p}}),a=s.map(u=>u.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=c_(s,i,t),l=function(u,h){let p=Qs(u,()=>u.createShader(u.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(he(u,()=>u.shaderSource(p,h)),he(u,()=>u.compileShader(p)),Ct().get("ENGINE_COMPILE_ONLY"))return p;if(u.getShaderParameter(p,u.COMPILE_STATUS)===!1)throw dw(h,u.getShaderInfoLog(p)),new Error("Failed to compile fragment shader.");return p}(n.gl,o),c=n.createProgram(l);return Ct().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:c,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:c,inShapeInfos:a,outShapeInfo:i},ww(n,t,c))}function ww(n,t,e){let r={},s={},a={},i=[],o,l,c,u=null,h=null;h=n.getUniformLocation(e,"NAN",!1),Ct().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(e,"INFINITY",!1));let p=!1;for(let d=0;d<t.variableNames.length;d++){let f=t.variableNames[d];r[f]=n.getUniformLocation(e,f,p),r[`offset${f}`]=n.getUniformLocation(e,`offset${f}`,p),t.enableShapeUniforms&&(s[`${f}Shape`]=n.getUniformLocation(e,`${f}Shape`,p),a[`${f}TexShape`]=n.getUniformLocation(e,`${f}TexShape`,p))}return t.enableShapeUniforms&&(o=n.getUniformLocation(e,"outShape",p),c=n.getUniformLocation(e,"outShapeStrides",p),l=n.getUniformLocation(e,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach((d,f)=>{i[f]=n.getUniformLocation(e,d.name,p)}),{uniformLocations:r,customUniformLocations:i,infLoc:u,nanLoc:h,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:l}}function kw(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,r)=>{let s=e.logicalShape,a=t[r],i=a.shape;if(!se(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;let o=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!se(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function ur(n){return Ct().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}class g_{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Il.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=or();this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qh(["r","c","d"],t):Si(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}class y_{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Il.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=or();this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qh(["r","c","d"],t):Si(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}class b_{constructor(t){this.variableNames=["A"],this.outTexUsage=Xr.DOWNLOAD;let e=or();this.outputShape=t,this.userCode=`
      ${yw}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}class x_{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Xr.DOWNLOAD;let e=or();this.outputShape=t,this.userCode=`
      ${yw}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}class v_{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=or();this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`:tg(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${r.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${r.output} = vec4(${s}, 0., 0., 0.);
      }
    `}}class w_{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=or();this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);let s="",a="result";e&&(a="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let o=0;o<=1;o++){let l=2*i+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`:tg(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${a};
        }
    `}}function k_(n){let t=or();return function(e,r){let s=Qs(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(he(e,()=>e.shaderSource(s,r)),he(e,()=>e.compileShader(s)),e.getShaderParameter(s,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(s)),new Error("Failed to compile vertex shader.");return s}(n,`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function I_(n){return function(t,e){let r=Qs(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return he(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),he(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),r}(n,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function N_(n){return function(t,e){let r=Qs(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return he(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r)),he(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),r}(n,new Uint16Array([0,1,2,2,1,3]))}function Tl(n,t,e,r,s,a){(function(l,c){let u=Ct().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(l<=0||c<=0)throw new Error(`Requested texture size [${l}x${c}] is invalid.`);if(l>u||c>u)throw new Error(`Requested texture size [${l}x${c}] greater than WebGL maximum on this browser / GPU [${u}x${u}].`)})(t,e);let i=function(l){return Qs(l,()=>l.createTexture(),"Unable to create WebGLTexture.")}(n),o=n.TEXTURE_2D;return he(n,()=>n.bindTexture(o,i)),he(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),he(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),he(n,()=>n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST)),he(n,()=>n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST)),Ct().getNumber("WEBGL_VERSION")===1?he(n,()=>n.texImage2D(o,0,r,t,e,0,s,a,null)):he(n,()=>n.texStorage2D(o,1,r,t,e)),he(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function Iw(n){return n.internalFormatFloat}function Nw(n){return n.internalFormatHalfFloat}function Sw(n){return n.downloadTextureFormat}function Tw(n){return n.internalFormatPackedFloat}function Cw(n){return n.internalFormatPackedHalfFloat}function S_(n,t,e,r,s,a,i,o){let l=n,c=new Float32Array(function(u,h){let[p,d]=Ao(u,h);return p*d*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}class ng{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let e=Ct().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,function(a,i){Ni[a]=i}(e,t)):this.gl=Ss(e);let r="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),Ct().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Xh(this.gl,a),us(this.gl,i))this.textureHalfFloatExtension=Xh(this.gl,i);else if(Ct().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),us(this.gl,s))this.colorBufferHalfFloatExtension=Xh(this.gl,s);else if(Ct().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",us(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else{if(!us(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=I_(this.gl),this.indexBuffer=N_(this.gl),this.framebuffer=function(a){return Qs(a,()=>a.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=qm(this.gl,this.textureHalfFloatExtension)}get debug(){return Ct().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;he(t,()=>t.finish()),he(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),he(t,()=>t.deleteFramebuffer(this.framebuffer)),he(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),he(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),he(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){let[o,l]=Nl(s,a);return Tl(r,o,l,Iw(i),i.textureFormatFloat,r.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){let[o,l]=Nl(s,a);return Tl(r,o,l,Nw(i),i.textureFormatFloat,i.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){let[o,l]=Nl(s,a);return Tl(r,o,l,Sw(i),r.RGBA,r.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(r,s,a){he(r,()=>r.bindTexture(r.TEXTURE_2D,s)),a.data instanceof Uint8Array?Ct().getNumber("WEBGL_VERSION")===2?he(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,a.width,a.height,r.RGBA,r.UNSIGNED_BYTE,a.data)):he(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,a.width,a.height,0,r.RGBA,r.UNSIGNED_BYTE,a.data)):Ct().getNumber("WEBGL_VERSION")===2?he(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,a)):he(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,a)),he(r,()=>r.bindTexture(r.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,r,s){this.throwIfDisposed(),function(a,i,o,l,c,u){let h,p,d;he(a,()=>a.bindTexture(a.TEXTURE_2D,i)),c instanceof Uint8Array?(h=new Uint8Array(o*l*4),p=a.UNSIGNED_BYTE,d=a.RGBA):(h=new Float32Array(o*l*4),p=a.FLOAT,d=u.internalFormatPackedFloat),h.set(c),Ct().getNumber("WEBGL_VERSION")===2?he(a,()=>a.texSubImage2D(a.TEXTURE_2D,0,0,0,o,l,a.RGBA,p,h)):he(a,()=>a.texImage2D(a.TEXTURE_2D,0,d,o,l,0,a.RGBA,p,h)),he(a,()=>a.bindTexture(a.TEXTURE_2D,null))}(this.gl,t,e,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){let[o,l]=Ao(s,a);return Tl(r,o,l,Cw(i),r.RGBA,i.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){let[o,l]=Ao(s,a);return Tl(r,o,l,Tw(i),r.RGBA,r.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(mw(this.gl,this.framebuffer),this.outputTexture=null),he(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,r){return this.downloadMatrixDriver(t,()=>function(s,a,i,o){let[l,c]=Nl(a,i),u=new Uint8Array(a*i*4);return he(s,()=>s.readPixels(0,0,l,c,o.downloadTextureFormat,s.UNSIGNED_BYTE,u)),new Float32Array(u.buffer)}(this.gl,e,r,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,r,s,a,i){return S_(this.gl,t,0,0,0,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(r,s,a){let i=r,o=new Float32Array(a);return i.bindBuffer(i.PIXEL_PACK_BUFFER,s),i.getBufferSubData(i.PIXEL_PACK_BUFFER,0,o),i.bindBuffer(i.PIXEL_PACK_BUFFER,null),o}(this.gl,t,e)}createBufferFromTexture(t,e,r){this.bindTextureToFrameBuffer(t);let s=function(a,i,o,l){let c=a.createBuffer();he(a,()=>a.bindBuffer(a.PIXEL_PACK_BUFFER,c));let u=16*i*o;return he(a,()=>a.bufferData(a.PIXEL_PACK_BUFFER,u,a.STREAM_READ)),he(a,()=>a.readPixels(0,0,o,i,a.RGBA,a.FLOAT,0)),he(a,()=>a.bindBuffer(a.PIXEL_PACK_BUFFER,null)),c}(this.gl,e,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,r;if(Ct().getBool("WEBGL_FENCE_API_ENABLED")){let s=t,a=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),r=()=>{let i=s.clientWaitSync(a,0,0);return i===s.ALREADY_SIGNALED||i===s.CONDITION_SATISFIED},e=a}else Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(e,Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:e,isFencePassed:r}}downloadMatrixFromPackedTexture(t,e,r){return this.downloadMatrixDriver(t,()=>function(s,a,i){let o=new Float32Array(a*i*4);return he(s,()=>s.readPixels(0,0,i,a,s.RGBA,s.FLOAT,o)),o}(this.gl,e,r))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=k_(e));let r=function(s){return Qs(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}(e);return he(e,()=>e.attachShader(r,this.vertexShader)),he(e,()=>e.attachShader(r,t)),function(s,a){if(he(s,()=>s.linkProgram(a)),!Ct().get("ENGINE_COMPILE_ONLY")&&s.getProgramParameter(a,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(a)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&Km(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(s,a,i){return he(s,()=>s.bindBuffer(s.ARRAY_BUFFER,i)),fw(s,a,"clipSpacePos",i,3,20,0)&&fw(s,a,"uv",i,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&he(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Km(this.gl,this.program),he(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,r=!0){return this.throwIfDisposed(),r?function(s,a,i){return Qs(s,()=>s.getUniformLocation(a,i),'uniform "'+i+'" not present in program.')}(this.gl,t,e):function(s,a,i){return s.getUniformLocation(a,i)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),he(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,r){this.throwIfDisposed(),this.throwIfNoProgram(),i_(this.gl,t,e,r)}setOutputMatrixTexture(t,e,r){this.setOutputMatrixTextureDriver(t,r,e)}setOutputPackedMatrixTexture(t,e,r){this.throwIfDisposed();let[s,a]=Ao(e,r);this.setOutputMatrixTextureDriver(t,s,a)}setOutputMatrixWriteRegion(t,e,r,s){this.setOutputMatrixWriteRegionDriver(r,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Km(this.gl,this.program),Yh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;this.debug&&this.debugValidate(),he(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),he(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Xh(this.gl,Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let r=this.gl,s=this.getQueryTimerExtensionWebGL2(),a=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,a),a}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,r=this.getQueryTimerExtensionWebGL2();return void e.endQuery(r.TIME_ELAPSED_EXT)}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await fr(()=>this.disposed||this.isQueryAvailable(t,Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){let r=this.gl;return r.getQueryParameter(t,r.QUERY_RESULT)/1e6}{let r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let r=this.gl,s=this.getQueryTimerExtensionWebGL2(),a=r.getQueryParameter(t,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=function(e){let r=0;for(;r<e.length&&e[r]();++r);return r-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:r}=this.itemsToPoll[e];r()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in Ct().platform&&(r=Ct().platform.setTimeoutCustom.bind(Ct().platform)),fr(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Xm(this.gl,t,this.framebuffer),this.debug&&Yh(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Xm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Yh(this.gl)):mw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let r=e();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(t,e,r){this.throwIfDisposed();let s=this.gl;Xm(s,t,this.framebuffer),this.debug&&Yh(s),this.outputTexture=t,he(s,()=>s.viewport(0,0,e,r)),he(s,()=>s.scissor(0,0,e,r))}setOutputMatrixWriteRegionDriver(t,e,r,s){this.throwIfDisposed(),he(this.gl,()=>this.gl.scissor(t,e,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}let{addImpl:T_,bincountImpl:$w,bincountReduceImpl:C_,castImpl:$_,ceilImpl:E_,concatImpl:__,equalImpl:A_,expImpl:R_,expm1Impl:F_,floorImpl:D_,gatherNdImpl:O_,gatherV2Impl:M_,greaterImpl:L_,greaterEqualImpl:z_,lessImpl:P_,lessEqualImpl:B_,linSpaceImpl:W_,logImpl:V_,maxImpl:U_,maximumImpl:G_,minimumImpl:H_,multiplyImpl:j_,negImpl:q_,notEqualImpl:K_,prodImpl:X_,raggedGatherImpl:Y_,raggedTensorToTensorImpl:Z_,rangeImpl:J_,rsqrtImpl:Q_,scatterImpl:tA,sigmoidImpl:eA,simpleAbsImpl:Ew,sliceImpl:nA,sparseFillEmptyRowsImpl:rA,sparseReshapeImpl:sA,sparseSegmentReductionImpl:_w,sqrtImpl:aA,stridedSliceImpl:iA,stringNGramsImpl:oA,stringSplitImpl:uA,stringToHashBucketFastImpl:lA,subImpl:cA,tileImpl:hA,topKImpl:pA,transposeImpl:rg,uniqueImpl:dA}=q;function Aw(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function lr(n,t){return t===1?[n]:Aw(n,t)}class fA{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=ur(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=lr("rc",this.rank),r=an(this.rank),s=this.getOutOfBoundsCondition(e),a=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)a=`${t[t.length-1-i]},`+a;e.push(a)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let r=this.rank-2;r<this.rank;r++)e+=`${t[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}class Rw{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);let r="";for(let i=0;i<4;i++){let o="thisRC = rc;";i%2==1&&(o+="thisRC.z += 1;"),i>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}var s,a;this.userCode=`
      ${s=e,a=this.enableShapeUniforms,`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${a?l_(["r","c","d"],"inputShape"):Si(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}
      ${this.enableShapeUniforms?`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`:tg(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${r}

        setOutput(result);
      }
    `}}class mA{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,r){let s=Dw(e,r),a=Ow(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let i=Fw(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let l=this.freeTextures[a].shift();return this.usedTextures[a].push(l),l}let o;return s===qn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===qn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===qn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===qn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===qn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),o}releaseTexture(t,e,r,s){if(this.freeTextures==null)return;let a=Dw(r,s),i=Ow(e,a,s);i in this.freeTextures||(this.freeTextures[i]=[]);let o=Fw(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),l=Ct().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let c=this.usedTextures[i],u=c.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Fw(n,t,e,r,s){let a=function(l,c){switch(l){case qn.PACKED_2X2_FLOAT32:return Tw(c);case qn.PACKED_2X2_FLOAT16:return Cw(c);case qn.UNPACKED_FLOAT32:return Iw(c);case qn.UNPACKED_FLOAT16:return Nw(c);case qn.PACKED_4X1_UNSIGNED_BYTE:return Sw(c);default:throw new Error(`Unknown physical texture type ${l}`)}}(t,r),i;if(s){let[l,c]=Ao(n[0],n[1]);i=l*c}else{let[l,c]=Nl(n[0],n[1]);i=l*c}let o=function(l,c){let u=l;if(c===u.R32F)return 4;if(c===u.R16F)return 2;if(c===u.RGBA32F||c===l.RGBA)return 16;if(c===u.RGBA16F)return 8;if(c===u.RGBA8)return 4;throw new Error(`Unknown internal format ${c}`)}(e,a);return i*o}function Dw(n,t){if(n===Xr.UPLOAD)return qn.PACKED_2X2_FLOAT32;if(n===Xr.RENDER||n==null)return function(e){return Ct().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?qn.PACKED_2X2_FLOAT32:qn.UNPACKED_FLOAT32:e?qn.PACKED_2X2_FLOAT16:qn.UNPACKED_FLOAT16}(t);if(n===Xr.DOWNLOAD||n===Xr.PIXELS)return qn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Ow(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}class ta{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}let ls="if (isnan(x)) return x;",Mw="return abs(x);",gA=ls+`
  return (x < 0.0) ? 0.0 : x;
`,yA=ls+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,zo="return x;";class Ci{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}class bA{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);let e=t.length,r=lr("rc",e),s=an(e),a=function(l,c){if(l===1)return"rc";let u="";for(let h=0;h<l;h++)u+=c[h],h<l-1&&(u+=",");return u}(e,r),i=r.slice(-2),o=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}let xA=rf,sg={},vA=Ct().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class tp extends $t{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ct().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof ng)e=t;else{let s=Ss(Ct().getNumber("WEBGL_VERSION"),t);e=new ng(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let s=Ss(Ct().getNumber("WEBGL_VERSION"));e=new ng(s),this.binaryCache=((r=Ct().getNumber("WEBGL_VERSION"))in sg||(sg[r]={}),sg[r]),this.gpgpuCreatedLocally=!0}var r;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new mA(this.gpgpu),this.numMBBeforeWarning=Ct().global.screen==null?1024:Ct().global.screen.height*Ct().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new bt(this,wa())}nextDataId(){return tp.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,r){if((Ct().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ct().getBool("DEBUG"))&&this.checkNumericalProblems(t),r==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:e,dtype:r,values:t,usage:Xr.UPLOAD,refCount:1}),s}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,r,s,a){if(Ct().getBool("DEBUG")&&this.checkNumericalProblems(e),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:r,dtype:s,values:e,usage:Xr.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let e=this.texData.get(t),{values:r,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:l}=e;if(i!=null){let p;p=l?new Ci(o,zo):new ta(o,zo);let d=this.runWebGLProgram(p,[{dataId:t,shape:o,dtype:s}],s),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(r!=null)return this.convertAndCacheOnCPU(t);if(s==="string")return r;let c=this.activeTimers!=null,u,h;return c&&(u=Jn()),s==="complex64"?h=Xs(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):h=this.getValuesFromTexture(t),c&&(this.downloadWaitMs+=Jn()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){let f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}let e=this.texData.get(t),{values:r,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:l}=e;if(a!=null){let f;f=l?new Ci(s,zo):new ta(s,zo);let m=this.runWebGLProgram(f,[{dataId:t,shape:s,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(r!=null)return this.convertAndCacheOnCPU(t);if(Ct().getBool("DEBUG")&&!Ct().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Ct().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,u,h=null;if(i!=="complex64"&&Ct().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);let f=this.texData.get(c.dataId);h=this.gpgpu.createBufferFromTexture(f.texture.texture,...Kh(s))}if(this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence(),i==="complex64"){let f=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);u=Xs(f[0],f[1])}else if(h==null)u=this.getValuesFromTexture(t);else{let f=St(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),h!=null){let f=this.gpgpu.gl;he(f,()=>f.deleteBuffer(h))}let p=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach(f=>f(p)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&wa().removeDataId(t,this),this.pendingDeletes--),p}readToGPU(t,e={}){let r=this.texData.get(t),{values:s,shape:a,slice:i,dtype:o,isPacked:l,texture:c}=r;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let d;d=l?new Ci(a,zo):new ta(a,zo);let f=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:o}],o),m=this.readToGPU(f,e);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(t,e.customTexShape),h=wa().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let r=e.map(s=>ma(s));return Fe(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Fe(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){let r=t[e];if(!s_(r))throw Ct().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:e,dtype:r,isPacked:s}=this.texData.get(t),a=St(e);if(Ct().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(t),d=this.texData.get(p.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Kh(e)).subarray(0,a);return this.disposeIntermediateTensorInfo(p),f}let i=Ct().getBool("WEBGL_PACK")&&s===!0,o=i?Ym(e):e,l=i?new x_(o):new b_(o),c=this.runWebGLProgram(l,[{shape:o,dtype:r,dataId:t}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let e=this.activeTimers,r=[],s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,t();let a=le(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=le(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(a);o.kernelMs=function(c){let u=0;for(let h=0;h<c.length;h++)u+=c[h];return u}(l),o.getExtraProfileInfo=()=>l.map((c,u)=>({name:i[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Jn(),endMs:null}}endTimer(t){return Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Jn(),t)}async getQueryTime(t){if(Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:r}=this.texData.get(t);return r!=null&&(this.disposeData(r.real.dataId,e),this.disposeData(r.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:e,dtype:r,texShape:s,usage:a,isPacked:i,slice:o}=this.texData.get(t),l=o&&o.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(e,s,a,i)));let u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=vA){return Ct().getBool("WEBGL_CPU_FORWARD")&&t.every(r=>this.texData.get(r.dataId).texture==null&&St(r.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Br("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let e=t.dataSync();return xA(t.shape,e)}packedUnaryOp(t,e,r){let s=new Ci(t.shape,e),a=this.compileAndRun(s,[t],r);return wa().makeTensorFromTensorInfo(a)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let s=Ew(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,s)}if(Ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Mw,t.dtype);let e=new ta(t.shape,Mw),r=this.compileAndRun(e,[t]);return wa().makeTensorFromTensorInfo(r)}makeTensorInfo(t,e,r){let s;if(e==="string"&&r!=null&&r.length>0&&gr(r[0])){let a=r.map(i=>fa(i));s=this.write(a,t,e)}else s=this.write(r,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,r){return wa().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,r),this)}unpackTensor(t){let e=new bA(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){let e=new fA(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){let r=[Ro(t.shape),...Fo(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[Ro(e),...Fo(e)],i=new Rw(a,r),o=[r],l=this.runWebGLProgram(i,[s],t.dtype,o,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}decode(t,e){let r=this.texData.get(t),{isPacked:s,shape:a,dtype:i}=r;e!=null&&z(St(a)<=e[0]*e[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");let o=Ym(a),l;l=s?new y_(o):new g_(o);let c=[e??Kh(o)];return{dtype:i,shape:a,dataId:this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:t}],i,c,!0,e).dataId}}runWebGLProgram(t,e,r,s,a=!1,i){let o=this.makeTensorInfo(t.outputShape,r),l=this.texData.get(o.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===Il.DENSE){let y=i??Kh(t.outputShape);l.texShape=y.map(b=>2*b)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),St(o.shape)===0)return l.values=Ae(o.dtype,0),o;let c=[],u=e.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!t.packedInputs&&St(y.shape)<=Ct().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!t.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!Jh(b.shape,y.shape)){let $=y,_=y.shape;y.shape=b.shape,y=this.packedReshape(y,_),c.push(y),b=this.texData.get(y.dataId),$.shape=_}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(o.dataId);let h={shape:o.shape,texData:l,isUniform:!1},p=function(y,b,$){let _="";b.concat($).forEach(tt=>{let Q=tt.texData!=null&&tt.texData.slice!=null&&tt.texData.slice.flatOffset>0;if(y.enableShapeUniforms&&!tt.isUniform){let et=tt.texData.texShape,{useSqueezeShape:rt,uniformShape:lt,keptDims:ft}=eg(y.packedInputs,tt.shape,et),yt="",kt="",Tt="";if(lt.length===1&&y.packedInputs){let Lt=[Math.ceil(et[0]/2),Math.ceil(et[1]/2)];yt=`${Lt[0]>1}_${Lt[1]>1}`}else if(lt.length!==2||y.packedInputs){if(lt.length>2&&!y.packedInputs){let Lt=Yt(lt);Tt=`${Lt[0]===et[1]}_${Lt[Lt.length-1]===et[1]}`}}else kt=`${lt[0]>1}_${lt[1]>1}`;let It=tt.shape.length,Et=lt.length===2&&se(tt.shape,et),_t=St(tt.shape)===1,At=io(tt.shape,$.shape),Mt=!y.packedInputs&&It===$.shape.length&&se(et,$.texData.texShape),Ot=y.packedInputs||lt.length>2?"":`${et[0]>1}_${et[1]>1}`;_+=`${It}_${Mt}_${rt?ft:""}_${lt.length}_${_t}_${At}_${Et}_${yt}_${kt}_${Tt}_${Ot}_${Q}`}else{let et=tt.isUniform?"uniform":tt.texData.texShape;_+=`${tt.shape}_${et}_${Q}`}});let M=y.userCode,Y=y.constructor.name;return Y+="_"+_+"_"+M+`${Ct().getNumber("WEBGL_VERSION")}`,Y}(t,u,h),d=this.getAndSaveBinary(p,()=>m_(this.gpgpu,t,u,h)),f=this.activeTimers!=null,m;f&&(m=this.startTimer()),Ct().get("ENGINE_COMPILE_ONLY")||function(y,b,$,_,M){b.program.enableShapeUniforms||(kw(b.inShapeInfos,$),kw([b.outShapeInfo],[_]));let Y=_.texData.texture,tt=_.texData.texShape;_.texData.isPacked?y.setOutputPackedMatrixTexture(Y.texture,tt[0],tt[1]):y.setOutputMatrixTexture(Y.texture,tt[0],tt[1]),y.setProgram(b.webGLProgram),Ct().getNumber("WEBGL_VERSION")===1&&b.infLoc!==null&&y.gl.uniform1f(b.infLoc,1/0),b.nanLoc!==null&&y.gl.uniform1f(b.nanLoc,NaN),$.forEach((et,rt)=>{let lt=b.program.variableNames[rt],ft=b.uniformLocations[lt],yt=b.uniformLocations[`offset${lt}`],kt=b.inShapesLocations[`${lt}Shape`],Tt=b.inTexShapesLocations[`${lt}TexShape`];if(kt){let{uniformShape:It}=eg(b.program.packedInputs,et.shape,et.texData.texShape);switch(It.length){case 1:y.gl.uniform1iv(kt,new Int32Array(It));break;case 2:y.gl.uniform2iv(kt,new Int32Array(It));break;case 3:y.gl.uniform3iv(kt,new Int32Array(It));break;case 4:y.gl.uniform4iv(kt,new Int32Array(It))}}if(Tt&&y.gl.uniform2i(Tt,et.texData.texShape[0],et.texData.texShape[1]),ft!=null)if(et.isUniform)if(St(et.shape)<2)y.gl.uniform1f(ft,et.uniformValues[0]);else{let It=et.uniformValues;It instanceof Float32Array||(It=new Float32Array(It)),y.gl.uniform1fv(ft,It)}else et.texData.slice!=null&&yt!=null&&y.gl.uniform1i(yt,et.texData.slice.flatOffset),y.setInputMatrixTexture(et.texData.texture.texture,ft,rt)});let Q=b.outShapeLocation;if(Q)switch(_.shape.length){case 1:y.gl.uniform1iv(Q,new Int32Array(_.shape));break;case 2:y.gl.uniform2iv(Q,new Int32Array(_.shape));break;case 3:y.gl.uniform3iv(Q,new Int32Array(_.shape));break;case 4:y.gl.uniform4iv(Q,new Int32Array(_.shape))}if(b.outShapeStridesLocation){let et=Yt(_.shape);switch(_.shape.length){case 2:y.gl.uniform1iv(b.outShapeStridesLocation,new Int32Array(et));break;case 3:y.gl.uniform2iv(b.outShapeStridesLocation,new Int32Array(et));break;case 4:y.gl.uniform3iv(b.outShapeStridesLocation,new Int32Array(et))}}b.outTexShapeLocation&&y.gl.uniform2i(b.outTexShapeLocation,_.texData.texShape[0],_.texData.texShape[1]),b.program.customUniforms&&M&&b.program.customUniforms.forEach((et,rt)=>{let lt=b.customUniformLocations[rt],ft=M[rt];if(et.type==="float")y.gl.uniform1fv(lt,ft);else if(et.type==="vec2")y.gl.uniform2fv(lt,ft);else if(et.type==="vec3")y.gl.uniform3fv(lt,ft);else if(et.type==="vec4")y.gl.uniform4fv(lt,ft);else if(et.type==="int")y.gl.uniform1iv(lt,ft);else if(et.type==="ivec2")y.gl.uniform2iv(lt,ft);else if(et.type==="ivec3")y.gl.uniform3iv(lt,ft);else{if(et.type!=="ivec4")throw Error(`uniform type ${et.type} is not supported yet.`);y.gl.uniform4iv(lt,ft)}}),y.executeProgram()}(this.gpgpu,d,u,h,s),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));let g=Ct().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=Jn();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!Ct().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&a===!1){let y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(t,e,r,s,a=!1){return r=r||e[0].dtype,this.runWebGLProgram(t,e,r,s,a)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ct().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=wt(()=>{if(!Ct().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=Ct().getBool("DEBUG");Ct().set("DEBUG",!1);let e=this.abs(xe(1e-8)).dataSync()[0];if(Ct().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}uploadToGPU(t){let e=this.texData.get(t),{shape:r,dtype:s,values:a,texture:i,usage:o,isPacked:l}=e;if(i!=null)return;let c=this.activeTimers!=null,u;c&&(u=Jn());let h=e.texShape;if(h==null&&(h=function(p,d=!1){let f=Ct().getNumber("WEBGL_MAX_TEXTURE_SIZE"),m=Ct().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");m===1/0&&Ct().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(m=f/2),d&&(f*=2,m*=2,(p=p.map(($,_)=>_>=p.length-2?ie(p[_]):p[_])).length===1&&(p=[2,p[0]])),p.length!==2&&(p=Zn(p).newShape);let g=St(p),y=null;p.length<=1&&g<=f?y=[1,g]:p.length===2&&p[0]<=f&&p[1]<=f?y=p:p.length===3&&p[0]*p[1]<=f&&p[2]<=f?y=[p[0]*p[1],p[2]]:p.length===3&&p[0]<=f&&p[1]*p[2]<=f?y=[p[0],p[1]*p[2]]:p.length===4&&p[0]*p[1]*p[2]<=f&&p[3]<=f?y=[p[0]*p[1]*p[2],p[3]]:p.length===4&&p[0]<=f&&p[1]*p[2]*p[3]<=f&&(y=[p[0],p[1]*p[2]*p[3]]);let b=y!=null&&Math.max(...y)>m&&Math.min(...y)<=(d?2:1)&&Math.min(...y)>0;if(y==null||b)if(d){let $=Ro(p),_=2,M=2;p.length&&([_,M]=Fo(p)),g=$*(_/2)*(M/2),y=Cr(g).map(Y=>2*Y)}else y=Cr(g);return y}(r,l),e.texShape=h),a!=null){let p=Ym(r),d,f=h[1],m=h[0],g=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!l&&g||([f,m]=Ao(h[0],h[1])),d=l?new w_(p,g):new v_(p,g);let y=g?[m,f]:h,b=this.makeTensorInfo(y,s),$=this.texData.get(b.dataId);$.usage=g?Xr.PIXELS:Xr.UPLOAD,$.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,a);let _=[[m,f]],M=!0,Y=this.runWebGLProgram(d,[b],s,_,M),tt=this.texData.get(Y.dataId);e.texShape=tt.texShape,e.isPacked=tt.isPacked,e.usage=tt.usage,Ct().get("ENGINE_COMPILE_ONLY")?this.disposeData(Y.dataId):(e.texture=tt.texture,e.values=null,this.texData.delete(Y.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=Jn()-u)}else{let p=this.acquireTexture(h,o,s,l);e.texture=p}}convertAndCacheOnCPU(t,e){let r=this.texData.get(t),{dtype:s}=r;return this.releaseGPUData(t),e!=null&&(r.values=function(a,i){if(i==="float32"||i==="complex64")return a;if(i==="int32"||i==="bool"){let o=i==="int32"?new Int32Array(a.length):new Uint8Array(a.length);for(let l=0;l<o.length;++l)o[l]=Math.round(a[l]);return o}throw new Error(`Unknown dtype ${i}`)}(e,s)),r.values}acquireTexture(t,e,r,s){if(this.numBytesInGPU+=this.computeBytes(t,r),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*Yr(e)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(let[,e]of Object.entries(this.binaryCache)){let r=new Promise(s=>{try{this.checkCompletion_(e),s(!0)}catch(a){throw a}});t.push(r)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await F1(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(dw(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,t]of Object.entries(this.binaryCache)){let{uniformLocations:e,customUniformLocations:r,infLoc:s,nanLoc:a,inShapesLocations:i,inTexShapesLocations:o,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=ww(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=r,t.infLoc=s,t.nanLoc=a,t.inShapesLocations=i,t.inTexShapesLocations=o,t.outShapeLocation=l,t.outShapeStridesLocation=c,t.outTexShapeLocation=u}}}tp.nextDataId=0;Bg()&&I0("webgl",()=>new tp,2);let ag=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Po{constructor(t,e,r){this.variableNames=["A","B"],this.outputShape=Ce(e,r),this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}let Cl=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class $l{constructor(t,e,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ce(e,r);let a=this.outputShape.length;this.enableShapeUniforms=ur(a);let i="";if(s)if(a===0||St(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${an(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let o=lr("coords",a);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${o[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${o[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${o[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${o[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}function Lr(n){let{inputs:t,backend:e}=n,{x:r}=t;return e.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}let wA={kernelName:ou,backendName:"webgl",kernelFunc:Lr};function Ba(n){let{inputs:t,backend:e}=n,{real:r,imag:s}=t,a=e.makeTensorInfo(r.shape,"complex64"),i=e.texData.get(a.dataId),o=Lr({inputs:{x:r},backend:e}),l=Lr({inputs:{x:s},backend:e});return i.complexTensorInfos={real:o,imag:l},a}let kA={kernelName:tu,backendName:"webgl",kernelFunc:Ba},Lw="return (a < 0.) ? b * a : a;",zw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,IA={kernelName:Hl,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{alpha:a}=r,i=e.makeTensorInfo([],"float32",da(a,"float32")),o=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $l(zw,s.shape,i.shape):new Po(Lw,s.shape,i.shape),l=e.runWebGLProgram(o,[s,i],"float32");return e.disposeIntermediateTensorInfo(i),l}},Pw="return (a < 0.) ? b * a : a;",Bw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,NA={kernelName:cc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{x:r,alpha:s}=t,a=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $l(Bw,r.shape,s.shape):new Po(Pw,r.shape,s.shape);return e.runWebGLProgram(a,[r,s],"float32")}},Bo="if (isnan(x)) return x;";function We({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:r}){return({inputs:s,backend:a})=>{let{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&e!=null){let u=o.texData.get(i.dataId),h=e(u.values,l);return o.makeTensorInfo(i.shape,l,h)}let c;return c=Ct().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null?new Ci(i.shape,t):new ta(i.shape,n),o.runWebGLProgram(c,[i],l)}}function Kn({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{let{a:l,b:c}=i,u=o;if(r&&l.dtype==="complex64"){let d=u.texData.get(l.dataId),f=u.texData.get(c.dataId),[m,g]=[[d.complexTensorInfos.real,f.complexTensorInfos.real],[d.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(b=>{let[$,_]=b,M={dataId:$.dataId,dtype:$.dtype,shape:l.shape},Y={dataId:_.dataId,dtype:_.dtype,shape:c.shape},tt=new Po(n,l.shape,c.shape);return u.runWebGLProgram(tt,[M,Y],Er($.dtype,_.dtype))}),y=Ba({inputs:{real:m,imag:g},backend:u});return u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(g),y}let h=a||Er(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&s!=null){let d=u.texData.get(l.dataId).values,f=u.texData.get(c.dataId).values,m=l.dtype==="string"?di(d):d,g=l.dtype==="string"?di(f):f,[y,b]=s(l.shape,c.shape,m,g,h),$=u.makeTensorInfo(b,h);return u.texData.get($.dataId).values=y,$}let p;return p=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null?new $l(t,l.shape,c.shape,e):new Po(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],h)}}function El(n,t=!1){if(n==="linear")return"return x;";if(n==="relu")return t?`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`:gA;if(n==="elu")return t?`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if(n==="relu6")return t?`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`:yA;if(n==="prelu")return t?Bw:Pw;if(n==="leakyrelu")return t?zw:Lw;if(n==="sigmoid")return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}class Ww{constructor(t,e,r,s=!1,a=!1,i=!1,o=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=ur(this.outputShape.length);let u=s?t[1]:t[2],h=Math.ceil(u/2),p=s?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",f=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",y="";o&&(g=l?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:c?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:`vec4 activation(vec4 x) {
          ${o}
        }`,y="result = activation(result);");let b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let $="rc.x",_="rc.x";t[0]<e[0]?$=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(_=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${$};
          int batchB = ${_};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}let SA="return areal * breal - aimag * bimag;",TA="return areal * bimag + aimag * breal;";class Vw{constructor(t,e,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ce(e,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}let Uw="return a * b;";function ig(n){let{inputs:t,backend:e}=n,{a:r,b:s}=t,a=Er(r.dtype,s.dtype);if(r.dtype==="complex64"){let o=e.texData.get(r.dataId),l=e.texData.get(s.dataId),c=new Vw(SA,r.shape,s.shape),u=new Vw(TA,r.shape,s.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape}],p=e.runWebGLProgram(c,h,"float32"),d=e.runWebGLProgram(u,h,"float32"),f=Ba({inputs:{real:p,imag:d},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),f}if(e.shouldExecuteOnCPU([r,s])){let o=e.texData.get(r.dataId),l=e.texData.get(s.dataId),[c,u]=j_(r.shape,s.shape,o.values,l.values,a),h=e.makeTensorInfo(u,a);return e.texData.get(h.dataId).values=c,h}let i;return i=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $l(Uw,r.shape,s.shape):new Po(Uw,r.shape,s.shape),e.runWebGLProgram(i,[r,s],a)}let CA={kernelName:gu,backendName:"webgl",kernelFunc:ig};function re(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{shape:a}=r,i=e,o=St(s.shape),l=er(a,o),c=St(l);z(o===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let u=i.texData.get(s.dataId);return!u.isPacked||Jh(s.shape,l)||u.texture!==null&&Jh(u.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(h,p,d){let f=[Ro(h.shape),...Fo(h.shape)],m={dtype:h.dtype,shape:f,dataId:h.dataId},g=[Ro(p),...Fo(p)],y=new Rw(g,f),b=[f],$=d.runWebGLProgram(y,[m],h.dtype,b,!0);return{dataId:$.dataId,shape:p,dtype:$.dtype}}(s,l,i)}let $A={kernelName:pc,backendName:"webgl",kernelFunc:re};class Gw{constructor(t,e){this.variableNames=["x"];let{windowSize:r,batchSize:s,inSize:a,outSize:i}=t;this.outputShape=[s,i];let o=4*Math.floor(r/4),l=r%4,c="sumValue += dot(values, ones);";if(e!=null){let h=1/e;c=`sumValue += dot(values * ${Ge(h)?h.toPrecision(2):h}, ones);`}let u="";a%r>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}class EA{constructor(t,e){this.variableNames=["x"];let{windowSize:r,batchSize:s,inSize:a,outSize:i}=t;this.outputShape=[s,i];let o="0.0",l="";e==="prod"?o="1.0":e==="min"?(o="1.0 / 1e-20",l="min"):e==="max"&&(o="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");let u=4*Math.floor(r/4),h=r%4,p=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";e==="all"?(o="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):e==="any"&&(o="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";a%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${h===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${h===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${c});
      }
    `}}function $i(n,t,e,r){let s=function(i){let o=[];for(;o.length===0||o[o.length-1].outSize!==1;){let l=o.length?o[o.length-1].outSize:i[1],c=lh(l);o.push({inSize:l,windowSize:c,outSize:Math.ceil(l/c)})}return o}(n.shape),a=n;for(let i=0;i<s.length;i++){let{inSize:o,windowSize:l,outSize:c}=s[i],u,h;u=e==="mean"?i===0?new Gw({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c},o):new Gw({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c}):new EA({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c},e),h=a,a=r.runWebGLProgram(u,[a],t),h.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class _A{constructor(t,e){this.variableNames=["A"];let r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[e[i]];this.outputShape=r,this.rank=r.length;let s=an(this.rank),a=function(i){let o=i.length;if(o>6)throw Error(`Transpose for rank ${o} is not yet supported`);let l=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],c=new Array(o);for(let u=0;u<i.length;u++)c[i[u]]=l[u];return c.join()}(e);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}class AA{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=new Array(t.length);for(let u=0;u<r.length;u++)r[u]=t[e[u]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=an(this.rank),a=Aw("rc",this.rank),i=new Array(this.rank);for(let u=0;u<e.length;u++)i[e[u]]=a[u];let o=`vec2(${i.slice(-2).join()})`,l=`++${a[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}function ep(n,t,e){let r=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AA(n.shape,t):new _A(n.shape,t);return e.runWebGLProgram(r,[n],n.dtype)}function np(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;return function(o,l,c,u){let h=l,p=o.shape.length,d=ge(h,o.shape),f=d,m=mn(f,p),g=m!=null,y=o;g&&(y=ep(o,m,u),f=vn(f.length,p)),jn("sum",f,p);let[b,$]=On(y.shape,f),_=b;c&&(_=xn(b,d));let M=St($),Y=re({inputs:{x:y},attrs:{shape:[St(o.shape)/M,M]},backend:u}),tt=$i(Y,id(o.dtype),"sum",u),Q=re({inputs:{x:tt},attrs:{shape:_},backend:u});return u.disposeIntermediateTensorInfo(Y),u.disposeIntermediateTensorInfo(tt),g&&u.disposeIntermediateTensorInfo(y),Q}(s,a,i,e)}let RA={kernelName:bc,backendName:"webgl",kernelFunc:np};function cr(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{perm:a}=r,i=e,o=s.shape.length,l=new Array(o);for(let u=0;u<l.length;u++)l[u]=s.shape[a[u]];let c;if(i.shouldExecuteOnCPU([s])){let u=i.texData.get(s.dataId).values,h=rg(u,s.shape,s.dtype,a,l);c=i.makeTensorInfo(l,s.dtype),i.texData.get(c.dataId).values=h}else c=ep(s,a,i);return c}let FA={kernelName:eo,backendName:"webgl",kernelFunc:cr};function rp({a:n,b:t,transposeA:e,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let c=n.shape.length,u=t.shape.length,h=e?n.shape[c-2]:n.shape[c-1],p=r?t.shape[u-1]:t.shape[u-2],d=e?n.shape[c-1]:n.shape[c-2],f=r?t.shape[u-2]:t.shape[u-1],m=n.shape.slice(0,-2),g=t.shape.slice(0,-2),y=St(m),b=St(g),$=Ce(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);z(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${r} must match.`);let _=e?[y,h,d]:[y,d,h],M=r?[b,f,p]:[b,p,f],Y=re({inputs:{x:n},backend:s,attrs:{shape:_}}),tt=re({inputs:{x:t},backend:s,attrs:{shape:M}}),Q=[Y,tt],et=Math.max(y,b),rt=e?Y.shape[1]:Y.shape[2],lt=a!=null,ft=i!=null,yt=l==="leakyrelu",kt=l!=null?El(l,!0):null,Tt;if((d===1||f===1)&&rt>1e3&&(lt||ft||yt||kt!=null)===!1){let Et=Y,_t=tt;e&&(Et=cr({inputs:{x:Y},backend:s,attrs:{perm:[0,2,1]}}),Q.push(Et)),r&&(_t=cr({inputs:{x:tt},backend:s,attrs:{perm:[0,2,1]}}),Q.push(_t));let At=f===1,Mt=Et;f!==1&&(Mt=re({inputs:{x:Et},backend:s,attrs:{shape:[et,rt,1]}}),Q.push(Mt));let Ot=f===1?2:1,Lt=_t;At&&(Lt=re({inputs:{x:_t},backend:s,attrs:{shape:[et,1,rt]}}),Q.push(Lt));let Pt=ig({inputs:{a:Mt,b:Lt},backend:s});Tt=np({inputs:{x:Pt},backend:s,attrs:{axis:Ot,keepDims:!0}}),Q.push(Pt)}else{let Et=Er(n.dtype,t.dtype),_t=new Ww(_,M,[et,d,f],e,r,lt,kt,ft,yt),At=[Y,tt];if(a!=null&&At.push(a),ft&&At.push(i),yt){let Mt=s.makeTensorInfo([],"float32",da(o,"float32"));At.push(Mt),Q.push(Mt)}Tt=s.runWebGLProgram(_t,At,Et)}let It=re({inputs:{x:Tt},backend:s,attrs:{shape:$}});Q.push(Tt);for(let Et of Q)s.disposeIntermediateTensorInfo(Et);return It}let DA={kernelName:Sc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=r;return rp({a:s,b:a,transposeA:l,transposeB:c,backend:e,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:u})}},Hw="return abs(x);",OA={kernelName:aa,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{x:r}=t;if(e.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let a=e.texData.get(r.dataId),i=Ew(a.values);return e.makeTensorInfo(r.shape,r.dtype,i)}let s;return s=Ct().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ci(r.shape,Hw):new ta(r.shape,Hw),e.runWebGLProgram(s,[r],r.dtype)}},MA=We({opSnippet:ls+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`}),LA={kernelName:ia,backendName:"webgl",kernelFunc:MA},zA=We({opSnippet:ls+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`}),PA={kernelName:Ga,backendName:"webgl",kernelFunc:zA},jw="return a + b;",BA=Kn({opSnippet:jw,packedOpSnippet:jw,supportsComplex:!0,cpuKernelImpl:T_}),WA={kernelName:yr,backendName:"webgl",kernelFunc:BA};class VA{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((a,i)=>`T${i}`);let r=[];this.variableNames.forEach(a=>{r.push(`float v${a} = get${a}AtOutCoords();`)});let s=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}class UA{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((a,i)=>`T${i}`);let r=[];this.variableNames.forEach(a=>{r.push(`vec4 v${a} = get${a}AtOutCoords();`)});let s=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}let GA={kernelName:Li,backendName:"webgl",kernelFunc:function n(t){let{inputs:e,backend:r}=t,s=e;if(s.length===1)return Lr({inputs:{x:s[0]},backend:r});if(s.length>Ct().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),c=n({inputs:s.slice(0,l),backend:r}),u=n({inputs:s.slice(l),backend:r});return n({inputs:[c,u],backend:r})}let a=s.map(l=>l.dtype).reduce((l,c)=>Er(l,c)),i=s.map(l=>l.shape),o=Ct().getBool("WEBGL_PACK")?new UA(s[0].shape,i):new VA(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},HA={kernelName:Yo,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ge(a,s.shape),c=l,u=mn(c,o),h=s;u!=null&&(h=cr({inputs:{x:s},backend:e,attrs:{perm:u}}),c=vn(c.length,o)),jn("all",c,o);let[p,d]=On(h.shape,c),f=re({inputs:{x:h},backend:e,attrs:{shape:[-1,St(d)]}}),m=$i(f,f.dtype,"all",e),g;return i?g=re({inputs:{x:m},backend:e,attrs:{shape:xn(p,l)}}):g=re({inputs:{x:m},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),g}},jA={kernelName:zi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ge(a,s.shape),c=l,u=mn(c,o),h=s;u!=null&&(h=cr({inputs:{x:s},backend:e,attrs:{perm:u}}),c=vn(c.length,o)),jn("any",c,o);let[p,d]=On(h.shape,c),f=re({inputs:{x:h},backend:e,attrs:{shape:[-1,St(d)]}}),m=$i(f,f.dtype,"any",e),g;return i?g=re({inputs:{x:m},backend:e,attrs:{shape:xn(p,l)}}):g=re({inputs:{x:m},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),g}};class qA{constructor(t,e,r){this.variableNames=["A"];let{windowSize:s,batchSize:a,outSize:i}=t;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];let o=e==="max"?">":"<",l=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}class KA{constructor(t,e,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,z(t.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);let a=t[t.length-1],i=Math.ceil(a/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,l=o.length,c=an(l),u=lr("coords",l),h,p;if(i===1){p=l+1;let Q=an(p);h=`
        ${Q} sourceLocR = ${Q}(${u.join()}, 0);
        ++${u[l-1]};
        ${Q} sourceLocG = ${Q}(${u.join()}, 0);
        ++${u[l-2]};
        ${Q} sourceLocA = ${Q}(${u.join()}, 0);
        --${u[l-1]};
        ${Q} sourceLocB = ${Q}(${u.join()}, 0);
        --${u[l-2]};`}else p=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map(Q=>"int "+Q),g=lr("sourceLocR",p-1).concat("inIdx.r"),y=lr("sourceLocG",p-1).concat("inIdx.g"),b=lr("sourceLocB",p-1).concat("inIdx.b"),$=lr("sourceLocA",p-1).concat("inIdx.a"),_=r==="max"?"greaterThan":"lessThan",M=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${$.join()})));`,Y=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${$.join()}) : 0.)`,tt=s?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${tt}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${o[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${Y};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${M}
          vec4 candidate = ${Y};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${_}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function qw(n,t,e,r=null){let s=t.shape[0],a=t.shape[1];r!=null&&(s=r.shape[0],a=r.shape[1]);let i=lh(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new qA(o,e,r==null),c=[t];r!=null&&c.push(r);let u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let h=qw(n,t,e,u);return n.disposeIntermediateTensorInfo(u),h}function Kw(n,t,e,r=null){let s=r!=null?r.shape:t.shape,a=lh(s[s.length-1]),i=new KA(s,a,e,r==null),o=r==null?[t]:[t,r],l=n.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){let c=Kw(n,t,e,l);return n.disposeIntermediateTensorInfo(l),c}return l}function Xw(n,t,e,r){let s=[e];if(jn("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Ct().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],i=n.texData.get(t.dataId),o=t;i!==null&&i.isPacked&&(o=n.unpackTensor(t),a.push(o));let[l,c]=On(o.shape,s),u=St(c),h=re({inputs:{x:o},backend:n,attrs:{shape:[-1,u]}});a.push(h);let p=qw(n,h,r);a.push(p);let d=re({inputs:{x:p},backend:n,attrs:{shape:l}});return a.forEach(f=>n.disposeIntermediateTensorInfo(f)),d}return Kw(n,t,r)}let XA={kernelName:Pi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r,i=ge(a,s.shape),o=mn(i,s.shape.length),l=s,c=[];o!=null&&(l=cr({inputs:{x:s},backend:e,attrs:{perm:o}}),c.push(l),i=vn(i.length,l.shape.length)),jn("argMax",[i[0]],l.shape.length);let u=Xw(e,l,i[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}},YA={kernelName:Bi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r,i=ge(a,s.shape),o=mn(i,s.shape.length),l=s,c=[];o!=null&&(l=cr({inputs:{x:s},backend:e,attrs:{perm:o}}),c.push(l),i=vn(i.length,l.shape.length)),jn("argMin",[i[0]],l.shape.length);let u=Xw(e,l,i[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}},ZA=We({opSnippet:ls+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`}),JA={kernelName:Ha,backendName:"webgl",kernelFunc:ZA},QA=We({opSnippet:ls+"return log(x + sqrt(x * x + 1.0));"}),tR={kernelName:ja,backendName:"webgl",kernelFunc:QA},eR=We({opSnippet:ls+`
  return atan(x);
`}),nR={kernelName:qa,backendName:"webgl",kernelFunc:eR},rR=Kn({opSnippet:ag+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Cl+`
  return result;
`}),sR={kernelName:Xa,backendName:"webgl",kernelFunc:rR},aR=We({opSnippet:ls+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`}),iR={kernelName:Ka,backendName:"webgl",kernelFunc:aR};class _l{constructor(t,e,r,s=!1,a=!1){if(this.variableNames=["x"],e==="avg"&&r)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,o=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let m=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,y=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b="0.0";if(m||(b="-1.0 / 1e-20"),r){let tt=">=";return void(this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${tt} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?a?g:y:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `)}let $=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&($="avgValue / count");let _=4*Math.floor(i/4),M=i%4,Y=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${_}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${Y}
          }

          int xC = xCCorner + ${_};
          if (${M===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${Y}
          } else if (${M===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${Y}
          } else if (${M===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${Y}
          }
        }
        setOutput(${$});
      }
    `}}class og{constructor(t,e,r,s=!1,a=!1){if(this.variableNames=["x"],e==="avg"&&r)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,o=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,p=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let $=e==="avg",_="0.0";if($||(_="-1.0 / 1e-20"),r){let et=">=";return void(this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${et} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `)}let M=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(M="avgValue / count");let Y=4*Math.floor(i/4),tt=i%4,Q=`
      if (${$}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${y}, ${b});
      const float initializationValue = ${_};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${_});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${Y}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${Q}
            }

            int xC = xCCorner + ${Y};
            if (${tt===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${Q}
            } else if (${tt===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${Q}
            } else if (${tt===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${Q}
            }
          }
          setOutput(${M});
        }
      }
    `}}let oR={kernelName:Wi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t;Sl(s,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;z(Hn(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let c=Jr(s.shape,a,i,1,o,l);if(c.filterWidth===1&&c.filterHeight===1&&se(c.inShape,c.outShape))return Lr({inputs:{x:s},backend:e});let u=new _l(c,"avg",!1);return e.runWebGLProgram(u,[s],"float32")}},uR={kernelName:Vi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:c}=r,u=Gs(s.shape,a,i,[1,1,1],o,l,c),h=new og(u,"avg",!1);return e.runWebGLProgram(h,[s],"float32")}};class lR{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,r=t.filterWidth,s=t.strideHeight,a=t.strideWidth,i=t.dilationHeight,o=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,h=c-1-t.padInfo.left,p=1/(e*r);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class cR{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,r=t.filterHeight,s=t.filterWidth,a=t.strideDepth,i=t.strideHeight,o=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=h-1-t.padInfo.front,m=p-1-t.padInfo.top,g=d-1-t.padInfo.left,y=1/(e*r*s);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let hR={kernelName:Ui,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=r,h=Gs(i.shape,o,l,[1,1,1],c,u),p=new cR(h);return e.runWebGLProgram(p,[s],i.dtype)}},pR={kernelName:Zo,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a;Sl([s,a],"avgPoolGrad");let{filterSize:o,strides:l,pad:c}=r,u=Jr(i.shape,o,l,1,c),h=new lR(u);return e.runWebGLProgram(h,[s],i.dtype)}},dR={kernelName:Gi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return rp({a:s,b:a,transposeA:i,transposeB:o,backend:e})}};class fR{constructor(t,e,r,s,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ce(t,e),Ce(t,r);let o="0.0";s!=null&&(Ce(t,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";a!=null&&(Ce(t,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}class mR{constructor(t,e,r,s,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ce(t,e),Ce(t,r);let o="vec4(0.0)";s!=null&&(Ce(t,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";a!=null&&(Ce(t,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}let gR={kernelName:la,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{x:r,mean:s,variance:a,offset:i,scale:o}=n;z(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(o==null||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let c=[r,s,a],u=null;i!=null&&(u=i.shape,c.push(i));let h=null;o!=null&&(h=o.shape,c.push(o));let p=Ct().getBool("WEBGL_PACK_NORMALIZATION")?new mR(r.shape,s.shape,a.shape,u,h,l):new fR(r.shape,s.shape,a.shape,u,h,l);return t.runWebGLProgram(p,c,c[0].dtype)}};class yR{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=an(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let r=function(a){if(a===1)return"sourceLoc";if(a<=6)return ug.slice(0,a).map(i=>"sourceLoc."+i).join(",");throw Error(`Slicing for rank ${a} is not yet supported`)}(this.rank),s;s=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${t.map((a,i)=>`sourceLoc.${ug[i]} = start[${i}] + coords.${ug[i]};`).join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}let ug=["x","y","z","w","u","v"];class bR{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=an(this.rank),r=lr("coords",this.rank),s=lr("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${a})`,o=`
      result.x = ${i};
      if (++${r[this.rank-1]} < ${t[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${i};
        --${s[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${t[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${i};
        if (++${r[this.rank-1]} < ${t[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,h)=>`start[${h}]`).join()});`:t.map((u,h)=>`${s[h]} = ${r[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}function Wo(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,size:i}=r,[o,l]=Mc(s,a,i);if(vd(s,o,l),St(l)===0)return e.makeTensorInfo(l,s.dtype,[]);if(e.shouldExecuteOnCPU([s])||s.dtype==="string"){let h=e.texData.get(s.dataId),p=nA(h.values,o,l,s.shape,s.dtype);return e.makeTensorInfo(l,s.dtype,p)}let{isPacked:c}=e.texData.get(s.dataId),u=kd(s.shape,o,l);if(c||!u){let h=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bR(l):new yR(l),p=[o];return e.runWebGLProgram(h,[s],s.dtype,p)}return e.uploadToGPU(s.dataId),function(h,p,d,f){let m=f.texData.get(h.dataId),g=f.makeTensorInfo(d,h.dtype),y=f.texData.get(g.dataId);Object.assign(y,m),y.refCount=1,y.shape=d,y.dtype=h.dtype;let b=Id(p,Yt(h.shape));m.slice&&(b+=m.slice.flatOffset),y.slice={flatOffset:b,origDataId:m.slice&&m.slice.origDataId||h.dataId};let $=f.dataRefCount.get(y.slice.origDataId)||1;return f.dataRefCount.set(y.slice.origDataId,$+1),g}(s,o,l,e)}let xR={kernelName:yc,backendName:"webgl",kernelFunc:Wo},vR={kernelName:Hi,backendName:"webgl",kernelFunc:n=>{let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,crops:i}=r;z(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((b,$)=>b*$),l=Qu(s.shape,a,o),c=tl(l.length,a.length),u=el(s.shape,a,o),h=wf(i,a.length),p=kf(u,i,a.length),d=[],f=re({inputs:{x:s},backend:e,attrs:{shape:l}}),m=cr({inputs:{x:f},backend:e,attrs:{perm:c}}),g=re({inputs:{x:m},backend:e,attrs:{shape:u}}),y=Wo({inputs:{x:g},backend:e,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}},wR={kernelName:Jo,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i}=r,o=e.readSync(s.dataId),l=e.readSync(a.dataId),c=$w(o,l,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,c)}},kR={kernelName:Qo,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{s0:r,s1:s}=t,a=e.readSync(r.dataId),i=e.readSync(s.dataId),o=Ce(Array.from(a),Array.from(i));return e.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Yw=Kn({opSnippet:"return float(a != b);",cpuKernelImpl:K_,dtype:"bool"}),IR={kernelName:ac,backendName:"webgl",kernelFunc:Yw};function Al(n){let{inputs:t,backend:e}=n,{input:r}=t;return Lr({inputs:{x:e.texData.get(r.dataId).complexTensorInfos.real},backend:e})}let NR={kernelName:Fp,backendName:"webgl",kernelFunc:Al},SR={kernelName:Ya,backendName:"webgl",kernelFunc:function n(t){let{inputs:e,backend:r,attrs:s}=t,{x:a}=e,{dtype:i}=s;if(i==="complex64"){if(a.dtype==="complex64")return Lr({inputs:{x:a},backend:r});let o=Cn(a.shape),l=n({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),c=Ba({inputs:{real:l,imag:o},backend:r});return o.dispose(),r.disposeIntermediateTensorInfo(l),c}if(a.dtype==="complex64"){let o=Al({inputs:{input:a},backend:r}),l=n({inputs:{x:o},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(o),l}if(!mr(a.dtype,i)){let o=Lr({inputs:{x:a},backend:r});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){let o=r.texData.get(a.dataId).values,[l,c,u]=$_(o,a.shape,a.dtype,i);return r.makeTensorInfo(l,c,u)}if(i==="int32")return function(o,l){let c=new ta(o.shape,"return float(int(x));"),u=l.runWebGLProgram(c,[o],"int32");return{dataId:u.dataId,shape:u.shape,dtype:u.dtype}}(a,r);if(i==="bool"){let o=r.makeTensorInfo([],"bool",Ae("bool",1)),l=Yw({inputs:{a,b:o},backend:r});return r.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},Zw="return ceil(x);",TR=We({opSnippet:Zw,packedOpSnippet:Zw,cpuKernelImpl:E_}),CR={kernelName:Za,backendName:"webgl",kernelFunc:TR};class $R{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}class ER{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}let _R={kernelName:Ja,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r,o;o=Ct().getBool("WEBGL_PACK_CLIP")?new ER(s.shape):new $R(s.shape);let l=[[a],[i]];return e.runWebGLProgram(o,[s],s.dtype,l)}};class AR{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}function Jw(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}let RR={kernelName:ji,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{x:r}=t,s=e.texData.get(r.dataId),a=new AR(r.shape),i=[Jw(r,s.complexTensorInfos.real),Jw(r,s.complexTensorInfos.imag)];return e.runWebGLProgram(a,i,i[0].dtype)}};class FR{constructor(t){this.outputShape=[],this.outputShape=As(t,1),this.variableNames=t.map((i,o)=>`T${o}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];let r=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){let o=e[i-1];r.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${o}));`)}let s=e.length,a=e[e.length-1];r.push(`else setOutput(getT${s}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}class DR{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=As(t,e);let r=this.outputShape,s=r.length,a=an(s),i=lr("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map((m,g)=>`T${g}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let m=1;m<l.length;m++)l[m]=l[m-1]+t[m][e];let c=o[e],u=o.slice(-2),h=o.join(),p=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let m=1;m<l.length;m++){let g=l[m-1];p+=`
        if (${c} < ${l[m]}  && ${c} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${sp(o,c,g)}),
            vec2(${sp(u,c,g)}));
        }`}let d=l.length,f=l[l.length-1];p+=`
        return getChannel(
          getT${d}(${sp(o,c,f)}),
          vec2(${sp(u,c,f)}));`,this.userCode=`
      float getValue(${o.map(m=>"int "+m)}) {
        ${p}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[s-1]} = ${i[s-1]} + 1;
        if (${i[s-1]} < ${r[s-1]}) {
          result.g = getValue(${i});
        }

        ${i[s-2]} = ${i[s-2]} + 1;
        if (${i[s-2]} < ${r[s-2]}) {
          result.a = getValue(${i});
        }

        ${i[s-1]} = ${i[s-1]} - 1;
        if (${i[s-2]} < ${r[s-2]} &&
            ${i[s-1]} < ${r[s-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function sp(n,t,e){let r=n.indexOf(t);return n.map((s,a)=>a===r?`${s} - ${e}`:s).join()}function ap(n){let{inputs:t,backend:e}=n,{input:r}=t;return Lr({inputs:{x:e.texData.get(r.dataId).complexTensorInfos.imag},backend:e})}let OR={kernelName:vp,backendName:"webgl",kernelFunc:ap};function Rl(n,t,e){let r=n[0].dtype;if(r==="complex64"){let h=n.map(g=>Al({inputs:{input:g},backend:e})),p=n.map(g=>ap({inputs:{input:g},backend:e})),d=Rl(h,t,e),f=Rl(p,t,e),m=Ba({inputs:{real:d,imag:f},backend:e});return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),p.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}let s=e.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){let h=n.map(b=>{let $=St(b.shape.slice(t));return re({inputs:{x:b},backend:e,attrs:{shape:[-1,$]}})}),p=h.map(b=>({vals:e.readSync(b.dataId),shape:b.shape})),d=As(h.map(b=>b.shape),1),f=h[0].shape[0]===1,m=__(p,d,r,f),g=As(n.map(b=>b.shape),t),y=e.makeTensorInfo(g,r,m);return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}let a=Ct().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(n.length>a){let h=[];for(let d=0;d<n.length;d+=a){let f=n.slice(d,d+a);h.push(Rl(f,t,e))}let p=Rl(h,t,e);for(let d of h)e.disposeIntermediateTensorInfo(d);return p}if(Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){let h=new DR(n.map(p=>p.shape),t);return e.runWebGLProgram(h,n,r)}let{tensors2D:i,outShape:o}=function(h,p,d){let f=As(h.map(g=>g.shape),p);return{tensors2D:h.map(g=>re({inputs:{x:g},attrs:{shape:[-1,St(g.shape.slice(p))]},backend:d})),outShape:f}}(n,t,e),l=new FR(i.map(h=>h.shape)),c=e.runWebGLProgram(l,i,r);i.forEach(h=>e.disposeIntermediateTensorInfo(h));let u=re({inputs:{x:c},attrs:{shape:o},backend:e});return e.disposeIntermediateTensorInfo(c),u}function Qw(n){let{inputs:t,backend:e,attrs:r}=n,{axis:s}=r,a=ge(s,t[0].shape)[0];bf(t.map(l=>l.shape),a);let i=As(t.map(l=>l.shape),a);if(St(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(l=>St(l.shape)>0);return o.length===1?Lr({inputs:{x:o[0]},backend:e}):Rl(o,a,e)}let MR={kernelName:qi,backendName:"webgl",kernelFunc:Qw};class t2{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let i=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,d=t.filterWidth,f=4*Math.floor(t.inChannels/4),m=t.inChannels%4,g=t.dataFormat==="channelsLast",y=g?1:2,b=g?2:3,$=g?3:1,_="",M="";r&&(_=s?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,M="result = activation(result);");let Y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${_}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${$}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${Y}
        ${M}
        setOutput(result);
      }
    `}}class LR{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,r=t.padInfo.top,s=t.padInfo.left,a=t.strideDepth,i=t.strideHeight,o=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,p=t.filterHeight,d=t.filterWidth,f=4*Math.floor(t.inChannels/4),m=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${i}, ${o});
      const ivec3 pads = ivec3(${e}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class e2{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ur(this.outputShape.length);let i=t.padInfo.left,o=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,h=u,p=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
           vec4 xTexelC${2*g};
           int xTexelC${2*g}Ready;
           vec4 xTexelC${2*g+1};
           int xTexelC${2*g+1}Ready;
           vec4 xC${g};`;p+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)p+=`
           xTexelC${2*g} = vec4(0.0);
           xTexelC${2*g}Ready = 0;
           xTexelC${2*g+1} = vec4(0.0);
           xTexelC${2*g+1}Ready = 0;
           xC${g} = vec4(0.0);`;p+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){let y=2*g;if(p+=`
           xC = xCCorner + ${y*l};
           `,o===1){if(y<u&&(i%2==1?(p+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,p+=l===1&&y>0?`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):p+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<u)){let b=i%2==0?ie(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,p+=l>1?`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):p+=b===1?`
                     xC${y+1} = xTexelC${y};
                     `:`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<u&&(i%2==1?(p+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<u&&(p+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(p+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<u&&(p+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<u&&(p+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<u&&(p+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}p+=`
     }
   `,p+=`
     }
   `,p+=`
     }
   `;let d="",f="";r&&(d=s?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:a?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:`vec4 activation(vec4 x) {
           ${r}
         }`,f="result = activation(result);");let m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${p}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}class zR{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);let{dataFormat:r}=e,s=or(),a=r==="channelsLast",i=a?1:2,o=a?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${2*u+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*u+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${s.output} = result;
      }
    `}}function ip(n,t){let e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function n2({x:n,filter:t,convInfo:e,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let l=n.shape,c=r.texData.get(n.dataId),u=e.inChannels,h=l[0]*l[1]*l[2],p=e.outChannels,d=e.dataFormat==="channelsLast",f,m=[];if(a!=null){let g=ip(a.shape,d);g!=null&&(a=re({inputs:{x:a},backend:r,attrs:{shape:g}}),m.push(a))}if(s!=null){let g=ip(s.shape,d);g!=null&&(s=re({inputs:{x:s},backend:r,attrs:{shape:g}}),m.push(s))}if(!((h===1||p===1)&&u>1e3)&&c.isPacked&&d&&c.texture!=null&&l[2]%2!=0&&se(c.shape.slice(-3),l.slice(-3))){let g=l[0]*l[1]*(l[2]+1),y={dataId:n.dataId,shape:[1,g,e.inChannels],dtype:n.dtype},b=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,z(Jh(c.shape,y.shape),()=>`packed reshape ${c.shape} to ${y.shape} isn't free`);let $=re({inputs:{x:t},backend:r,attrs:{shape:[1,e.inChannels,e.outChannels]}});m.push($);let _=rp({a:y,b:$,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),M=r.texData.get(_.dataId);z(M.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=b,M.shape=e.outShape,f=Lr({inputs:{x:_},backend:r}),f.shape=e.outShape,m.push(_)}else{let g=e.outHeight*e.outWidth,y=re({inputs:{x:n},backend:r,attrs:{shape:d?[e.batchSize,g,e.inChannels]:[e.batchSize,e.inChannels,g]}}),b=re({inputs:{x:t},backend:r,attrs:{shape:[1,e.inChannels,e.outChannels]}}),$=rp({a:d?y:b,b:d?b:y,transposeA:!d,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=re({inputs:{x:$},backend:r,attrs:{shape:e.outShape}}),m.push(y),m.push(b),m.push($)}for(let g of m)r.disposeIntermediateTensorInfo(g);return f}function r2({x:n,filter:t,convInfo:e,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:p,dataFormat:d}=e,f=d==="channelsLast",m=l*c*u,g=p*h,y=[e.batchSize,m,g],b=[];if(a!=null){let It=ip(a.shape,f);It!=null&&(a=re({inputs:{x:a},backend:r,attrs:{shape:It}}),b.push(a))}if(s!=null){let It=ip(s.shape,f);It!=null&&(s=re({inputs:{x:s},backend:r,attrs:{shape:It}}),b.push(s))}let $=re({inputs:{x:t},backend:r,attrs:{shape:[1,m,St(t.shape)/m]}});b.push($);let _=new zR(y,e),M=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],Y=r.runWebGLProgram(_,[n],"float32",M),tt=re({inputs:{x:Y},backend:r,attrs:{shape:y}});b.push(Y),b.push(tt);let Q=s!=null,et=a!=null,rt=o==="leakyrelu",lt=o?El(o,!0):null,ft=new Ww(f?tt.shape:$.shape,f?$.shape:tt.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],!0,!1,Q,lt,et,rt),yt=f?[tt,$]:[$,tt];if(s&&yt.push(s),et&&yt.push(a),rt){let It=r.makeTensorInfo([],"float32",da(i,"float32"));yt.push(It),b.push(It)}let kt=r.runWebGLProgram(ft,yt,"float32"),Tt=re({inputs:{x:kt},backend:r,attrs:{shape:e.outShape}});b.push(kt);for(let It of b)r.disposeIntermediateTensorInfo(It);return Tt}let PR={kernelName:Ki,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:c,dimRoundingMode:u}=r,h=Hs(l),p=Dn(s.shape,a.shape,i,c,o,u,!1,h),d;if(p.filterHeight!==1||p.filterWidth!==1||p.dilationHeight!==1||p.dilationWidth!==1||p.strideHeight!==1||p.strideWidth!==1||p.padInfo.type!=="SAME"&&p.padInfo.type!=="VALID")if(p.strideWidth<=2&&h==="channelsLast"&&Ct().getBool("WEBGL_EXP_CONV")){let m=new e2(p),g=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=e.runWebGLProgram(m,[s,a],"float32",g)}else if(Ct().getBool("WEBGL_CONV_IM2COL"))d=r2({x:s,filter:a,convInfo:p,backend:e});else{let m=new t2(p);d=e.runWebGLProgram(m,[s,a],"float32")}else d=n2({x:s,filter:a,convInfo:p,backend:e});let f=re({inputs:{x:d},backend:e,attrs:{shape:p.outShape}});return e.disposeIntermediateTensorInfo(d),f}};class BR{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,r=t.strideWidth,s=t.padInfo.top,a=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${s};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class WR{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,r=t.filterWidth,s=t.strideHeight,a=t.strideWidth,i=t.dataFormat==="channelsLast",o=e-1-t.padInfo.top,l=r-1-t.padInfo.left,c=i?1:2,u=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class VR{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,r=t.strideHeight,s=t.strideWidth,a=t.padInfo.front,i=t.padInfo.top,o=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${a};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class UR{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,r=t.filterHeight,s=t.filterWidth,a=t.strideDepth,i=t.strideHeight,o=t.strideWidth,l=e-1-t.padInfo.front,c=r-1-t.padInfo.top,u=s-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let GR={kernelName:eu,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:u}=r,h=Hs(l),p=Dn(s.shape,u,i,1,o,c,!1,h),d=new BR(p);return e.runWebGLProgram(d,[s,a],"float32")}},HR={kernelName:Xi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:c,dimRoundingMode:u}=r,h=Hs(c),p=Dn(i,a.shape,o,1,l,u,!1,h),d=new WR(p);return e.runWebGLProgram(d,[s,a],"float32")}},jR={kernelName:Yi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,c=Ia(s.shape,a.shape,i,l,o),u=new LR(c);return e.runWebGLProgram(u,[s,a],"float32")}},qR={kernelName:nu,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,c=Ia(s.shape,l,i,1,o),u=new VR(c);return e.runWebGLProgram(u,[s,a],"float32")}},KR={kernelName:Zi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,c=Ia(l,a.shape,o,1,i),u=new UR(c);return e.runWebGLProgram(u,[s,a],"float32")}},XR=We({opSnippet:Bo+`
  return cos(x);
`}),YR={kernelName:hs,backendName:"webgl",kernelFunc:XR},ZR=We({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),JR={kernelName:oa,backendName:"webgl",kernelFunc:ZR};class QR{constructor(t,e,r,s,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,o,l,c]=t,[u]=e,[h,p]=r;this.outputShape=[u,h,p,c];let d=s==="bilinear"?1:0,[f,m]=[o-1+".0",l-1+".0"],[g,y,b]=h>1?[""+(o-1)/(h-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[$,_,M]=p>1?[""+(l-1)/(p-1),"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${$});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${_};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${M};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}let tF={kernelName:ua,backendName:"webgl",kernelFunc:n=>{let{inputs:t,backend:e,attrs:r}=n,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:c}=r,u=new QR(s.shape,a.shape,o,l,c);return e.runWebGLProgram(u,[s,a,i],"float32")}};var Fl;(function(n){n.Prod="*",n.Sum="+"})(Fl||(Fl={}));class s2{constructor(t,e,r,s){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,i=this.op===Fl.Prod?"1.0":"0.0",o=r?i:`getX(${a2(a,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],c="",u="";r?(c=s?"end != "+(l-1):"end != 0",u=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${l}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${an(a)} coords = getOutputCoords();
        int end = ${i2(a,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${i2(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${a2(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function a2(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function i2(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function o2(n,t,e,r,s,a){let i=t.shape.length,o=mn([r],i),l=t;o!=null&&(l=cr({inputs:{x:t},backend:e,attrs:{perm:o}}));let c=vn(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let u=l.shape[c],h=Lr({inputs:{x:l},backend:e});for(let p=0;p<=Math.ceil(Math.log2(u))-1;p++){let d=new s2(n,l.shape,!1,a),f=[[p]],m=h;h=e.runWebGLProgram(d,[h],h.dtype,f),e.disposeIntermediateTensorInfo(m)}if(s){let p=new s2(n,l.shape,s,a),d=h;h=e.runWebGLProgram(p,[h],h.dtype),e.disposeIntermediateTensorInfo(d)}if(o!=null){let p=cr({inputs:{x:h},backend:e,attrs:{perm:Ta(o)}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),p}return h}let eF={kernelName:$s,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return o2(Fl.Prod,s,e,a,i,o)}},nF={kernelName:Ji,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return o2(Fl.Sum,s,e,a,i,o)}},rF={kernelName:Qa,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(s.shape.length===1){let l=e.readSync(s.dataId),c=e.readSync(a.dataId),u=$w(l,c,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,u)}if(s.shape.length===2){let l=e.bufferSync(s),c=e.bufferSync(a),u=C_(l,c,i,o);return e.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class sF{constructor(t,e,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}let aF={kernelName:ru,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=(i==="NHWC"?s.shape[1]:s.shape[2])*a,c=(i==="NHWC"?s.shape[2]:s.shape[3])*a,u=(i==="NHWC"?s.shape[3]:s.shape[1])/(a*a),h=new sF(i==="NHWC"?[o,l,c,u]:[o,u,l,c],a,i);return e.runWebGLProgram(h,[s],s.dtype)}};class u2{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ur(this.outputShape.length);let i=t.filterHeight,o=t.filterWidth,l=t.outChannels/t.inChannels,c="",u="";r&&(c=s?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,u="result = activation(result);");let h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}class l2{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ur(this.outputShape.length);let i=t.outChannels/t.inChannels,o=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,p=h,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<h;y++)d+=`
          vec4 xTexelC${2*y};
          int xTexelC${2*y}Ready;
          vec4 xTexelC${2*y+1};
          int xTexelC${2*y+1}Ready;
          vec4 xC${y};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let y=0;y<h;y++)d+=`
          xTexelC${2*y} = vec4(0.0);
          xTexelC${2*y}Ready = 0;
          xTexelC${2*y+1} = vec4(0.0);
          xTexelC${2*y+1}Ready = 0;
          xC${y} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(p+1)/2;y++){let b=2*y;if(d+=`
          xC = xCCorner + ${b*c};
          `,l===1){if(b<h&&(o%2==1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,d+=c===1&&b>0?`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){let $=o%2==0?ie(c):c;c%2==0&&o%2==1||c%2!=0&&o%2!=1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${$};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,d+=c>1?`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):d+=$===1?`
                    xC${b+1} = xTexelC${b};
                    `:`
                    xCOffset = xC + ${$};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(o%2==1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(d+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(d+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(d+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",m="";r&&(f=s?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`vec4 activation(vec4 x) {
          ${r}
        }`,m="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}let iF={kernelName:Qi,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=r,u=l;u==null&&(u=[1,1]),z(Hn(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let h=Dn(s.shape,a.shape,i,u,o,c,!0),p;p=Ct().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new l2(h):new u2(h);let d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return e.runWebGLProgram(p,[s,a],"float32",d)}};class oF{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,r=t.strideWidth,s=t.padInfo.top,a=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${s};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class uF{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,r=t.filterWidth,s=t.strideHeight,a=t.strideWidth,i=e-1-t.padInfo.top,o=r-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let lF={kernelName:ti,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,filterShape:u}=r,h=Dn(s.shape,u,i,o,l,c,!0),p=new oF(h);return e.runWebGLProgram(p,[s,a],"float32")}},cF={kernelName:su,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:c,inputShape:u}=r,h=Dn(u,a.shape,i,o,l,c,!0),p=new uF(h);return e.runWebGLProgram(p,[s,a],"float32")}};class hF{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}let pF={kernelName:au,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{x:r}=t,s=[...r.shape,...r.shape],a=St(r.shape),i=re({inputs:{x:r},backend:e,attrs:{shape:[a]}}),o=new hF(a),l=e.runWebGLProgram(o,[i],i.dtype),c=re({inputs:{x:l},backend:e,attrs:{shape:s}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),c}};class dF{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:r,padInfo:s,strideHeight:a,strideWidth:i,filterHeight:o,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:h,left:p}=s;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${i});
      const ivec2 pads = ivec2(${h}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}let fF={kernelName:J,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,c=Pu(s.shape,a.shape,i,o,"NHWC",l),u,h=new dF(c);u=e.runWebGLProgram(h,[s,a],"float32");let p=re({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),p}},mF={kernelName:xt,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Rf(s,a.length);Df(i.length,l,a);let{path:c,steps:u}=Of(o,l),h=u.length,p=null,d=i.length,f=[];for(let m=0;m<h;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:b}=Ff(d,l[g]),$;Mf(y)?$=a[g]:($=cr({inputs:{x:a[g]},backend:e,attrs:{perm:y}}),f.push($));let _=$.shape.slice();for(let M=0;M<b.length;++M)_.splice(b[M],0,1);se($.shape,_)||($=re({inputs:{x:$},backend:e,attrs:{shape:_}}),f.push($)),p===null?p=$:(p=ig({inputs:{a:$,b:p},backend:e}),f.push(p))}m<h-1&&(c[m]>=0&&(p=np({inputs:{x:p},backend:e,attrs:{axis:c[m]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(let m of f)m!==p&&e.disposeIntermediateTensorInfo(m);return p}},gF=We({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),yF={kernelName:Nt,backendName:"webgl",kernelFunc:gF},bF={kernelName:Dt,backendName:"webgl",kernelFunc:n=>{let{inputs:t,backend:e}=n,{dy:r,y:s}=t,a=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $l(`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,r.shape,s.shape):new Po("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return e.runWebGLProgram(a,[r,s],r.dtype)}},xF=Kn({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:A_}),vF={kernelName:Gt,backendName:"webgl",kernelFunc:xF},wF=We({opSnippet:`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Nf};
  float a1 = ${Sf};
  float a2 = ${Tf};
  float a3 = ${Cf};
  float a4 = ${$f};
  float a5 = ${Ef};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`}),kF={kernelName:Vt,backendName:"webgl",kernelFunc:wF},c2=We({opSnippet:Bo+`
  return exp(x);
`,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:R_,dtype:"float32"}),IF={kernelName:qt,backendName:"webgl",kernelFunc:c2};function lg(n){let{inputs:t,attrs:e,backend:r}=n,{dim:s}=e,{input:a}=t,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(z(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),re({inputs:{x:a},backend:r,attrs:{shape:o}})}let NF={kernelName:ae,backendName:"webgl",kernelFunc:lg},h2="return exp(x) - 1.0;",SF=We({opSnippet:h2,packedOpSnippet:h2,cpuKernelImpl:F_}),TF={kernelName:de,backendName:"webgl",kernelFunc:SF};class p2{constructor(t,e,r){this.variableNames=["real","imag"];let s=e[1];this.outputShape=e;let a=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${s}.0`:"1.0",o;if(t==="real")o="return real * expR - imag * expI;";else{if(t!=="imag")throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);o="return real * expI + imag * expR;"}this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function d2(n,t,e){let r=e.texData.get(n.dataId),s=St(n.shape),a=n.shape[n.shape.length-1],i=re({inputs:{x:n},backend:e,attrs:{shape:[s/a,a]}}),o=i.shape,l=new p2("real",o,t),c=new p2("imag",o,t),u=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=e.runWebGLProgram(l,u,"float32"),p=e.runWebGLProgram(c,u,"float32"),d=Ba({inputs:{real:h,imag:p},backend:e});e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p);let f=re({inputs:{x:d},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(d),f}let CF={kernelName:Re,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{input:r}=t;return d2(r,!1,e)}};class $F{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function Dl(n){let{backend:t,attrs:e}=n,{shape:r,value:s}=e,{dtype:a}=e;if(a=a||Un(s),a==="string"){let i=Xe(a,St(r));return i.fill(s),t.makeTensorInfo(r,a,i)}{let i=new $F(r,s),o=[[s]];return t.runWebGLProgram(i,[],a,o)}}let EF={kernelName:Ue,backendName:"webgl",kernelFunc:Dl};class _F{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let AF={kernelName:je,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{let{image:e}=n,r=t,s=new _F(e.shape);return r.runWebGLProgram(s,[e],e.dtype)}},f2="return floor(x);",RF=We({opSnippet:f2,packedOpSnippet:f2,cpuKernelImpl:D_}),FF={kernelName:on,backendName:"webgl",kernelFunc:RF},DF=Kn({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),OF={kernelName:br,backendName:"webgl",kernelFunc:DF};class MF{constructor(t){this.variableNames=["A"];let e=or(),[r,s]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}class LF{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=or(),[r,s]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}let zF={kernelName:Zp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{pixels:s}=t,{numChannels:a}=r,i=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[l,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],u=[c,l],h=[c,l,a];if(o||i){let m=Ct().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");Vo!=null&&m===cg||(cg=m,Vo=document.createElement("canvas").getContext("2d",{willReadFrequently:cg})),Vo.canvas.width=l,Vo.canvas.height=c,Vo.drawImage(s,0,0,l,c),s=Vo.canvas}let p=e.makeTensorInfo(u,"int32");e.texData.get(p.dataId).usage=Xr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(p.dataId),s);let d=Ct().getBool("WEBGL_PACK")?new LF(h):new MF(h),f=e.runWebGLProgram(d,[p],"int32");return e.disposeData(p.dataId),f}},Vo,cg=Ct().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),PF={kernelName:Tc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=Hs(u),g=Dn(s.shape,a.shape,l,h,c,p,!1,m),y,b=[],$=i!=null,_=o!=null,M=d==="leakyrelu",Y=()=>{let Q=[s,a],et=(rt,lt)=>{if(lt==="NCHW"&&rt.shape.length===1&&rt.shape[0]!==1){let ft=re({inputs:{x:rt},backend:e,attrs:{shape:[rt.shape[0],1,1]}});return b.push(ft),ft}return rt};if($&&Q.push(et(i,u)),_&&Q.push(et(o,u)),M){let rt=e.makeTensorInfo([],"float32",da(f,"float32"));Q.push(rt),b.push(rt)}return Q};if(g.filterHeight!==1||g.filterWidth!==1||g.dilationHeight!==1||g.dilationWidth!==1||g.strideHeight!==1||g.strideWidth!==1||g.padInfo.type!=="SAME"&&g.padInfo.type!=="VALID")if(g.strideWidth<=2&&m==="channelsLast"&&Ct().getBool("WEBGL_EXP_CONV")){let Q=d?El(d,!0):null,et=new e2(g,$,Q,_,M),rt=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],lt=Y();y=e.runWebGLProgram(et,lt,"float32",rt)}else if(Ct().getBool("WEBGL_CONV_IM2COL"))y=r2({x:s,filter:a,convInfo:g,backend:e,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{let Q=d?El(d,!1):null,et=new t2(g,$,Q,_,M),rt=Y();y=e.runWebGLProgram(et,rt,"float32")}else y=n2({x:s,filter:a,convInfo:g,backend:e,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});let tt=re({inputs:{x:y},backend:e,attrs:{shape:g.outShape}});return b.push(y),b.forEach(Q=>e.disposeIntermediateTensorInfo(Q)),tt}},BF={kernelName:Cc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[],m=u;m==null&&(m=[1,1]),z(Hn(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=Dn(s.shape,a.shape,l,m,c,h,!0),y=Ct().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?El(p,y):null,$=[s,a],_=i!=null,M=o!=null,Y=p==="leakyrelu";if(_&&$.push(i),M&&$.push(o),Y){let rt=e.makeTensorInfo([],"float32",da(d,"float32"));$.push(rt),f.push(rt)}let tt;tt=y?new l2(g,_,b,M,Y):new u2(g,_,b,M,Y);let Q=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],et=e.runWebGLProgram(tt,$,"float32",Q);return f.forEach(rt=>e.disposeIntermediateTensorInfo(rt)),et}};class WF{constructor(t,e,r,s){this.sliceDim=t,this.strides=e,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;let a=an(r.length),i=`
    int index;`;for(let o=0;o<this.sliceDim;o++)i+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}let VF={kernelName:iu,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=St(r.shape),[l,c,u,h]=If(r,s),p=re({inputs:{x:s},backend:e,attrs:{shape:[c,i]}}),d=re({inputs:{x:r},backend:e,attrs:{shape:[St(r.shape)/u,u]}});if(e.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let y=e.readSync(s.dataId),b=e.bufferSync(r),$=O_(y,b,r.dtype,c,i,u,h,r.shape,o);return e.makeTensorInfo(l,r.dtype,$.values)}let f=new WF(i,h,[c,u],r.shape),m=e.runWebGLProgram(f,[d,p],d.dtype),g=re({inputs:{x:m},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),g}};class UF{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let r=an(this.rank),s=function(a,i){let o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[];for(let c=0;c<a.length;c++)c===2?l.push("index"):l.push(`${o[c]}`);return l.join()}(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function m2(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=ge(i,s.shape)[0];if(Ct().get("DEBUG")){let b=e.readSync(a.dataId),$=s.shape[l];for(let _=0;_<b.length;++_){let M=b[_];z(M<=$-1&&M>=0,()=>`GatherV2: the index value ${M} is not in [0, ${$-1}]`)}}let c=zf(s,a,l,o),u=St(a.shape),h=[],p=re({inputs:{x:s},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=re({inputs:{x:a},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(p),h.push(d);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([s,a])||s.dtype==="string"){let b=e.bufferSync(d),$=e.bufferSync(p),_=M_($,b,f);return h.forEach(M=>e.disposeIntermediateTensorInfo(M)),e.makeTensorInfo(c.outputShape,_.dtype,_.values)}let m=new UF(p.shape,f),g=e.runWebGLProgram(m,[p,d],p.dtype);h.push(g);let y=re({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}let GF={kernelName:ca,backendName:"webgl",kernelFunc:m2},HF=Kn({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:L_,dtype:"bool"}),jF={kernelName:to,backendName:"webgl",kernelFunc:HF},qF=Kn({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:z_}),KF={kernelName:ha,backendName:"webgl",kernelFunc:qF},XF={kernelName:xp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{input:r}=t;return d2(r,!0,e)}},YF=We({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),ZF={kernelName:uu,backendName:"webgl",kernelFunc:YF},JF=We({opSnippet:"return float(isinf(x));",dtype:"bool"}),QF={kernelName:lu,backendName:"webgl",kernelFunc:JF},tD=We({opSnippet:"return float(isnan(x));",dtype:"bool"}),eD={kernelName:cu,backendName:"webgl",kernelFunc:tD},nD=Kn({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:P_,dtype:"bool"}),rD={kernelName:jl,backendName:"webgl",kernelFunc:nD},sD=Kn({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:B_,dtype:"bool"}),aD={kernelName:ql,backendName:"webgl",kernelFunc:sD},iD={kernelName:wp,backendName:"webgl",kernelFunc:function(n){let{backend:t,attrs:e}=n,{start:r,stop:s,num:a}=e,i=W_(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},oD=We({opSnippet:Bo+`
  return x < 0.0 ? 0./0. : log(x);
`,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:V_}),uD={kernelName:hu,backendName:"webgl",kernelFunc:oD},lD=We({opSnippet:Bo+`
  return log(1.0 + x);
`}),cD={kernelName:pu,backendName:"webgl",kernelFunc:lD},hD=Kn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),pD={kernelName:Kl,backendName:"webgl",kernelFunc:hD},dD=We({opSnippet:"return float(!(x >= 1.0));"}),fD={kernelName:Xl,backendName:"webgl",kernelFunc:dD},mD=Kn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),gD={kernelName:Yl,backendName:"webgl",kernelFunc:mD};class yD{constructor(t,e,r,s,a){this.variableNames=["x"],this.outputShape=[];let i=e,o=t[3]-1,l;this.outputShape=t;let c=`float(${r}) + float(${s}) * sum`;l=a===.5?`inversesqrt(${c})`:a===1?`1.0/(${c})`:`exp(log(${c}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}class bD{constructor(t,e,r,s,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e,o=t[3]-1,l;this.outputShape=t;let c=`float(${r}) + float(${s}) * sum`;l=a===.5?`inversesqrt(${c})`:a===1?`1.0/(${c})`:`exp(log(${c}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}let xD={kernelName:Zl,backendName:"webgl",kernelFunc:n=>{let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,c=Ct().getBool("WEBGL_PACK_NORMALIZATION")?new bD(s.shape,a,i,o,l):new yD(s.shape,a,i,o,l);return e.runWebGLProgram(c,[s],s.dtype)}};class vD{constructor(t,e,r,s,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=r,this.alpha=s,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${a})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}let wD={kernelName:kp,backendName:"webgl",kernelFunc:n=>{let{inputs:t,backend:e,attrs:r}=n,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:c,beta:u}=r,h=new vD(s.shape,o,l,c,u);return e.runWebGLProgram(h,[s,a,i],s.dtype)}};function g2(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=ge(a,s.shape),c=l,u=mn(c,o),h=u!=null,p=e.shouldExecuteOnCPU([s]),d=s;if(h){if(p){let b=e.texData.get(d.dataId).values,$=new Array(o);for(let M=0;M<$.length;M++)$[M]=s.shape[u[M]];let _=rg(b,s.shape,s.dtype,u,$);d=e.makeTensorInfo($,s.dtype),e.texData.get(d.dataId).values=_}else d=ep(s,u,e);c=vn(c.length,o)}jn("max",c,o);let[f,m]=On(d.shape,c),g,y=f;if(i&&(y=xn(f,l)),p){let b=e.texData.get(d.dataId).values,$=U_(b,St(m),y,s.dtype);g=e.makeTensorInfo(y,s.dtype),e.texData.get(g.dataId).values=$}else g=function(b,$,_,M){let Y=St($),tt=re({inputs:{x:b},attrs:{shape:[St(b.shape)/Y,Y]},backend:M}),Q=$i(tt,b.dtype,"max",M),et=re({inputs:{x:Q},attrs:{shape:_},backend:M});return M.disposeIntermediateTensorInfo(tt),M.disposeIntermediateTensorInfo(Q),et}(d,m,y,e);return h&&e.disposeIntermediateTensorInfo(d),g}let kD={kernelName:Jl,backendName:"webgl",kernelFunc:g2},ID=Kn({opSnippet:ag+`
  return max(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Cl+`
  return result;
`,cpuKernelImpl:G_}),ND={kernelName:du,backendName:"webgl",kernelFunc:ID},SD={kernelName:Ql,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t;Sl(s,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;z(Hn(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let c=Jr(s.shape,a,i,1,o,l);if(c.filterWidth===1&&c.filterHeight===1&&se(c.inShape,c.outShape))return Lr({inputs:{x:s},backend:e});let u=new _l(c,"max",!1);return e.runWebGLProgram(u,[s],s.dtype)}},TD={kernelName:tc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:c}=r,u=Gs(s.shape,a,i,[1,1,1],o,c,l),h=new og(u,"max",!1);return e.runWebGLProgram(h,[s],s.dtype)}};class CD{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,r=t.strideWidth,s=t.dilationHeight,a=t.effectiveFilterHeight,i=t.effectiveFilterWidth,o=a-1-t.padInfo.top,l=i-1-t.padInfo.left,c=a*i-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class $D{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,r=t.strideHeight,s=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,o=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=l-1-t.padInfo.front,p=c-1-t.padInfo.top,d=u-1-t.padInfo.left,f=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let ED={kernelName:Np,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:c,dimRoundingMode:u}=r,h=Gs(i.shape,o,l,[1,1,1],c,u),p=new og(h,"max",!0),d=e.runWebGLProgram(p,[i],i.dtype),f=new $D(h),m=e.runWebGLProgram(f,[s,d],i.dtype);return e.disposeIntermediateTensorInfo(d),m}},_D={kernelName:Ip,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a,output:i}=t,o=a;Sl([a,i],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=r,p=Jr(o.shape,l,c,1,u,h),d=new _l(p,"max",!0),f=e.runWebGLProgram(d,[o],o.dtype),m=new CD(p),g=e.runWebGLProgram(m,[s,f],o.dtype);return e.disposeIntermediateTensorInfo(f),g}};let AD={kernelName:Sp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=e;z(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let c=[1,1];z(Hn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let u=Jr(r.shape,s,a,c,i),[h,p]=function(d,f,m,g){let y=new _l(m,"max",!1),b=g.runWebGLProgram(y,[d],"float32");return y=new _l(m,"max",!0,!0,f),[b,g.runWebGLProgram(y,[d],"float32")]}(r,o,u,l);return[h,p]}};let RD={kernelName:ec,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{x:r}=n,{keepDims:s,axis:a}=t,i=e,o=r.shape.length,l=ge(a,r.shape),c=l,u=mn(c,o),h=u!=null,p=i.shouldExecuteOnCPU([r]),d=[],f=r;if(h){if(p){let $=i.texData.get(f.dataId).values,_=new Array(o);for(let Y=0;Y<_.length;Y++)_[Y]=r.shape[u[Y]];let M=rg($,r.shape,r.dtype,u,_);f=i.makeTensorInfo(_,r.dtype),i.texData.get(f.dataId).values=M}else f=ep(r,u,i);d.push(f),c=vn(c.length,o)}jn("sum",c,o);let[m,g]=On(f.shape,c),y=m;s&&(y=xn(m,l));let b=function($,_,M,Y){let tt=St(_),Q=re({inputs:{x:$},attrs:{shape:[St($.shape)/tt,tt]},backend:Y}),et=$i(Q,"float32","mean",Y),rt=re({inputs:{x:et},attrs:{shape:M},backend:Y});return Y.disposeIntermediateTensorInfo(Q),Y.disposeIntermediateTensorInfo(et),rt}(f,g,y,i);for(let $ of d)i.disposeIntermediateTensorInfo($);return b}},FD={kernelName:nc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ge(a,s.shape),c=l,u=mn(c,o),h=s;u!=null&&(h=cr({inputs:{x:s},backend:e,attrs:{perm:u}}),c=vn(c.length,s.shape.length)),jn("min",c,o);let[p,d]=On(h.shape,c),f=re({inputs:{x:h},backend:e,attrs:{shape:[-1,St(d)]}}),m=$i(f,f.dtype,"min",e),g;return i?g=re({inputs:{x:m},backend:e,attrs:{shape:xn(p,l)}}):g=re({inputs:{x:m},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),g}},DD=Kn({opSnippet:ag+`
  return min(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Cl+`
  return result;
`,cpuKernelImpl:H_}),OD={kernelName:fu,backendName:"webgl",kernelFunc:DD};class MD{constructor(t,e,r){this.variableNames=["x"],this.outputShape=e.map((u,h)=>u[0]+t[h]+u[1]);let s=t.length,a=an(s),i=e.map(u=>u[0]).join(","),o=e.map((u,h)=>u[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c=r==="reflect"?0:1;this.userCode=s!==1?`
      ${a} start = ${a}(${i});
      ${a} end = ${a}(${o});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${l}));
      }
    `:`
        int start = ${i};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `}}class LD{constructor(t,e,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);let s=t.length,a=an(s),i=e.map(f=>f[0]).join(","),o=e.map((f,m)=>f[0]+t[m]).join(","),l=lr("rc",s),c=lr("source",s),u=`${l[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,p=r==="reflect"?0:1,d="";if(s===1){let f=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[s-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{let f=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[s-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[s-2]} += 1;
        if(${l[s-2]} < ${this.outputShape[s-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[s-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${i});
      const ${a} end = ${a}(${o});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}}let zD={kernelName:rc,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{let{x:r}=n,{paddings:s,mode:a}=e,i=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LD(r.shape,s,a):new MD(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},PD=Kn({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Cl+`
  return result;
`}),BD={kernelName:mu,backendName:"webgl",kernelFunc:PD};class WD{constructor(t,e,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}let y2=Kn({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),VD={kernelName:vt,backendName:"webgl",kernelFunc:y2},b2="return a - b;",x2=Kn({opSnippet:b2,packedOpSnippet:b2,supportsComplex:!0,cpuKernelImpl:cA}),UD={kernelName:Au,backendName:"webgl",kernelFunc:x2};function v2(n){let{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{dim:a}=r,i=ge([a],s.shape),o=g2({inputs:{x:s},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),l=xn(o.shape,i),c=re({inputs:{x:o},backend:e,attrs:{shape:l}}),u=x2({inputs:{a:s,b:c},backend:e}),h=c2({inputs:{x:u},backend:e}),p=np({inputs:{x:h},backend:e,attrs:{axis:i,keepDims:!1}}),d=re({inputs:{x:p},backend:e,attrs:{shape:l}}),f=y2({inputs:{a:h,b:d},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),f}let GD={kernelName:wc,backendName:"webgl",kernelFunc:v2},HD={kernelName:Tp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:v2({inputs:{logits:s},backend:e,attrs:{dim:s.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new WD(c,u,a),p=[[i]],d=e.runWebGLProgram(h,[l],"int32",p);return o||e.disposeIntermediateTensorInfo(l),d}},jD=ls+`
  return -x;
`,qD={kernelName:sc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{x:r}=t;if(e.shouldExecuteOnCPU([r])){let a=e.texData.get(r.dataId),[i,o]=q_(a.values,r.shape,r.dtype);return e.makeTensorInfo(o,r.dtype,i)}let s;return s=Ct().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ci(r.shape,`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`):new ta(r.shape,jD),e.runWebGLProgram(s,[r],r.dtype)}},KD=uf,XD={kernelName:Cp,backendName:"webgl",kernelFunc:function(n){Br("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,c=e.readSync(s.dataId),u=e.readSync(a.dataId),{selectedIndices:h}=KD(c,u,i,o,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},YD=lf,ZD={kernelName:$p,backendName:"webgl",kernelFunc:function(n){Br("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=r,u=e.readSync(s.dataId),h=e.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=YD(u,h,i,o,l,c);return[e.makeTensorInfo([p.length],"int32",new Int32Array(p)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}},JD=cf,QD={kernelName:Ep,backendName:"webgl",kernelFunc:function(n){Br("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=r,u=e.readSync(s.dataId),h=e.readSync(a.dataId),p=i,d=o,f=l,m=c,{selectedIndices:g,selectedScores:y}=JD(u,h,p,d,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class t9{constructor(t,e,r,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}let e9={kernelName:oc,backendName:"webgl",kernelFunc:n=>{let{inputs:t,backend:e,attrs:r}=n,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r,c=St(s.shape),u=new t9(c,i,o,l),h=re({inputs:{x:s},backend:e,attrs:{shape:[c]}}),p=e.runWebGLProgram(u,[h],a);e.disposeIntermediateTensorInfo(h);let d=re({inputs:{x:p},backend:e,attrs:{shape:[...s.shape,i]}});return e.disposeIntermediateTensorInfo(p),d}};function op(n){let{inputs:t,backend:e}=n,{x:r}=t;if(r.dtype==="complex64"){let s=Al({inputs:{input:r},backend:e}),a=op({inputs:{x:s},backend:e}),i=ap({inputs:{input:r},backend:e}),o=op({inputs:{x:i},backend:e}),l=Ba({inputs:{real:a,imag:o},backend:e});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),l}return Dl({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:e})}let n9={kernelName:Nc,backendName:"webgl",kernelFunc:op},r9={kernelName:ic,backendName:"webgl",kernelFunc:function n(t){let{inputs:e,backend:r}=t,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let a=Al({inputs:{input:s},backend:r}),i=n({inputs:{x:a},backend:r}),o=ap({inputs:{input:s},backend:r}),l=op({inputs:{x:o},backend:r}),c=Ba({inputs:{real:i,imag:l},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),c}return Dl({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},s9={kernelName:uc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{axis:s}=r;if(t.length===1)return lg({inputs:{input:t[0]},backend:e,attrs:{dim:s}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{Jt(a,c.shape,"All tensors passed to stack must have matching shapes"),z(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=Qw({inputs:t.map(c=>{let u=lg({inputs:{input:c},backend:e,attrs:{dim:s}});return o.push(u),u}),backend:e,attrs:{axis:s}});return o.forEach(c=>e.disposeIntermediateTensorInfo(c)),l}};class a9{constructor(t,e,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);let s=t.length,a=an(s),i=e.map(c=>c[0]).join(","),o=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=s!==1?`
      ${a} start = ${a}(${i});
      ${a} end = ${a}(${o});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `:`
        int start = ${i};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `}}class i9{constructor(t,e,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);let s=t.length,a=an(s),i=e.map(m=>m[0]).join(","),o=e.map((m,g)=>m[0]+t[g]).join(","),l=lr("rc",s),c=lr("source",s),u=`${l[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${l[s-1]} += 1;
       if(${u}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${l[s-2]} += 1;
       if(${l[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${l[s-1]} += 1;
         if(${u}) {`],d=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let m=0,g=s===1?2:4;m<g;m++)f+=`
        ${p[m]}
        if (${d}) {
          result[${m}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=s===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${i});
      const ${a} end = ${a}(${o});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}let w2=n=>{let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,constantValue:i}=r;if(St(s.shape)===0){let c=a.map((u,h)=>u[0]+s.shape[h]+u[1]);return Dl({backend:e,attrs:{shape:c,value:i,dtype:s.dtype}})}let o=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new i9(s.shape,a,i):new a9(s.shape,a,i),l=[[i]];return e.runWebGLProgram(o,[s],s.dtype,l)},o9={kernelName:lc,backendName:"webgl",kernelFunc:w2},u9=Kn({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Cl+`
  return result;
`}),l9={kernelName:yu,backendName:"webgl",kernelFunc:u9},c9={kernelName:hc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],c=ge(a,s.shape),u=c,h=mn(u,o),p,d=s;if(h!=null&&(d=cr({inputs:{x:s},backend:e,attrs:{perm:h}}),u=vn(u.length,o),l.push(d)),jn("prod",u,o),e.shouldExecuteOnCPU([d])){let f=e.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=X_(d.shape,d.dtype,f,u);p=e.makeTensorInfo(g,y,m)}else{let[f,m]=On(d.shape,u),g=St(m),y=re({inputs:{x:d},backend:e,attrs:{shape:[-1,g]}}),b=$i(y,id(s.dtype),"prod",e);p=re({inputs:{x:b},backend:e,attrs:{shape:f}}),l.push(y),l.push(b)}if(i){l.push(p);let f=xn(p.shape,c);p=re({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},h9={kernelName:_p,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map(y=>e.readSync(y.dataId)),c=s.map(y=>y.shape),u=e.readSync(a.dataId),h=e.readSync(i.dataId),[p,d,f]=Y_(l,c,u,a.shape,a.dtype,h,i.shape,o),m=p.map(y=>e.makeTensorInfo([y.length],"int32",y)),g=e.makeTensorInfo(f,a.dtype,d);return m.concat([g])}},p9={kernelName:Ap,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,c=e.readSync(s.dataId),u=e.readSync(a.dataId),h=e.readSync(i.dataId),p=o.map(g=>e.readSync(g.dataId)),d=o.map(g=>g.shape),[f,m]=Z_(c,s.shape,u,a.shape,a.dtype,h,i.shape,p,d,l);return e.makeTensorInfo(f,a.dtype,m)}},k2=n=>{let{backend:t,attrs:e}=n,{start:r,stop:s,step:a,dtype:i}=e,o=J_(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},d9={kernelName:Rp,backendName:"webgl",kernelFunc:k2},f9=We({opSnippet:"return 1.0 / x;"}),m9={kernelName:bu,backendName:"webgl",kernelFunc:f9},g9=We({opSnippet:ls+`
  return (x < 0.0) ? 0.0 : x;
`,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),y9={kernelName:xu,backendName:"webgl",kernelFunc:g9},b9=We({opSnippet:ls+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),x9={kernelName:vu,backendName:"webgl",kernelFunc:b9};class v9{constructor(t,e,r,s,a){this.variableNames=["A"],this.outputShape=[];let[i,o,l,c]=t;this.outputShape=[i,e,r,c];let u=[s&&e>1?o-1:o,s&&r>1?l-1:l],h=[s&&e>1?e-1:e,s&&r>1?r-1:r],p;p=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}class w9{constructor(t,e,r,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,o,l,c]=t;this.outputShape=[i,e,r,c];let u=[s&&e>1?o-1:o,s&&r>1?l-1:l],h=[s&&e>1?e-1:e,s&&r>1?r-1:r],p;p=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}let k9={kernelName:fc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,c]=o,u=Ct().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new w9(s.shape,l,c,a,i):new v9(s.shape,l,c,a,i);return e.runWebGLProgram(u,[s],"float32")}};class I9{constructor(t,e,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,s,a]=e,[,i,o]=t,l=[r&&i>1?s-1:s,r&&o>1?a-1:a],c=[r&&i>1?i-1:i,r&&o>1?o-1:o],u=l[0]/c[0],h=l[1]/c[1],p=1/u,d=1/h,f=2*Math.ceil(p)+2,m=2*Math.ceil(d)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}let N9={kernelName:Op,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r,o=new I9(a.shape,s.shape,i);return e.runWebGLProgram(o,[a],a.dtype)}};class S9{constructor(t,e,r,s,a){this.variableNames=["A"],this.outputShape=[];let[i,o,l,c]=t;this.outputShape=[i,e,r,c];let u=[s&&e>1?o-1:o,s&&r>1?l-1:l],h=[s&&e>1?e-1:e,s&&r>1?r-1:r],p=s?"0.5":"0.0",d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}class T9{constructor(t,e,r,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,o,l,c]=t;this.outputShape=[i,e,r,c];let u=[s&&e>1?o-1:o,s&&r>1?l-1:l],h=[s&&e>1?e-1:e,s&&r>1?r-1:r],p=s?"0.5":"0.0",d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}let C9={kernelName:dc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,c]=o,u=Ct().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new T9(s.shape,l,c,a,i):new S9(s.shape,l,c,a,i);return e.runWebGLProgram(u,[s],s.dtype)}};class $9{constructor(t,e,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,s,a]=e,[,i,o]=t,l=[r&&i>1?s-1:s,r&&o>1?a-1:a],c=[r&&i>1?i-1:i,r&&o>1?o-1:o],u=l[0]/c[0],h=l[1]/c[1],p=1/u,d=1/h,f=2*Math.ceil(p)+2,m=2*Math.ceil(d)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}let E9={kernelName:Dp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r,o=new $9(a.shape,s.shape,i);return e.runWebGLProgram(o,[a],a.dtype)}};class _9{constructor(t,e){this.variableNames=["x"];let r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=t,r===1)return void(this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `);let s=t.map((i,o)=>(l=>e.indexOf(l)!==-1&&t[l]!==1?`${t[l]} - coords[${l}] - 1`:`coords[${l}]`)(o)).join(","),a=an(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}}class A9{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=t;let s=lr("rc",r),a=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,i=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,o=an(r);function l(c){let u=t.map((h,p)=>function(d,f){return e.indexOf(d)!==-1&&t[d]!==1?`${t[d]} - ${f[d]} - 1`:`${f[d]}`}(p,c));return`getChannel(getX(${u.join(",")}), vec2(${u.slice(-2).join(",")}))`}this.userCode=r===1?`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${function(c){return l(c)}(s.slice())};
          if(${a}){
            result.g = ${function(c){return c[r-1]="("+c[r-1]+" + 1)",l(c)}(s.slice())};
          }
          if(${i}) {
            result.b = ${function(c){return c[r-2]="("+c[r-2]+" + 1)",l(c)}(s.slice())};
            if(${a}) {
              result.a = ${function(c){return c[r-1]="("+c[r-1]+" + 1)",c[r-2]="("+c[r-2]+" + 1)",l(c)}(s.slice())};
            }
          }
          setOutput(result);
        }
    `}}let R9={kernelName:mc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dims:a}=r,i=s.shape.length,o=ge(a,s.shape);if(i===0)return Lr({inputs:{x:s},backend:e});let l=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new A9(s.shape,o):new _9(s.shape,o);return e.runWebGLProgram(l,[s],s.dtype)}};class F9{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let r=t[1],s=t[2];this.outputShape=t;let a="";a=typeof e=="number"?`float outputValue = ${e.toFixed(2)};`:`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let D9={kernelName:Jp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{let{image:r}=n,{radians:s,fillValue:a,center:i}=t,o=e,l=new F9(r.shape,a),[c,u]=vf(i,r.shape[1],r.shape[2]),h=[[c,u,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},O9=We({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),M9={kernelName:wu,backendName:"webgl",kernelFunc:O9},L9=We({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Q_}),z9={kernelName:ku,backendName:"webgl",kernelFunc:L9};class I2{constructor(t,e,r,s,a,i,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let l=an(a.length),c=an(i.length),u="";r===1?u="i":r===2&&(u="i, j");let h=`getIndices(${u})`,p="";s===1?p="i":s===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,f=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}let P9={kernelName:Mp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Ju(0,s,i),p=[h/c,c];if(h===0)return e.makeTensorInfo(i,s.dtype);let d=re({inputs:{x:s},backend:e,attrs:{shape:[l,o]}}),f=re({inputs:{x:a},backend:e,attrs:{shape:[l,c]}}),m=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new I2(l,o,d.shape.length,f.shape.length,u,p),y=e.runWebGLProgram(g,[f,d,m],f.dtype),b=re({inputs:{x:y},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(m),b}};class B9{constructor(t,e,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,r];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=Ct().getNumber("WEBGL_VERSION")===2?"while (left < right) {":a,o=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}let W9={kernelName:Lp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{sortedSequence:s,values:a}=t,{side:i}=r,o=new B9(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return e.runWebGLProgram(o,[s,a],"int32",l)}};class V9{constructor(t,e,r){let s,a;if(this.variableNames=["c","a","b"],this.outputShape=e,r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)a="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${o[u]}`),u<t&&l.push(`${o[u]}`);s=l.join(),a=c.join()}let i=an(r);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}let U9={kernelName:gc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{condition:r,t:s,e:a}=t,i=new V9(r.shape.length,s.shape,s.shape.length);return e.runWebGLProgram(i,[r,s,a],Er(s.dtype,a.dtype))}},G9=We({opSnippet:`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${ch};
  float scale = ${hh};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`}),H9={kernelName:Iu,backendName:"webgl",kernelFunc:G9},j9=We({opSnippet:Bo+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:eA}),q9={kernelName:Cu,backendName:"webgl",kernelFunc:j9},K9=We({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),X9={kernelName:Tu,backendName:"webgl",kernelFunc:K9},Y9=We({opSnippet:Bo+`
  return sin(x);
`}),Z9={kernelName:Nu,backendName:"webgl",kernelFunc:Y9},J9=We({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),Q9={kernelName:Su,backendName:"webgl",kernelFunc:J9},t5=We({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),e5={kernelName:$u,backendName:"webgl",kernelFunc:t5},n5={kernelName:xc,backendName:"webgl",kernelFunc:n=>{let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,paddings:i}=r;z(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((y,b)=>y*b),l=[[0,0]];l.push(...i);for(let y=1+a.length;y<s.shape.length;++y)l.push([0,0]);let c=[],u=w2({inputs:{x:s},backend:e,attrs:{paddings:l,constantValue:0}}),h=Qu(u.shape,a,o,!1),p=tl(h.length,a.length,!1),d=el(u.shape,a,o,!1),f=re({inputs:{x:u},backend:e,attrs:{shape:h}}),m=cr({inputs:{x:f},backend:e,attrs:{perm:p}}),g=re({inputs:{x:m},backend:e,attrs:{shape:d}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>e.disposeIntermediateTensorInfo(y)),g}},r5={kernelName:zp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=e.readSync(r.dataId),l=e.readSync(s.dataId),c=e.readSync(a.dataId),u=e.readSync(i.dataId)[0],[h,p,d,f,m]=rA(o,r.shape,r.dtype,l,s.dtype,c,u);return[e.makeTensorInfo(p,r.dtype,h),e.makeTensorInfo([p[0]],s.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},s5={kernelName:Pp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{inputIndices:r,inputShape:s,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(e.readSync(s.dataId)),o=e.readSync(r.dataId),l=Array.from(e.readSync(a.dataId)),[c,u,h]=sA(o,r.shape,r.dtype,i,l);return[e.makeTensorInfo(u,r.dtype,c),e.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},a5={kernelName:Bp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let i=e.readSync(r.dataId),o=e.readSync(s.dataId),l=e.readSync(a.dataId),[c,u]=_w(i,r.shape,r.dtype,o,l,!0);return e.makeTensorInfo(u,r.dtype,c)}},i5={kernelName:Wp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let i=e.readSync(r.dataId),o=e.readSync(s.dataId),l=e.readSync(a.dataId),[c,u]=_w(i,r.shape,r.dtype,o,l);return e.makeTensorInfo(u,r.dtype,c)}},o5={kernelName:Vp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:p}=Ju(0,s,o);if(a.dtype==="string"){let g=e.bufferSync(s),y=e.bufferSync(a),b=ma(e.readSync(i.dataId)[0]),$=tA(g,y,o,p,u,c,l,h,b,!1);return e.makeTensorInfo(o,$.dtype,$.values)}let d=new I2(c,l,s.shape.length,a.shape.length,h,[p,1],!1),f=e.runWebGLProgram(d,[a,s,i],a.dtype),m=re({inputs:{x:f},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(f),m}},u5={kernelName:vc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=ge(i,s.shape)[0],l=Lf(s,a,o),c=s.shape.length,u=new Array(c).fill(0),h=s.shape.slice();return l.map(p=>{let d=[...h];d[o]=p;let f=Wo({inputs:{x:s},backend:e,attrs:{begin:u,size:d}});return u[o]+=p,f})}},N2="return sqrt(x);",l5=We({opSnippet:N2,packedOpSnippet:N2,cpuKernelImpl:aA}),c5={kernelName:Eu,backendName:"webgl",kernelFunc:l5},h5={kernelName:Up,backendName:"webgl",kernelFunc:We({opSnippet:"return x * x;"})},S2="return (a - b) * (a - b);",p5=Kn({opSnippet:S2,packedOpSnippet:S2}),d5={kernelName:_u,backendName:"webgl",kernelFunc:p5},f5={kernelName:Ou,backendName:"webgl",kernelFunc:function({inputs:n,attrs:t,backend:e}){let{x:r}=n,s=ls+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new ta(r.shape,s);return e.runWebGLProgram(a,[r],r.dtype)}};class m5{constructor(t,e,r){this.variableNames=["x"],this.outputShape=r;let s=r.length,a=an(r.length),i=an(r.length),o="";if(s===1)o="coords * strides + begin";else{let l=0;o=r.map((c,u)=>(l++,r.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${t});
      ${a} strides = ${a}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}let g5={kernelName:Gp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:$,strides:_}=Nd(s.shape,a,i,o,l,c,u,h,p),M;if(m)M=re({inputs:{x:s},backend:e,attrs:{shape:f}});else if(g||y){z(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let tt=wd(b,$,_),Q=Wo({inputs:{x:s},backend:e,attrs:{begin:b,size:tt}});M=re({inputs:{x:Q},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(Q)}else if(e.shouldExecuteOnCPU([s])){let tt=e.readSync(s.dataId),Q=Fe(s.shape,s.dtype,tt),et=iA(d,Q,_,b);M=e.makeTensorInfo(f,s.dtype,et.values)}else{let tt=new m5(b,_,d);M=e.runWebGLProgram(tt,[s],s.dtype)}let Y=re({inputs:{x:M},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(M),Y}},y5={kernelName:Hp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:c}=r,{data:u,dataSplits:h}=t,p=e.readSync(u.dataId),d=e.readSync(h.dataId),[f,m]=oA(p,d,s,a,i,o,l,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",m)]}},b5={kernelName:jp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=e.readSync(a.dataId),l=e.readSync(i.dataId)[0],[c,u,h]=uA(o,l,s),p=u.length;return[e.makeTensorInfo([p,2],"int32",c),e.makeTensorInfo([p],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}},x5={kernelName:qp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{numBuckets:s}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");let i=e.readSync(a.dataId),o=lA(i,s);return e.makeTensorInfo(a.shape,"int32",o)}},v5=We({opSnippet:"return tan(x);"}),w5={kernelName:Ru,backendName:"webgl",kernelFunc:v5},k5=We({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),I5={kernelName:Fu,backendName:"webgl",kernelFunc:k5};class N5{constructor(t,e){this.variableNames=["A"];let r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[i]*e[i];this.outputShape=r,this.rank=r.length;let s=an(this.rank),a=function(i){let o=i.length;if(o>5)throw Error(`Tile for rank ${o} is not yet supported`);if(o===1)return`imod(resRC, ${i[0]})`;let l=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],c=[];for(let u=0;u<i.length;u++)c.push(`imod(${l[u]}, ${i[u]})`);return c.join()}(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function T2(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reps:a}=r;if(s.dtype==="string"||s.shape.length>5){let o=e.readSync(s.dataId),l=s.dtype==="string"?o.map(h=>ma(h)):o,c=Fe(s.shape,s.dtype,l),u=hA(c,a);return e.makeTensorInfo(u.shape,u.dtype,u.values)}let i=new N5(s.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}let S5={kernelName:Du,backendName:"webgl",kernelFunc:T2};class T5{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class C5{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function Ei(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function C2(n){let t=1;for(;t<n;)t*=2;return t}let $5={kernelName:Kp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{k:a,sorted:i}=r,o=Ct().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ct().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([s])||u<o||a>l){let et=e.readSync(s.dataId),[rt,lt]=pA(et,c,s.dtype,a,i);return[e.makeTensorInfo(rt.shape,rt.dtype,rt.values),e.makeTensorInfo(lt.shape,lt.dtype,lt.values)]}if(a===0)return c[c.length-1]=0,[e.makeTensorInfo(c,s.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[s,Dl({attrs:{shape:c,dtype:"int32",value:0},backend:e})];let h=e.texData.get(s.dataId),p=h!==null&&h.isPacked,d=p?e.unpackTensor(s):s,f=St(c)/u,m=re({inputs:{x:d},attrs:{shape:[f,u]},backend:e});p&&Ei(e,d);let g=C2(a),y=C2(u),b=null,$=()=>b===null?[m,m]:[m,b],_=(et,rt,lt)=>{let ft=$(),yt=new T5(lt),kt=[[u],[b===null?1:0],[Number.NEGATIVE_INFINITY],[et],[rt]],Tt=b;b=e.runWebGLProgram(yt,ft,"int32",kt),Ei(e,Tt)};for(let et=1;et<g;et*=2){let rt=2*et;for(let lt=et;lt>=1;lt/=2)_(rt,lt,[f,y])}for(let et=y;et>g;et/=2){let rt=$(),lt=new C5([f,et/2]),ft=[[u],[b===null?1:0],[g]],yt=b;b=e.runWebGLProgram(lt,rt,"int32",ft),Ei(e,yt);let kt=g/2,Tt=2*kt;for(let It=kt;It>=1;It/=2)_(Tt,It,b.shape)}let M=b;b=Wo({inputs:{x:b},backend:e,attrs:{begin:0,size:[f,a]}}),Ei(e,M);let Y=m2({inputs:{x:m,indices:b},backend:e,attrs:{axis:1,batchDims:1}});Ei(e,m);let tt=c.slice(0,-1);tt.push(a),M=b,b=re({inputs:{x:b},attrs:{shape:tt},backend:e}),Ei(e,M);let Q=Y;return Y=re({inputs:{x:Y},attrs:{shape:tt},backend:e}),Ei(e,Q),[Y,b]}};class E5{constructor(t,e,r,s,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let o=r==="nearest"?1:2,l;switch(s){case"constant":default:l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}let _5={kernelName:Xp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:c}=r,[u,h,p,d]=s.shape,[f,m]=c??[h,p],g=new E5(h,p,i,o,l,[u,f,m,d]);return e.runWebGLProgram(g,[s,a],"float32")}},A5={kernelName:Yp,backendName:"webgl",kernelFunc:function(n){let{inputs:t,attrs:e,backend:r}=n,{axis:s}=e,{x:a}=t;Sl(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:c}=dA(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},R5={kernelName:kc,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let i=s,o=i.shape.length,l=s.shape[a],c=new Array(o-1),u=0;for(let m=0;m<o;m++)m!==a&&(c[u++]=i.shape[m]);let h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=Wo({inputs:{x:i},backend:e,attrs:{begin:p,size:d}}),y=re({inputs:{x:g},backend:e,attrs:{shape:c}});f[m]=y,h.push(g)}return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}};class F5{constructor(t,e){this.variableNames=["x","segmentIds"];let r=t.windowSize,s=t.batchSize,a=t.inSize,i=t.numSegments,o=i*Math.ceil(a/r);this.outputShape=[s,o];let l=4*Math.floor(r/4),c=r%4,u=`
        sumValue += dot(values, segFilter);
    `,h="";a%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let p="";a%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${u}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${u}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${u}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${u}
        }
        setOutput(sumValue);
      }
    `}}let D5={kernelName:Ic,backendName:"webgl",kernelFunc:function(n){let{inputs:t,backend:e,attrs:r}=n,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[],c=0,u=mn([c],o),h=s;u!=null&&(h=cr({inputs:{x:s},backend:e,attrs:{perm:u}}),l.push(h),c=vn(1,o)[0]);let p=ty(h.shape,c,i),d=St([h.shape[c]]),f=re({inputs:{x:h},backend:e,attrs:{shape:[-1,d]}});l.push(f);let m=id(s.dtype),g=($,_,M,Y,tt)=>{let Q=$.shape[0],et=$.shape[1],rt=Q1(et,tt),lt=new F5({windowSize:rt,inSize:et,batchSize:Q,numSegments:tt},_),ft=e.compileAndRun(lt,[$,M],Y);if(l.push(ft),ft.shape[1]===tt)return ft;let yt=k2({backend:e,attrs:{start:0,stop:tt,step:1,dtype:"float32"}}),kt=T2({inputs:{x:yt},backend:e,attrs:{reps:[et/rt]}});return l.push(yt),l.push(kt),g(ft,_,kt,Y,tt)},y=re({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:e,attrs:{shape:p}}),b=y;if(u!=null){l.push(y);let $=Ta(u);b=cr({inputs:{x:b},backend:e,attrs:{perm:$}})}return l.forEach($=>e.disposeIntermediateTensorInfo($)),b}},O5=[DA,OA,LA,PA,WA,GA,HA,jA,XA,YA,JA,tR,nR,sR,iR,oR,uR,hR,pR,dR,gR,vR,wR,kR,SR,CR,_R,kA,RR,MR,PR,GR,HR,jR,qR,KR,YR,JR,tF,eF,nF,rF,aF,iF,lF,cF,pF,fF,mF,yF,bF,vF,kF,IF,NF,TF,CF,EF,AF,FF,OF,zF,PF,BF,VF,GF,jF,KF,wA,XF,OR,ZF,QF,eD,IA,rD,aD,iD,uD,cD,pD,fD,gD,xD,wD,kD,ND,SD,TD,ED,_D,AD,RD,FD,OD,zD,BD,HD,CA,qD,XD,ZD,QD,IR,e9,r9,s9,o9,l9,NA,c9,h9,p9,d9,NR,VD,m9,y9,x9,$A,k9,N9,C9,E9,R9,D9,M9,z9,P9,W9,U9,H9,q9,X9,Z9,Q9,xR,GD,e5,n5,r5,s5,a5,i5,o5,u5,c5,h5,d5,f5,g5,y5,b5,x5,UD,RA,w5,I5,S5,$5,_5,FA,A5,R5,D5,n9];for(let n of O5)Cg(n);__webpack_require__(254);let Ol={moveTickSize:50,videoContainerId:"webgazerVideoContainer",videoElementId:"webgazerVideoFeed",videoElementCanvasId:"webgazerVideoCanvas",faceOverlayId:"webgazerFaceOverlay",faceFeedbackBoxId:"webgazerFaceFeedbackBox",gazeDotId:"webgazerGazeDot",videoViewerWidth:320,videoViewerHeight:240,faceFeedbackBoxRatio:.66,showVideo:!0,mirrorVideo:!0,showFaceOverlay:!0,showFaceFeedbackBox:!0,showGazeDot:!0,camConstraints:{video:{width:{min:320,ideal:640,max:1920},height:{min:240,ideal:480,max:1080},facingMode:"user"}},dataTimestep:50,showVideoPreview:!0,applyKalmanFilter:!0,saveDataAcrossSessions:!0,storingPoints:!1,trackEye:"both"};__webpack_require__(730);var M5=__webpack_require__(483),Ml=__webpack_require__.n(M5),hg=function(){return(hg=Object.assign||function(n){for(var t,e=1,r=arguments.length;e<r;e++)for(var s in t=arguments[e])Object.prototype.hasOwnProperty.call(t,s)&&(n[s]=t[s]);return n}).apply(this,arguments)};function ea(n,t,e,r){return new(e||(e=Promise))(function(s,a){function i(c){try{l(r.next(c))}catch(u){a(u)}}function o(c){try{l(r.throw(c))}catch(u){a(u)}}function l(c){var u;c.done?s(c.value):(u=c.value,u instanceof e?u:new e(function(h){h(u)})).then(i,o)}l((r=r.apply(n,t||[])).next())})}function na(n,t){var e,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(l){return function(c){return function(u){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,r&&(s=2&u[0]?r.return:u[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,u[1])).done)return s;switch(r=0,s&&(u=[2&u[0],s.value]),u[0]){case 0:case 1:s=u;break;case 4:return i.label++,{value:u[1],done:!1};case 5:i.label++,r=u[1],u=[0];continue;case 7:u=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||u[0]!==6&&u[0]!==2)){i=0;continue}if(u[0]===3&&(!s||u[1]>s[0]&&u[1]<s[3])){i.label=u[1];break}if(u[0]===6&&i.label<s[1]){i.label=s[1],s=u;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(u);break}s[2]&&i.ops.pop(),i.trys.pop();continue}u=t.call(n,i)}catch(h){u=[6,h],r=0}finally{e=s=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([l,c])}}}function Uo(n,t,e,r){return new(e||(e=Promise))(function(s,a){function i(c){try{l(r.next(c))}catch(u){a(u)}}function o(c){try{l(r.throw(c))}catch(u){a(u)}}function l(c){var u;c.done?s(c.value):(u=c.value,u instanceof e?u:new e(function(h){h(u)})).then(i,o)}l((r=r.apply(n,t||[])).next())})}function Go(n,t){var e,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(l){return function(c){return function(u){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,r&&(s=2&u[0]?r.return:u[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,u[1])).done)return s;switch(r=0,s&&(u=[2&u[0],s.value]),u[0]){case 0:case 1:s=u;break;case 4:return i.label++,{value:u[1],done:!1};case 5:i.label++,r=u[1],u=[0];continue;case 7:u=i.ops.pop(),i.trys.pop();continue;default:if(!(s=(s=i.trys).length>0&&s[s.length-1])&&(u[0]===6||u[0]===2)){i=0;continue}if(u[0]===3&&(!s||u[1]>s[0]&&u[1]<s[3])){i.label=u[1];break}if(u[0]===6&&i.label<s[1]){i.label=s[1],s=u;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(u);break}s[2]&&i.ops.pop(),i.trys.pop();continue}u=t.call(n,i)}catch(h){u=[6,h],r=0}finally{e=s=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([l,c])}}}var $2=function(n){return{startEndTensor:n,startPoint:ve(n,[0,0],[-1,2]),endPoint:ve(n,[0,2],[-1,2])}},L5={strides:[8,16],anchors:[2,6]};function E2(n,t){var e,r,s;if(n.topLeft instanceof Me&&n.bottomRight instanceof Me){var a=wt(function(){return[un([ve(ne(t-1,n.topLeft),0,1),ve(n.topLeft,1,1)]),un([ne(t-1,ve(n.bottomRight,0,1)),ve(n.bottomRight,1,1)])]});e=a[0],r=a[1],n.landmarks!=null&&(s=wt(function(){var d=ne(wn([t-1,0]),n.landmarks),f=wn([1,-1]);return ht(d,f)}))}else{var i=n.topLeft,o=i[0],l=i[1],c=n.bottomRight,u=c[0],h=c[1];e=[t-1-o,l],r=[t-1-u,h],n.landmarks!=null&&(s=n.landmarks.map(function(d){return[t-1-d[0],d[1]]}))}var p={topLeft:e,bottomRight:r};return s!=null&&(p.landmarks=s),n.probability!=null&&(p.probability=n.probability instanceof Me?n.probability.clone():n.probability),p}function _2(n,t){return wt(function(){var e;return e=n.hasOwnProperty("box")?n.box:n,Fr(function(r,s){var a=ht(r.startPoint,s),i=ht(r.endPoint,s),o=Wc([a,i],1);return $2(o)}(e,t).startEndTensor)})}var z5=function(){function n(t,e,r,s,a,i){this.blazeFaceModel=t,this.width=e,this.height=r,this.maxFaces=s,this.anchorsData=function(o,l,c){for(var u=[],h=0;h<c.strides.length;h++)for(var p=c.strides[h],d=Math.floor((l+p-1)/p),f=Math.floor((o+p-1)/p),m=c.anchors[h],g=0;g<d;g++)for(var y=p*(g+.5),b=0;b<f;b++)for(var $=p*(b+.5),_=0;_<m;_++)u.push([$,y]);return u}(e,r,L5),this.anchors=qs(this.anchorsData),this.inputSizeData=[e,r],this.inputSize=wn([e,r]),this.iouThreshold=a,this.scoreThreshold=i}return n.prototype.getBoundingBoxes=function(t,e,r){return r===void 0&&(r=!0),Uo(this,void 0,void 0,function(){var s,a,i,o,l,c,u,h,p,d,f,m,g,y,b=this;return Go(this,function($){switch($.label){case 0:return s=wt(function(){var _=bs.resizeBilinear(t,[b.width,b.height]),M=ht(ne(oe(_,255),.5),2),Y=b.blazeFaceModel.predict(M),tt=Fr(Y),Q=function(rt,lt,ft){var yt=ve(rt,[0,1],[-1,2]),kt=Bt(yt,lt),Tt=ve(rt,[0,3],[-1,2]),It=oe(Tt,ft),Et=oe(kt,ft),_t=oe(It,2),At=ne(Et,_t),Mt=Bt(Et,_t),Ot=ht(At,ft),Lt=ht(Mt,ft);return Wc([Ot,Lt],1)}(tt,b.anchors,b.inputSize),et=ve(tt,[0,0],[-1,1]);return[tt,Q,Fr(fs(et))]}),a=s[0],i=s[1],o=s[2],l=console.warn,console.warn=function(){},c=bs.nonMaxSuppression(i,o,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=l,[4,c.array()];case 1:return u=$.sent(),c.dispose(),h=u.map(function(_){return ve(i,[_,0],[1,-1])}),e?[3,3]:[4,Promise.all(h.map(function(_){return Uo(b,void 0,void 0,function(){var M;return Go(this,function(Y){switch(Y.label){case 0:return[4,_.array()];case 1:return M=Y.sent(),_.dispose(),[2,M]}})})}))];case 2:h=$.sent(),$.label=3;case 3:for(p=t.shape[1],d=t.shape[2],f=e?oe([d,p],this.inputSize):[d/this.inputSizeData[0],p/this.inputSizeData[1]],m=[],g=function(_){var M=h[_],Y=wt(function(){var tt=$2(M instanceof Me?M:qs(M));if(!r)return tt;var Q,et=u[_];return Q=e?ve(b.anchors,[et,0],[1,2]):b.anchorsData[et],{box:tt,landmarks:mt(Fr(ve(a,[et,5],[1,-1])),[6,-1]),probability:ve(o,[et],[1]),anchor:Q}});m.push(Y)},y=0;y<h.length;y++)g(y);return i.dispose(),o.dispose(),a.dispose(),[2,{boxes:m,scaleFactor:f}]}})})},n.prototype.estimateFaces=function(t,e,r,s){return e===void 0&&(e=!1),r===void 0&&(r=!1),s===void 0&&(s=!0),Uo(this,void 0,void 0,function(){var a,i,o,l,c,u,h=this;return Go(this,function(p){switch(p.label){case 0:return a=function(d){return d instanceof Me?[d.shape[0],d.shape[1]]:[d.height,d.width]}(t),i=a[1],o=wt(function(){return t instanceof Me||(t=d0(t)),vr(ee(t,"float32"),0)}),[4,this.getBoundingBoxes(o,e,s)];case 1:return l=p.sent(),c=l.boxes,u=l.scaleFactor,o.dispose(),e?[2,c.map(function(d){var f=_2(d,u),m={topLeft:ve(f,[0],[2]),bottomRight:ve(f,[2],[2])};if(s){var g=d,y=g.landmarks,b=g.probability,$=g.anchor,_=ht(Bt(y,$),u);m.landmarks=_,m.probability=b}return r&&(m=E2(m,i)),m})]:[2,Promise.all(c.map(function(d){return Uo(h,void 0,void 0,function(){var f,m,g,y,b,$,_,M,Y,tt,Q,et=this;return Go(this,function(rt){switch(rt.label){case 0:return f=_2(d,u),s?[3,2]:[4,f.array()];case 1:return b=rt.sent(),m={topLeft:b.slice(0,2),bottomRight:b.slice(2)},[3,4];case 2:return[4,Promise.all([d.landmarks,f,d.probability].map(function(lt){return Uo(et,void 0,void 0,function(){return Go(this,function(ft){return[2,lt.array()]})})}))];case 3:g=rt.sent(),y=g[0],b=g[1],$=g[2],_=d.anchor,Y=(M=u)[0],tt=M[1],Q=y.map(function(lt){return[(lt[0]+_[0])*Y,(lt[1]+_[1])*tt]}),m={topLeft:b.slice(0,2),bottomRight:b.slice(2),landmarks:Q,probability:$},function(lt){lt.startEndTensor.dispose(),lt.startPoint.dispose(),lt.endPoint.dispose()}(d.box),d.landmarks.dispose(),d.probability.dispose(),rt.label=4;case 4:return f.dispose(),r&&(m=E2(m,i)),[2,m]}})})}))]}})})},n}();function P5(n){var t=n===void 0?{}:n,e=t.maxFaces,r=e===void 0?10:e,s=t.inputWidth,a=s===void 0?128:s,i=t.inputHeight,o=i===void 0?128:i,l=t.iouThreshold,c=l===void 0?.3:l,u=t.scoreThreshold,h=u===void 0?.75:u,p=t.modelUrl;return Uo(this,void 0,void 0,function(){var d;return Go(this,function(f){switch(f.label){case 0:return p==null?[3,2]:[4,So(p)];case 1:return d=f.sent(),[3,4];case 2:return[4,So("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 3:d=f.sent(),f.label=4;case 4:return[2,new z5(d,a,o,r,c,h)]}})})}var ra={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function up(n){return[Math.abs(n.endPoint[0]-n.startPoint[0]),Math.abs(n.endPoint[1]-n.startPoint[1])]}function lp(n){return[n.startPoint[0]+(n.endPoint[0]-n.startPoint[0])/2,n.startPoint[1]+(n.endPoint[1]-n.startPoint[1])/2]}function pg(n,t){t===void 0&&(t=1.5);var e=lp(n),r=up(n),s=[t*r[0]/2,t*r[1]/2];return{startPoint:[e[0]-s[0],e[1]-s[1]],endPoint:[e[0]+s[0],e[1]+s[1]],landmarks:n.landmarks}}function dg(n){var t=lp(n),e=up(n),r=Math.max.apply(Math,e)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],landmarks:n.landmarks}}var B5=[[1,0,0],[0,1,0],[0,0,1]];function A2(n,t){return[[1,0,n],[0,1,t],[0,0,1]]}function _i(n,t){for(var e=0,r=0;r<n.length;r++)e+=n[r]*t[r];return e}function W5(n,t){for(var e=[],r=0;r<n.length;r++)e.push(n[r][t]);return e}function R2(n,t){for(var e=[],r=n.length,s=0;s<r;s++){e.push([]);for(var a=0;a<r;a++)e[s].push(_i(n[s],W5(t,a)))}return e}function F2(n,t){var e=Math.cos(n),r=Math.sin(n),s=[[e,-r,0],[r,e,0],[0,0,1]],a=R2(A2(t[0],t[1]),s);return R2(a,A2(-t[0],-t[1]))}var D2=[13,ra.midwayBetweenEyes[0]],O2=[3,2],fg=ra.leftEyeLower0,mg=[fg[0],fg[fg.length-1]],gg=ra.rightEyeLower0,yg=[gg[0],gg[gg.length-1]],M2=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function cp(n,t,e,r){for(var s=0;s<M2.length;s++){var a=M2[s],i=a.key,o=a.indices,l=ra[""+e+i];if(r==null||r.includes(i))for(var c=0;c<o.length;c++){var u=o[c];n[l[c]]=[t[u][0],t[u][1],(t[u][2]+n[l[c]][2])/2]}}}var V5=function(){function n(t,e,r,s,a,i,o){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.irisModel=o,this.meshWidth=r,this.meshHeight=s,this.maxContinuousChecks=a,this.maxFaces=i}return n.prototype.transformRawCoords=function(t,e,r,s){var a,i,o,l,c=this,u=up({startPoint:e.startPoint,endPoint:e.endPoint}),h=[u[0]/this.meshWidth,u[1]/this.meshHeight],p=t.map(function(b){return[h[0]*(b[0]-c.meshWidth/2),h[1]*(b[1]-c.meshHeight/2),b[2]]}),d=F2(r,[0,0]),f=p.map(function(b){return function($,_){return[_i($,_[0]),_i($,_[1])]}(b,d).concat([b[2]])}),m=(i=[[(a=s)[0][0],a[1][0]],[a[0][1],a[1][1]]],o=[a[0][2],a[1][2]],l=[-_i(i[0],o),-_i(i[1],o)],[i[0].concat(l[0]),i[1].concat(l[1]),[0,0,1]]),g=lp({startPoint:e.startPoint,endPoint:e.endPoint}).concat([1]),y=[_i(g,m[0]),_i(g,m[1])];return f.map(function(b){return[b[0]+y[0],b[1]+y[1],b[2]]})},n.prototype.getLeftToRightEyeDepthDifference=function(t){return t[mg[0]][2]-t[yg[0]][2]},n.prototype.getEyeBox=function(t,e,r,s,a){a===void 0&&(a=!1);var i=dg(pg(this.calculateLandmarksBoundingBox([t[r],t[s]]),2.3)),o=up(i),l=bs.cropAndResize(e,[[i.startPoint[1]/this.meshHeight,i.startPoint[0]/this.meshWidth,i.endPoint[1]/this.meshHeight,i.endPoint[0]/this.meshWidth]],[0],[64,64]);return a&&(l=bs.flipLeftRight(l)),{box:i,boxSize:o,crop:l}},n.prototype.getEyeCoords=function(t,e,r,s){s===void 0&&(s=!1);for(var a=[],i=0;i<76;i++){var o=t[3*i],l=t[3*i+1],c=t[3*i+2];a.push([(s?1-o/64:o/64)*r[0]+e.startPoint[0],l/64*r[1]+e.startPoint[1],c])}return{rawCoords:a,iris:a.slice(71)}},n.prototype.getAdjustedIrisCoords=function(t,e,r){var s=t[ra[r+"EyeUpper0"][3]][2],a=t[ra[r+"EyeLower0"][4]][2],i=(s+a)/2;return e.map(function(o,l){var c=i;return l===2?c=s:l===4&&(c=a),[o[0],o[1],c]})},n.prototype.predict=function(t,e){return ea(this,void 0,void 0,function(){var r,s,a,i,o=this;return na(this,function(l){switch(l.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(t,!1,!0)]:[3,2];case 1:return r=l.sent(),s=r.boxes,a=r.scaleFactor,s.length===0?(this.regionsOfInterest=[],[2,null]):(i=s.map(function(c){var u,h,p={startPoint:Fr(c.box.startPoint).arraySync(),endPoint:Fr(c.box.endPoint).arraySync()},d=dg(pg((h=a,{startPoint:[(u=p).startPoint[0]*h[0],u.startPoint[1]*h[1]],endPoint:[u.endPoint[0]*h[0],u.endPoint[1]*h[1]]})));return hg({},d,{landmarks:c.landmarks.arraySync()})}),s.forEach(function(c){c!=null&&c.startPoint!=null&&(c.startEndTensor.dispose(),c.startPoint.dispose(),c.endPoint.dispose())}),this.updateRegionsOfInterest(i),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,l.label=3;case 3:return[2,wt(function(){return o.regionsOfInterest.map(function(c,u){var h,p=c.landmarks.length>=468,d=D2[0],f=D2[1];p===!1&&(d=O2[0],f=O2[1]),h=function(ke,Te){var Ne;return(Ne=Math.PI/2-Math.atan2(-(Te[1]-ke[1]),Te[0]-ke[0]))-2*Math.PI*Math.floor((Ne+Math.PI)/(2*Math.PI))}(c.landmarks[d],c.landmarks[f]);var m=lp({startPoint:c.startPoint,endPoint:c.endPoint}),g=[m[0]/t.shape[2],m[1]/t.shape[1]],y=t,b=B5;h!==0&&(y=bs.rotateWithOffset(t,h,0,g),b=F2(-h,m));var $={startPoint:c.startPoint,endPoint:c.endPoint},_=oe(function(ke,Te,Ne){var _e=Te.shape[1],ze=Te.shape[2],In=[[ke.startPoint[1]/_e,ke.startPoint[0]/ze,ke.endPoint[1]/_e,ke.endPoint[0]/ze]];return bs.cropAndResize(Te,In,[0],Ne,"bilinear",0)}($,y,[o.meshHeight,o.meshWidth]),255),M=o.meshDetector.predict(_),Y=M[1],tt=M[2],Q=mt(tt,[-1,3]).arraySync();if(e){var et=o.getEyeBox(Q,_,mg[0],mg[1],!0),rt=et.box,lt=et.boxSize,ft=et.crop,yt=o.getEyeBox(Q,_,yg[0],yg[1]),kt=yt.box,Tt=yt.boxSize,It=yt.crop,Et=o.irisModel.predict(un([ft,It])).dataSync(),_t=Et.slice(0,228),At=o.getEyeCoords(_t,rt,lt,!0),Mt=At.rawCoords,Ot=At.iris,Lt=Et.slice(228),Pt=o.getEyeCoords(Lt,kt,Tt),jt=Pt.rawCoords,Kt=Pt.iris,Qt=o.getLeftToRightEyeDepthDifference(Q);Math.abs(Qt)<30?(cp(Q,Mt,"left"),cp(Q,jt,"right")):Qt<1?cp(Q,Mt,"left",["EyeUpper0","EyeLower0"]):cp(Q,jt,"right",["EyeUpper0","EyeLower0"]);var te=o.getAdjustedIrisCoords(Q,Ot,"left"),be=o.getAdjustedIrisCoords(Q,Kt,"right");Q=Q.concat(te).concat(be)}var me=o.transformRawCoords(Q,c,h,b),we=qs(me),pe=pg(o.calculateLandmarksBoundingBox(me)),Ie=dg(pe);return o.regionsOfInterest[u]=hg({},Ie,{landmarks:we.arraySync()}),{coords:qs(Q,[Q.length,3]),scaledCoords:we,box:pe,flag:Fr(Y)}})})]}})})},n.prototype.updateRegionsOfInterest=function(t){for(var e=0;e<t.length;e++){var r=t[e],s=this.regionsOfInterest[e],a=0;if(s&&s.startPoint){var i=r.startPoint,o=i[0],l=i[1],c=r.endPoint,u=c[0],h=c[1],p=s.startPoint,d=p[0],f=p[1],m=s.endPoint,g=m[0],y=m[1],b=Math.max(o,d),$=Math.max(l,f),_=(Math.min(u,g)-b)*(Math.min(h,y)-$);a=_/((u-o)*(h-l)+(g-d)*(y-l)-_)}a<.25&&(this.regionsOfInterest[e]=r)}this.regionsOfInterest=this.regionsOfInterest.slice(0,t.length)},n.prototype.clearRegionOfInterest=function(t){this.regionsOfInterest[t]!=null&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,t).concat(this.regionsOfInterest.slice(t+1)))},n.prototype.shouldUpdateRegionsOfInterest=function(){var t=this.regionsOfInterest.length,e=t===0;return this.maxFaces===1||e?e:t!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},n.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map(function(s){return s[0]}),r=t.map(function(s){return s[1]});return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,r)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,r)]}},n}(),U5=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function G5(n){return ea(this,void 0,void 0,function(){var t,e,r,s,a,i,o,l,c,u,h,p,d,f,m,g;return na(this,function(y){switch(y.label){case 0:return t=n.maxContinuousChecks,e=t===void 0?5:t,r=n.detectionConfidence,s=r===void 0?.9:r,a=n.maxFaces,i=a===void 0?10:a,o=n.iouThreshold,l=o===void 0?.3:o,c=n.scoreThreshold,u=c===void 0?.75:c,h=n.shouldLoadIrisModel,p=h===void 0||h,d=n.modelUrl,f=n.detectorModelUrl,m=n.irisModelUrl,p?[4,Promise.all([L2(f,i,l,u),z2(d),H5(m)])]:[3,2];case 1:return g=y.sent(),[3,4];case 2:return[4,Promise.all([L2(f,i,l,u),z2(d)])];case 3:g=y.sent(),y.label=4;case 4:return[2,new j5(g[0],g[1],e,s,i,p?g[2]:null)]}})})}function L2(n,t,e,r){return ea(this,void 0,void 0,function(){return na(this,function(s){return[2,P5({modelUrl:n,maxFaces:t,iouThreshold:e,scoreThreshold:r})]})})}function z2(n){return ea(this,void 0,void 0,function(){return na(this,function(t){return n!=null?[2,So(n)]:[2,So("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]})})}function H5(n){return ea(this,void 0,void 0,function(){return na(this,function(t){return n!=null?[2,So(n)]:[2,So("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]})})}function P2(n,t){if(n.mesh instanceof Me){var e=wt(function(){var o=wn([t-1,0,0]),l=wn([1,-1,1]);return wt(function(){return[un([ne(t-1,ve(n.boundingBox.topLeft,0,1)),ve(n.boundingBox.topLeft,1,1)]),un([ne(t-1,ve(n.boundingBox.bottomRight,0,1)),ve(n.boundingBox.bottomRight,1,1)]),ht(ne(o,n.mesh),l),ht(ne(o,n.scaledMesh),l)]})}),r=e[0],s=e[1],a=e[2],i=e[3];return Object.assign({},n,{boundingBox:{topLeft:r,bottomRight:s},mesh:a,scaledMesh:i})}return Object.assign({},n,{boundingBox:{topLeft:[t-1-n.boundingBox.topLeft[0],n.boundingBox.topLeft[1]],bottomRight:[t-1-n.boundingBox.bottomRight[0],n.boundingBox.bottomRight[1]]},mesh:n.mesh.map(function(o){var l=o.slice(0);return l[0]=t-1-o[0],l}),scaledMesh:n.scaledMesh.map(function(o){var l=o.slice(0);return l[0]=t-1-o[0],l})})}var Ll,j5=function(){function n(t,e,r,s,a,i){this.kind="MediaPipeFaceMesh",this.pipeline=new V5(t,e,192,192,r,a,i),this.detectionConfidence=s}return n.getAnnotations=function(){return ra},n.getUVCoords=function(){return U5},n.prototype.estimateFaces=function(t){return ea(this,void 0,void 0,function(){var e,r,s,a,i,o,l,c,u,h,p,d,f=this;return na(this,function(m){switch(m.label){case 0:if(e=t.returnTensors,r=e!==void 0&&e,s=t.flipHorizontal,a=s!==void 0&&s,i=t.predictIrises,o=i===void 0||i,l=t.input,o&&this.pipeline.irisModel==null)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return c=function(g){return g instanceof Me?[g.shape[0],g.shape[1]]:[g.height,g.width]}(l),u=c[1],h=wt(function(){return l instanceof Me||(l=d0(l)),vr(ee(l,"float32"),0)}),dt.backendName!=="webgl"?[3,2]:(d=Ct().get("WEBGL_PACK_DEPTHWISECONV"),Ct().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(h,o)]);case 1:return p=m.sent(),Ct().set("WEBGL_PACK_DEPTHWISECONV",d),[3,4];case 2:return[4,this.pipeline.predict(h,o)];case 3:p=m.sent(),m.label=4;case 4:return h.dispose(),p!=null&&p.length>0?[2,Promise.all(p.map(function(g,y){return ea(f,void 0,void 0,function(){var b,$,_,M,Y,tt,Q,et,rt,lt,ft,yt,kt,Tt,It=this;return na(this,function(Et){switch(Et.label){case 0:return b=g.coords,$=g.scaledCoords,_=g.box,M=g.flag,Y=[M],r||(Y=Y.concat([b,$])),[4,Promise.all(Y.map(function(_t){return ea(It,void 0,void 0,function(){return na(this,function(At){return[2,_t.array()]})})}))];case 1:if(tt=Et.sent(),Q=tt[0],M.dispose(),Q<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(y),r)return et={kind:"MediaPipePredictionTensors",faceInViewConfidence:Q,mesh:b,scaledMesh:$,boundingBox:{topLeft:wn(_.startPoint),bottomRight:wn(_.endPoint)}},a?[2,P2(et,u)]:[2,et];for(Tt in rt=tt.slice(1),lt=rt[0],ft=rt[1],$.dispose(),b.dispose(),yt={kind:"MediaPipePredictionValues",faceInViewConfidence:Q,boundingBox:{topLeft:_.startPoint,bottomRight:_.endPoint},mesh:lt,scaledMesh:ft},a&&(yt=P2(yt,u)),kt={},ra)(o||Tt.includes("Iris")===!1)&&(kt[Tt]=ra[Tt].map(function(_t){return yt.scaledMesh[_t]}));return yt.annotations=kt,[2,yt]}})})}))]:[2,[]]}})})},n}();(Ll||(Ll={})).mediapipeFacemesh="mediapipe-facemesh";let Ai=function(){this.model=function(n,t){return n===void 0&&(n=Ll.mediapipeFacemesh),t===void 0&&(t={}),ea(this,void 0,void 0,function(){return na(this,function(e){if(n===Ll.mediapipeFacemesh)return[2,G5(t)];throw new Error(n+" is not a valid package name.")})})}(Ll.mediapipeFacemesh,{maxFaces:1}),this.predictionReady=!1};Ai.prototype.positionsArray=null,Ai.prototype.getEyePatches=async function(n,t,e,r){if(t.width===0)return null;let s=await this.model,a=await s.estimateFaces({input:n,returnTensors:!1,flipHorizontal:!1,predictIrises:!1});if(a.length==0)return!1;this.positionsArray=a[0].scaledMesh,this.positionsArray;let{scaledMesh:i}=a[0],[o,l]=[{eyeTopArcKeypoints:[25,33,246,161,160,159,158,157,173,243],eyeBottomArcKeypoints:[25,110,24,23,22,26,112,243]},{eyeTopArcKeypoints:[463,398,384,385,386,387,388,466,263,255],eyeBottomArcKeypoints:[463,341,256,252,253,254,339,255]}].map(({eyeTopArcKeypoints:_,eyeBottomArcKeypoints:M})=>{let Y={x:Math.round(Math.min(..._.map(et=>i[et][0]))),y:Math.round(Math.min(..._.map(et=>i[et][1])))},tt=Math.round(Math.max(...M.map(et=>i[et][0]))),Q=Math.round(Math.max(...M.map(et=>i[et][1])));return{origin:Y,width:tt-Y.x,height:Q-Y.y}});var c=o.origin.x,u=o.origin.y,h=o.width,p=o.height,d=l.origin.x,f=l.origin.y,m=l.width,g=l.height;if(h===0||m===0)return console.log("an eye patch had zero width"),null;if(p===0||g===0)return console.log("an eye patch had zero height"),null;var y={},b=t.getContext("2d").getImageData(c,u,h,p);y.left={patch:b,imagex:c,imagey:u,width:h,height:p};var $=t.getContext("2d").getImageData(d,f,m,g);return y.right={patch:$,imagex:d,imagey:f,width:m,height:g},this.predictionReady=!0,y},Ai.prototype.getPositions=function(){return this.positionsArray},Ai.prototype.reset=function(){console.log("Unimplemented; Tracking.js has no obvious reset function")},Ai.prototype.drawFaceOverlay=function(n,t){if(t){n.fillStyle="#32EEDB",n.strokeStyle="#32EEDB",n.lineWidth=.5;for(let e=0;e<t.length;e++){let r=t[e][0],s=t[e][1];n.beginPath(),n.arc(r,s,1,0,2*Math.PI),n.closePath(),n.fill()}}},Ai.prototype.name="TFFaceMesh";let q5=Ai,B2={transpose:function(n){for(var t=n.length,e=n[0].length,r=new Array(e),s=0;s<t;s++)for(var a=0;a<e;a++)s===0&&(r[a]=new Array(t)),r[a][s]=n[s][a];return r},getMatrix:function(n,t,e,r){for(var s=new Array(t.length),a=r-e+1,i=0;i<t.length;i++){s[i]=new Array(a);for(var o=e;o<=r;o++)s[i][o-e]=n[t[i]][o]}return s},getSubMatrix:function(n,t,e,r,s){for(var a=s-r+1,i=new Array(e-t+1),o=t;o<=e;o++){var l=o-t;i[l]=new Array(a);for(var c=r;c<=s;c++)i[l][c-r]=n[o][c]}return i},mult:function(n,t){t.length!=n[0].length&&console.log("Matrix inner dimensions must agree:");for(var e=new Array(n.length),r=new Array(n[0].length),s=0;s<t[0].length;s++){for(var a=0;a<n[0].length;a++)r[a]=t[a][s];for(var i=0;i<n.length;i++){s===0&&(e[i]=new Array(t[0].length));var o=n[i],l=0;for(a=0;a<n[0].length;a++)l+=o[a]*r[a];e[i][s]=l}}return e},LUDecomposition:function(n,t){for(var e=new Array(n.length),r=0;r<n.length;r++){e[r]=new Array(n[0].length);for(var s=0;s<n[0].length;s++)e[r][s]=n[r][s]}var a=n.length,i=n[0].length,o=new Array(a);for(r=0;r<a;r++)o[r]=r;var l=1,c=new Array,u=new Array(a);for(s=0;s<i;s++){for(r=0;r<a;r++)u[r]=e[r][s];for(r=0;r<a;r++){c=e[r];for(var h=Math.min(r,s),p=0,d=0;d<h;d++)p+=c[d]*u[d];c[s]=u[r]-=p}var f=s;for(r=s+1;r<a;r++)Math.abs(u[r])>Math.abs(u[f])&&(f=r);if(f!=s){for(d=0;d<i;d++){var m=e[f][d];e[f][d]=e[s][d],e[s][d]=m}d=o[f],o[f]=o[s],o[s]=d,l=-l}if(s<a&e[s][s]!=0)for(r=s+1;r<a;r++)e[r][s]/=e[s][s]}for(t.length!=a&&console.log("Matrix row dimensions must agree."),s=0;s<i;s++)e[s][s]===0&&console.log("Matrix is singular.");var g=t[0].length,y=self.webgazer.mat.getMatrix(t,o,0,g-1);for(d=0;d<i;d++)for(r=d+1;r<i;r++)for(s=0;s<g;s++)y[r][s]-=y[d][s]*e[r][d];for(d=i-1;d>=0;d--){for(s=0;s<g;s++)y[d][s]/=e[d][d];for(r=0;r<d;r++)for(s=0;s<g;s++)y[r][s]-=y[d][s]*e[r][d]}return y},QRDecomposition:function(n,t){for(var e=new Array(n.length),r=0;r<n.length;r++){e[r]=new Array(n[0].length);for(var s=0;s<n[0].length;s++)e[r][s]=n[r][s]}for(var a,i=n.length,o=n[0].length,l=new Array(o),c=0;c<o;c++){for(a=0,r=c;r<i;r++)a=Math.hypot(a,e[r][c]);if(a!=0){for(e[c][c]<0&&(a=-a),r=c;r<i;r++)e[r][c]/=a;for(e[c][c]+=1,s=c+1;s<o;s++){var u=0;for(r=c;r<i;r++)u+=e[r][c]*e[r][s];for(u=-u/e[c][c],r=c;r<i;r++)e[r][s]+=u*e[r][c]}}l[c]=-a}for(t.length!=i&&console.log("Matrix row dimensions must agree."),s=0;s<o;s++)l[s]===0&&console.log("Matrix is rank deficient");var h=t[0].length,p=new Array(t.length);for(r=0;r<t.length;r++)p[r]=new Array(t[0].length);for(r=0;r<t.length;r++)for(s=0;s<t[0].length;s++)p[r][s]=t[r][s];for(c=0;c<o;c++)for(s=0;s<h;s++){for(u=0,r=c;r<i;r++)u+=e[r][c]*p[r][s];for(u=-u/e[c][c],r=c;r<i;r++)p[r][s]+=u*e[r][c]}for(c=o-1;c>=0;c--){for(s=0;s<h;s++)p[c][s]/=l[c];for(r=0;r<c;r++)for(s=0;s<h;s++)p[r][s]-=p[c][s]*e[r][c]}return B2.getSubMatrix(p,0,o-1,0,h-1)}},zl=B2;var K5=__webpack_require__(32),hr=__webpack_require__.n(K5);let zn={};zn.Eye=function(n,t,e,r,s){this.patch=n,this.imagex=t,this.imagey=e,this.width=r,this.height=s},zn.getEyeFeats=function(n){let t=e=>{let r=this.resizeEye(e,10,6),s=this.grayscale(r.data,r.width,r.height),a=[];return this.equalizeHistogram(s,5,a),a};return bp.params.trackEye=="left"?t(n.left):bp.params.trackEye=="right"?t(n.right):[].concat(t(n.left),t(n.right))},zn.DataWindow=function(n,t){this.data=[],this.windowSize=n,this.index=0,this.length=0,t&&(this.data=t.slice(t.length-n,t.length),this.length=this.data.length)},zn.DataWindow.prototype.push=function(n){return this.data.length<this.windowSize?(this.data.push(n),this.length=this.data.length,this):(this.data[this.index]=n,this.index=(this.index+1)%this.windowSize,this)},zn.DataWindow.prototype.get=function(n){return this.data[this.getTrueIndex(n)]},zn.DataWindow.prototype.getTrueIndex=function(n){return this.data.length<this.windowSize?n:(n+this.index)%this.windowSize},zn.DataWindow.prototype.addAll=function(n){for(var t=0;t<n.length;t++)this.push(n[t])},zn.grayscale=function(n,t,e){for(var r=new Uint8ClampedArray(n.length>>2),s=0,a=0,i=0;i<e;i++)for(var o=0;o<t;o++){var l=.299*n[a]+.587*n[a+1]+.114*n[a+2];r[s++]=l,a+=4}return r},zn.equalizeHistogram=function(n,t,e){var r=n.length;e||(e=n),t||(t=5);for(var s=Array(256).fill(0),a=0;a<r;a+=t)++s[n[a]];var i=255*t/r,o=0;for(a=0;a<256;++a){var l=s[a];o=l+=o,s[a]=l*i}for(a=0;a<r;++a)e[a]=s[n[a]];return e},zn.threshold=function(n,t){for(let e=0;e<n.length;e++)n[e]=n[e]>t?255:0;return n},zn.correlation=function(n,t){let e=Math.min(n.length,t.length),r=0;for(let s=0;s<e;s++)n[s]===t[s]&&r++;return r/Math.max(n.length,t.length)},zn.resizeEye=function(n,t,e){var r=document.createElement("canvas");r.width=n.width,r.height=n.height,r.getContext("2d").putImageData(n.patch,0,0);var s=document.createElement("canvas");return s.width=t,s.height=e,s.getContext("2d").drawImage(r,0,0,r.width,r.height,0,0,t,e),s.getContext("2d").getImageData(0,0,t,e)},zn.bound=function(n){n.x<0&&(n.x=0),n.y<0&&(n.y=0);var t=Math.max(document.documentElement.clientWidth,window.innerWidth||0),e=Math.max(document.documentElement.clientHeight,window.innerHeight||0);return n.x>t&&(n.x=t),n.y>e&&(n.y=e),n},zn.DebugBox=function(n){var t;this.para=document.createElement("p"),this.div=document.createElement("div"),this.div.appendChild(this.para),document.body.appendChild(this.div),this.buttons={},this.canvas={},this.stats={},t=this,setInterval(function(){(function(e,r){var s="";for(var a in r)s+=a+": "+r[a]+`
`;e.innerText=s})(t.para,t.stats)},n||300)},zn.DebugBox.prototype.set=function(n,t){this.stats[n]=t},zn.DebugBox.prototype.inc=function(n,t,e){this.stats[n]||(this.stats[n]=e||0),this.stats[n]+=t||1},zn.DebugBox.prototype.addButton=function(n,t){this.buttons[n]||(this.buttons[n]=document.createElement("button"),this.div.appendChild(this.buttons[n]));var e=this.buttons[n];this.buttons[n]=e,e.addEventListener("click",t),e.innerText=n},zn.DebugBox.prototype.show=function(n,t){this.canvas[n]||(this.canvas[n]=document.createElement("canvas"),this.div.appendChild(this.canvas[n]));var e=this.canvas[n];e.getContext("2d").clearRect(0,0,e.width,e.height),t(e)};let Qe=zn,Ri={InitRegression:function(){var n=700;this.ridgeParameter=Math.pow(10,-5),this.errorXArray=new Qe.DataWindow(n),this.errorYArray=new Qe.DataWindow(n),this.screenXClicksArray=new Qe.DataWindow(n),this.screenYClicksArray=new Qe.DataWindow(n),this.eyeFeaturesClicks=new Qe.DataWindow(n),this.trailTime=1e3,this.trailDataWindow=this.trailTime/Ol.moveTickSize,this.screenXTrailArray=new Qe.DataWindow(10),this.screenYTrailArray=new Qe.DataWindow(10),this.eyeFeaturesTrail=new Qe.DataWindow(10),this.trailTimes=new Qe.DataWindow(10),this.dataClicks=new Qe.DataWindow(n),this.dataTrail=new Qe.DataWindow(10);var t=[[1/4,0,.5,0],[0,1/4,0,.5],[.5,0,1,0],[0,.5,0,1]];t=hr().mul(t,.1);var e=hr().mul(hr().identity(2),47),r=hr().mul(hr().identity(4),1e-4);this.kalman=new Ri.KalmanFilter([[1,0,1,0],[0,1,0,1],[0,0,1,0],[0,0,0,1]],[[1,0,0,0],[0,1,0,0]],t,e,r,[[500],[500],[0],[0]])},KalmanFilter:function(n,t,e,r,s,a){this.F=n,this.Q=e,this.H=t,this.R=r,this.P=s,this.X=a}};Ri.KalmanFilter.prototype.update=function(n){for(var t=hr().add,e=hr().sub,r=hr().inv,s=hr().identity,a=zl.mult,i=zl.transpose,o=a(this.F,this.X),l=t(a(a(this.F,this.P),i(this.F)),this.Q),c=e(n,a(this.H,o)),u=t(a(a(this.H,l),i(this.H)),this.R),h=a(l,a(i(this.H),r(u))),p=0;p<c.length;p++)c[p]=[c[p]];return this.X=t(o,a(h,c)),this.P=a(e(s(h.length),a(h,this.H)),l),i(a(this.H,this.X))[0]},Ri.ridge=function(n,t,e){var r=t[0].length,s=new Array(r),a=zl.transpose(t),i=new Array,o=!0;do{for(var l=zl.mult(a,t),c=0;c<r;c++)l[c][c]=l[c][c]+e;var u=zl.mult(a,n);for(c=0;c<r;c++)s[c]=u[c][0];try{var h=s.length!==0?s.length/s.length:0;for(s.length*h!==s.length&&console.log("Array length must be a multiple of m"),i=l.length===l[0].length?hr().LUsolve(hr().LU(l,!0),u):bp.mat.QRDecomposition(l,u),c=0;c<r;c++)s[c]=i[c];o=!0}catch(p){e*=10,console.log(p),o=!1}}while(!o);return s},Ri.setData=function(n){for(var t=0;t<n.length;t++){var e=new Uint8ClampedArray(n[t].eyes.left.patch.data),r=new Uint8ClampedArray(n[t].eyes.right.patch.data);n[t].eyes.left.patch=new ImageData(e,n[t].eyes.left.width,n[t].eyes.left.height),n[t].eyes.right.patch=new ImageData(r,n[t].eyes.right.width,n[t].eyes.right.height),this.addData(n[t].eyes,n[t].screenPos,n[t].type)}},Ri.getCurrentFixationIndex=function(){for(var n=this.screenXTrailArray.get(0),t=this.screenYTrailArray.get(0),e=this.screenXTrailArray.length-1;e>=0;e--){var r=this.screenXTrailArray.get(e),s=this.screenYTrailArray.get(e);if(Math.sqrt(Math.pow(r-n,2)+Math.pow(s-t,2))>72)return e+1}return e},Ri.addData=function(n,t,e){n&&(e==="click"?(this.screenXClicksArray.push([t[0]]),this.screenYClicksArray.push([t[1]]),this.eyeFeaturesClicks.push(Qe.getEyeFeats(n)),this.dataClicks.push({eyes:n,screenPos:t,type:e})):e==="move"&&(this.screenXTrailArray.push([t[0]]),this.screenYTrailArray.push([t[1]]),this.eyeFeaturesTrail.push(Qe.getEyeFeats(n)),this.trailTimes.push(performance.now()),this.dataTrail.push({eyes:n,screenPos:t,type:e})))};let cs=Ri,Fi={RidgeReg:function(){this.init()}};Fi.RidgeReg.prototype.init=cs.InitRegression,Fi.RidgeReg.prototype.addData=cs.addData,Fi.RidgeReg.prototype.predict=function(n){if(!n||this.eyeFeaturesClicks.length===0)return null;for(var t=performance.now()-this.trailTime,e=[],r=[],s=[],a=0;a<this.trailDataWindow;a++)this.trailTimes.get(a)>t&&(e.push(this.screenXTrailArray.get(a)),r.push(this.screenYTrailArray.get(a)),s.push(this.eyeFeaturesTrail.get(a)));var i=this.screenXClicksArray.data.concat(e),o=this.screenYClicksArray.data.concat(r),l=this.eyeFeaturesClicks.data.concat(s),c=cs.ridge(i,l,this.ridgeParameter),u=cs.ridge(o,l,this.ridgeParameter),h=Qe.getEyeFeats(n),p=0;for(a=0;a<h.length;a++)p+=h[a]*c[a];var d=0;for(a=0;a<h.length;a++)d+=h[a]*u[a];if(p=Math.floor(p),d=Math.floor(d),Ol.applyKalmanFilter){var f=[p,d];return{x:(f=this.kalman.update(f))[0],y:f[1]}}return{x:p,y:d}},Fi.RidgeReg.prototype.setData=cs.setData,Fi.RidgeReg.prototype.getData=function(){return this.dataClicks.data},Fi.RidgeReg.prototype.name="ridge";let X5=Fi,Di={RidgeWeightedReg:function(){this.init()}};Di.RidgeWeightedReg.prototype.init=cs.InitRegression,Di.RidgeWeightedReg.prototype.addData=cs.addData,Di.RidgeWeightedReg.prototype.predict=function(n){if(!n||this.eyeFeaturesClicks.length===0)return null;for(var t=performance.now()-this.trailTime,e=[],r=[],s=[],a=0;a<this.trailDataWindow;a++)this.trailTimes.get(a)>t&&(e.push(this.screenXTrailArray.get(a)),r.push(this.screenYTrailArray.get(a)),s.push(this.eyeFeaturesTrail.get(a)));var i=this.eyeFeaturesClicks.data.length,o=Array(i),l=Array(i),c=Array(i);for(a=0;a<i;a++){for(var u=Math.sqrt(1/(i-a)),h=this.eyeFeaturesClicks.getTrueIndex(a),p=0;p<this.eyeFeaturesClicks.data[h].length;p++){var d=this.eyeFeaturesClicks.data[h][p]*u;o[h]!==void 0?o[h].push(d):o[h]=[d]}l[a]=this.screenXClicksArray.get(a).slice(0,this.screenXClicksArray.get(a).length),c[a]=this.screenYClicksArray.get(a).slice(0,this.screenYClicksArray.get(a).length),l[a][0]=l[a][0]*u,c[a][0]=c[a][0]*u}var f=l.concat(e),m=c.concat(r),g=o.concat(s),y=cs.ridge(f,g,this.ridgeParameter),b=cs.ridge(m,g,this.ridgeParameter),$=Qe.getEyeFeats(n),_=0;for(a=0;a<$.length;a++)_+=$[a]*y[a];var M=0;for(a=0;a<$.length;a++)M+=$[a]*b[a];if(_=Math.floor(_),M=Math.floor(M),Ol.applyKalmanFilter){var Y=[_,M];return{x:(Y=this.kalman.update(Y))[0],y:Y[1]}}return{x:_,y:M}},Di.RidgeWeightedReg.prototype.setData=cs.setData,Di.RidgeWeightedReg.prototype.getData=function(){return this.dataClicks.data},Di.RidgeWeightedReg.prototype.name="ridgeWeighted";let Y5=Di,Wa={};Math.pow(10,-5);var Pl=700,hp={X:[0],Y:[0]};Wa.RidgeRegThreaded=function(){this.init()},Wa.RidgeRegThreaded.prototype.init=function(){this.screenXClicksArray=new Qe.DataWindow(Pl),this.screenYClicksArray=new Qe.DataWindow(Pl),this.eyeFeaturesClicks=new Qe.DataWindow(Pl),this.screenXTrailArray=new Qe.DataWindow(10),this.screenYTrailArray=new Qe.DataWindow(10),this.eyeFeaturesTrail=new Qe.DataWindow(10),this.dataClicks=new Qe.DataWindow(Pl),this.dataTrail=new Qe.DataWindow(Pl),this.worker||(this.worker=new Worker("ridgeWorker.mjs"),this.worker.onerror=function(r){console.log(r.message)},this.worker.onmessage=function(r){hp.X=r.data.X,hp.Y=r.data.Y},console.log("initialized worker"));var n=[[1/4,0,.5,0],[0,1/4,0,.5],[.5,0,1,0],[0,.5,0,1]];n=hr().mul(n,.1);var t=hr().mul(hr().identity(2),47),e=hr().mul(hr().identity(4),1e-4);this.kalman=new cs.KalmanFilter([[1,0,1,0],[0,1,0,1],[0,0,1,0],[0,0,0,1]],[[1,0,0,0],[0,1,0,0]],n,t,e,[[500],[500],[0],[0]])},Wa.RidgeRegThreaded.prototype.addData=function(n,t,e){n&&this.worker.postMessage({eyes:Qe.getEyeFeats(n),screenPos:t,type:e})},Wa.RidgeRegThreaded.prototype.predict=function(n){if(!n)return null;for(var t=hp.X,e=hp.Y,r=Qe.getEyeFeats(n),s=0,a=0,i=0;i<r.length;i++)s+=r[i]*t[i],a+=r[i]*e[i];if(s=Math.floor(s),a=Math.floor(a),Ol.applyKalmanFilter){var o=[s,a];return{x:(o=this.kalman.update(o))[0],y:o[1]}}return{x:s,y:a}},Wa.RidgeRegThreaded.prototype.setData=cs.setData,Wa.RidgeRegThreaded.prototype.getData=function(){return this.dataClicks.data},Wa.RidgeRegThreaded.prototype.name="ridge";let Z5=Wa,Ft={tracker:{}};Ft.tracker.TFFaceMesh=q5,Ft.reg=X5,Ft.reg.RidgeWeightedReg=Y5.RidgeWeightedReg,Ft.reg.RidgeRegThreaded=Z5.RidgeRegThreaded,Ft.util=Qe,Ft.params=Ol;var pp=null,Pn=null,Ve=null,pr=null,Bn=null,Sr=null,Xn=null,bg="",W2=new Array(50),V2=new Array(50),U2=performance.now(),Tr=null,Ho=null,Va=!1,G2=function(n,t){},xg=G2,dp=["click","move"],H2=performance.now(),vg=new Ft.tracker.TFFaceMesh,dr=[new Ft.reg.RidgeReg],fp={TFFacemesh:function(){return new Ft.tracker.TFFaceMesh}},Bl={ridge:function(){return new Ft.reg.RidgeReg},weightedRidge:function(){return new Ft.reg.RidgeWeightedReg},threadedRidge:function(){return new Ft.reg.RidgeRegThreaded}},j2="webgazerGlobalData",q2="webgazerGlobalSettings",wg={},jo=[],K2={data:[],settings:{}};async function X2(n){var t=[];if(Tr=await function(r,s,a){if(r)try{return vg.getEyePatches(Ve,r,s,a)}catch(i){return console.log("can't get pupil features ",i),null}}(pr,pr.width,pr.height),dr.length===0)return console.log("regression not set, call setRegression()"),null;for(var e in dr)t.push(dr[e].predict(Tr));return n!==void 0?t[n]===null?null:{x:t[n].x,y:t[n].y,eyeFeatures:Tr}:t.length===0||t[0]===null?null:{x:t[0].x,y:t[0].y,eyeFeatures:Tr,all:t}}Ft.computeValidationBoxSize=function(){var n=Ve.videoWidth,t=Ve.videoHeight,e=parseInt(Ve.style.width),r=parseInt(Ve.style.height),s=Math.min(n,t),a=n==Math.max(n,t)?e/n:r/t,i=s*Ft.params.faceFeedbackBoxRatio*a;return[(r-i)/2,(e-i)/2,i,i]};var Wl=new Qe.DataWindow(4),kg=0;async function Ig(){if(!Va){o=pr,l=pr.width,c=pr.height,o.width!=l&&(o.width=l),o.height!=c&&(o.height=c),o.getContext("2d").drawImage(Ve,0,0,o.width,o.height),Ho=X2();var n=performance.now()-U2;if(Ft.params.showFaceOverlay){var t=Ft.getTracker();Bn.getContext("2d").clearRect(0,0,Ve.videoWidth,Ve.videoHeight),t.drawFaceOverlay(Bn.getContext("2d"),t.getPositions())}if(Ft.params.showFaceFeedbackBox&&function(){if(Sr!=null&&Tr){var u=Ve.videoWidth,h=Ve.videoHeight,p=Math.min(u,h)*Ft.params.faceFeedbackBoxRatio,d=(h-p)/2,f=(u-p)/2,m=f+p,g=d+p,y=Tr.left.imagex,b=Tr.left.imagey,$=Tr.right.imagex,_=Tr.right.imagey,M=!1,Y=!1;y>f&&y+Tr.left.width<m&&$>f&&$+Tr.right.width<m&&(M=!0),b>d&&b+Tr.left.height<g&&_>d&&_+Tr.right.height<g&&(Y=!0),Sr.style.border=M&&Y?"solid green":"solid red"}else Sr.style.border="solid black"}(),Ho=await Ho,xg(Ho,n),Ho){Wl.push(Ho);var e=0,r=0,s=Wl.length;for(var a in Wl.data)e+=Wl.get(a).x,r+=Wl.get(a).y;var i=Qe.bound({x:e/s,y:r/s});Ft.params.storingPoints&&(function(u,h,p){var d=document.getElementById("plotting_canvas").getContext("2d");d.fillStyle=u,d.beginPath(),d.arc(h,p,5,0,2*Math.PI,!0),d.fill()}("blue",i.x,i.y),Ft.storePoints(i.x,i.y,kg),++kg==50&&(kg=0)),Ft.params.showGazeDot&&(Xn.style.display="block"),Xn.style.transform="translate3d("+i.x+"px,"+i.y+"px,0)"}else Xn.style.display="none";requestAnimationFrame(Ig)}var o,l,c}var Ng=function(n,t,e){if(!Va){if(dr.length===0)return console.log("regression not set, call setRegression()"),null;for(var r in dr)Tr&&dr[r].addData(Tr,[n,t],e)}},Y2=async function(n){Ng(n.clientX,n.clientY,dp[0]),Ft.params.saveDataAcrossSessions&&await async function(){var t=dr[0].getData()||jo;Ml().setItem(q2,wg),Ml().setItem(j2,t)}()},Z2=function(n){if(!Va){var t=performance.now();t<H2+Ft.params.moveTickSize||(H2=t,Ng(n.clientX,n.clientY,dp[1]))}},J2=function(){document.addEventListener("click",Y2,!0),document.addEventListener("mousemove",Z2,!0)};async function Q2(n){pp=n,(Pn=document.createElement("div")).id=Ft.params.videoContainerId,Pn.style.position="fixed",Pn.style.top="0px",Pn.style.left="0px",Pn.style.width=Ft.params.videoViewerWidth+"px",Pn.style.height=Ft.params.videoViewerHeight+"px",mp(Pn),(Ve=document.createElement("video")).setAttribute("playsinline",""),Ve.id=Ft.params.videoElementId,Ve.srcObject=n,Ve.autoplay=!0,Ve.style.position="absolute",Ve.style.width=Ft.params.videoViewerWidth+"px",Ve.style.height=Ft.params.videoViewerHeight+"px",mp(Ve),(pr=document.createElement("canvas")).id=Ft.params.videoElementCanvasId,pr.style.display="none",(Bn=document.createElement("canvas")).id=Ft.params.faceOverlayId,Bn.style.display=Ft.params.showFaceOverlay?"block":"none",Bn.style.position="absolute",Ft.params.mirrorVideo&&(Ve.style.setProperty("-moz-transform","scale(-1, 1)"),Ve.style.setProperty("-webkit-transform","scale(-1, 1)"),Ve.style.setProperty("-o-transform","scale(-1, 1)"),Ve.style.setProperty("transform","scale(-1, 1)"),Ve.style.setProperty("filter","FlipH"),Bn.style.setProperty("-moz-transform","scale(-1, 1)"),Bn.style.setProperty("-webkit-transform","scale(-1, 1)"),Bn.style.setProperty("-o-transform","scale(-1, 1)"),Bn.style.setProperty("transform","scale(-1, 1)"),Bn.style.setProperty("filter","FlipH")),(Sr=document.createElement("canvas")).id=Ft.params.faceFeedbackBoxId,Sr.style.display=Ft.params.showFaceFeedbackBox?"block":"none",Sr.style.border="solid",Sr.style.position="absolute",(Xn=document.createElement("div")).id=Ft.params.gazeDotId,Xn.style.display=Ft.params.showGazeDot?"block":"none",Xn.style.position="fixed",Xn.style.zIndex=99999,Xn.style.left="-5px",Xn.style.top="-5px",Xn.style.background="red",Xn.style.borderRadius="100%",Xn.style.opacity="0.7",Xn.style.width="10px",Xn.style.height="10px",Pn.appendChild(Ve),document.body.appendChild(Pn);let t=new Promise(e=>{Ve.addEventListener("loadeddata",function r(s){tk(Ve.videoWidth,Ve.videoHeight),Ft.setVideoViewerSize(Ft.params.videoViewerWidth,Ft.params.videoViewerHeight),Pn.appendChild(pr),Pn.appendChild(Bn),Pn.appendChild(Sr),document.body.appendChild(Xn),s.target.removeEventListener(s.type,r),e()})});J2(),Va=!1,U2=performance.now(),await t,await Ig()}function mp(n){navigator.vendor&&navigator.vendor.indexOf("Apple")>-1?(n.style.opacity=Ft.params.showVideo?"1":"0",n.style.display="block"):n.style.display=Ft.params.showVideo?"block":"none"}function tk(n,t){pr&&(pr.width=n,pr.height=t),Bn&&(Bn.width=n,Bn.height=t)}Ft.begin=function(n){return window.location.protocol!=="https:"&&window.location.hostname!=="localhost"&&window.chrome&&alert("WebGazer works only over https. If you are doing local development, you need to run a local server."),Ft.params.saveDataAcrossSessions&&async function(){wg=(wg=await Ml().getItem(q2))||K2;var t=await Ml().getItem(j2);for(var e in jo=t=t||K2,dr)dr[e].setData(t);console.log("loaded stored data into regression model")}(),n=n||function(){console.log("No stream")},bg?(Q2(bg),Ft):(navigator.mediaDevices===void 0&&(navigator.mediaDevices={}),navigator.mediaDevices.getUserMedia===void 0&&(navigator.mediaDevices.getUserMedia=function(t){var e=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return e?new Promise(function(r,s){e.call(navigator,t,r,s)}):Promise.reject(new Error("Unfortunately, your browser does not support access to the webcam through the getUserMedia API. Try to use the latest version of Google Chrome, Mozilla Firefox, Opera, or Microsoft Edge instead."))}),new Promise(async(t,e)=>{let r;try{r=await navigator.mediaDevices.getUserMedia(Ft.params.camConstraints),await Q2(r),t(Ft)}catch(s){n(),Ve=null,r=null,e(s)}}))},Ft.isReady=function(){return pr!==null&&pr.width>0},Ft.pause=function(){return Va=!0,Ft},Ft.resume=async function(){return Va&&(Va=!1,await Ig()),Ft},Ft.end=function(){return Va=!0,Pn.remove(),Xn.remove(),Ft},Ft.stopVideo=function(){return pp.getTracks()[0].stop(),Pn.removeChild(Bn),Pn.removeChild(Sr),Ft},Ft.detectCompatibility=function(){return(navigator.mediaDevices.getUserMedia||navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia)!==void 0},Ft.showVideoPreview=function(n){return Ft.params.showVideoPreview=n,Ft.showVideo(n&&Ft.params.showVideo),Ft.showFaceOverlay(n&&Ft.params.showFaceOverlay),Ft.showFaceFeedbackBox(n&&Ft.params.showFaceFeedbackBox),Ft},Ft.showVideo=function(n){return Ft.params.showVideo=n,Ve&&mp(Ve),Pn&&mp(Pn),Ft},Ft.showFaceOverlay=function(n){return Ft.params.showFaceOverlay=n,Bn&&(Bn.style.display=n?"block":"none"),Ft},Ft.showFaceFeedbackBox=function(n){return Ft.params.showFaceFeedbackBox=n,Sr&&(Sr.style.display=n?"block":"none"),Ft},Ft.showPredictionPoints=function(n){return Ft.params.showGazeDot=n,Xn&&(Xn.style.display=n?"block":"none"),Ft},Ft.saveDataAcrossSessions=function(n){return Ft.params.saveDataAcrossSessions=n,Ft},Ft.applyKalmanFilter=function(n){return Ft.params.applyKalmanFilter=n,Ft},Ft.setCameraConstraints=async function(n){var t,e;if(Ft.params.camConstraints=n,pp){Ft.pause(),t=pp.getVideoTracks()[0];try{await t.applyConstraints(Ft.params.camConstraints),tk((e=t.getSettings()).width,e.height)}catch(r){return void console.log(r)}Ft.setVideoViewerSize(Ft.params.videoViewerWidth,Ft.params.videoViewerHeight),Ft.getTracker().reset(),await Ft.resume()}},Ft.setStaticVideo=function(n){return bg=n,Ft},Ft.setVideoViewerSize=function(n,t){Ft.params.videoViewerWidth=n,Ft.params.videoViewerHeight=t,Ve.style.width=n+"px",Ve.style.height=t+"px",Pn.style.width=n+"px",Pn.style.height=t+"px",Bn.style.width=n+"px",Bn.style.height=t+"px";var e=Ft.computeValidationBoxSize();Sr.style.top=e[0]+"px",Sr.style.left=e[1]+"px",Sr.style.width=e[2]+"px",Sr.style.height=e[3]+"px"},Ft.addMouseEventListeners=function(){return J2(),Ft},Ft.removeMouseEventListeners=function(){return document.removeEventListener("click",Y2,!0),document.removeEventListener("mousemove",Z2,!0),Ft},Ft.recordScreenPosition=function(n,t,e){return Ng(n,t,e||dp[0]),Ft},Ft.storePoints=function(n,t,e){W2[e]=n,V2[e]=t},Ft.setTracker=function(n){if(fp[n]===void 0){for(var t in console.log("Invalid tracker selection"),console.log("Options are: "),fp)console.log(t);return Ft}return vg=fp[n](),Ft},Ft.setRegression=function(n){if(Bl[n]===void 0){for(var t in console.log("Invalid regression selection"),console.log("Options are: "),Bl)console.log(t);return Ft}return jo=dr[0].getData(),(dr=[Bl[n]()])[0].setData(jo),Ft},Ft.addTrackerModule=function(n,t){fp[n]=function(){return new t}},Ft.addRegressionModule=function(n,t){Bl[n]=function(){return new t}},Ft.addRegression=function(n){var t=Bl[n]();return jo=dr[0].getData(),t.setData(jo),dr.push(t),Ft},Ft.setGazeListener=function(n){return xg=n,Ft},Ft.clearGazeListener=function(){return xg=G2,Ft},Ft.setVideoElementCanvas=function(n){return pr=n},Ft.clearData=async function(){(function(){for(var n in Ml().clear(),dr)dr[n].init()})()},Ft.getTracker=function(){return vg},Ft.getRegression=function(){return dr},Ft.getCurrentPrediction=function(n){return X2(n)},Ft.params.getEventTypes=function(){return dp.slice()},Ft.getVideoElementCanvas=function(){return pr},Ft.getVideoPreviewToCameraResolutionRatio=function(){return[Ft.params.videoViewerWidth/Ve.videoWidth,Ft.params.videoViewerHeight/Ve.videoHeight]},Ft.getStoredPoints=function(){return[W2,V2]};let J5=Ft})(),bp=__webpack_exports__.default})();export{bp as webgazer};
/*!
    localForage -- Offline Storage, Improved
    Version 1.7.3
    https://localforage.github.io/localForage
    (c) 2013-2017 Mozilla, Apache License 2.0
*/
/*!
 * 
 *  WebGazer.js: Democratizing Webcam Eye Tracking on the Browser
 *  Copyright (c) 2016, Brown HCI Group
 *  Licensed under GPLv3. Companies with a valuation of less than $1M can use WebGazer.js under LGPLv3.
 *
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
